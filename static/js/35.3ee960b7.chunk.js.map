{"version":3,"sources":["routes/safe/components/Balances/utils/setTokenImgToPlaceholder.ts","routes/safe/components/Balances/assets/token_placeholder.svg","assets/icons/qrcode.svg","components/ScanQRModal/style.ts","components/ScanQRModal/index.tsx","components/ScanQRModal/ScanQRWrapper/index.tsx","components/forms/SelectField/index.tsx","components/Table/TableHead.tsx","components/Table/sorting.ts","components/Table/index.tsx","routes/safe/components/Settings/SpendingLimit/style.ts","routes/safe/components/Balances/SendModal/screens/AddressBookInput/style.ts","routes/safe/components/Balances/SendModal/screens/AddressBookInput/index.tsx","routes/safe/components/Settings/SpendingLimit/FormFields/ResetTime.tsx","routes/safe/components/Settings/SpendingLimit/FormFields/Amount.tsx","routes/safe/components/Settings/SpendingLimit/InfoDisplay/AddressInfo.tsx","routes/safe/components/Settings/SpendingLimit/InfoDisplay/ResetTimeInfo.tsx","routes/safe/components/Settings/SpendingLimit/InfoDisplay/TokenInfo.tsx","../node_modules/@material-ui/core/esm/ListItemIcon/ListItemIcon.js","logic/safe/hooks/useTokenInfo.tsx","components/layout/Table/index.tsx","../node_modules/@material-ui/core/esm/Toolbar/Toolbar.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","routes/safe/components/Balances/SendModal/screens/SendFunds/TokenSelectField/style.ts","routes/safe/components/Balances/SendModal/screens/SendFunds/TokenSelectField/index.tsx","routes/safe/components/Settings/SpendingLimit/RemoveLimitModal.tsx","routes/safe/components/Settings/SpendingLimit/LimitsTable/dataFetcher.ts","logic/hooks/useWindowDimensions.tsx","routes/safe/components/Settings/SpendingLimit/LimitsTable/SpentVsAmount.tsx","routes/safe/components/Settings/SpendingLimit/LimitsTable/index.tsx","routes/safe/components/Settings/SpendingLimit/FormFields/Beneficiary.tsx","routes/safe/components/Settings/SpendingLimit/FormFields/Token.tsx","routes/safe/components/Settings/SpendingLimit/NewLimitModal/Create.tsx","routes/safe/components/Settings/SpendingLimit/NewLimitModal/Review.tsx","routes/safe/components/Settings/SpendingLimit/NewLimitModal/index.tsx","routes/safe/components/Settings/SpendingLimit/assets/asset-amount.svg","routes/safe/components/Settings/SpendingLimit/assets/beneficiary.svg","routes/safe/components/Settings/SpendingLimit/assets/time.svg","routes/safe/components/Settings/SpendingLimit/NewLimitSteps.tsx","routes/safe/components/Settings/SpendingLimit/index.tsx"],"names":["setImageToPlaceholder","event","img","currentTarget","test","src","TokenPlaceholder","styles","createStyles","heading","padding","lg","justifyContent","maxHeight","boxSizing","loaderContainer","width","height","close","color","secondaryText","detailsContainer","backgroundColor","background","buttonRow","button","marginLeft","sm","useStyles","makeStyles","ScanQRModal","isOpen","onClose","onScan","classes","useState","fileUploadModalOpen","setFileUploadModalOpen","error","setError","cameraBlocked","setCameraBlocked","scannerRef","React","openImageDialog","current","useEffect","onFileScannedResolve","successData","console","name","Modal","description","handleClose","open","title","Row","align","className","grow","Paragraph","noMargin","size","IconButton","disableRipple","onClick","Hairline","Col","layout","middle","Block","margin","legacyMode","onError","err","data","ref","style","facingMode","Button","minWidth","variant","qrCodeBtn","cursor","ScanQRWrapper","handleScan","testId","qrModalOpen","setQrModalOpen","closeQrModal","Img","alt","role","QRIcon","value","SelectInput","disableError","formControlProps","input","onChange","restInput","label","meta","renderValue","rest","showError","submitError","dirtySinceLastSubmit","touched","inputProps","htmlFor","cellWidth","maxWidth","GnoTableHead","changeSort","property","orderAttr","onSort","props","this","columns","order","orderBy","map","column","disablePadding","sortDirection","id","static","active","direction","desc","a","b","orderProp","format","root","borderTopRightRadius","borderTopLeftRadius","boxShadow","selectRoot","lineHeight","xxl","white","paginationRoot","marginBottom","borderBottomRightRadius","borderBottomLeftRadius","loader","backProps","nextProps","GnoTable","newOrderBy","state","defaultOrder","newOrder","setState","fixed","getEmptyStyle","display","alignItems","handleChangePage","e","page","handleChangeRowsPerPage","rowsPerPage","Number","target","undefined","defaultOrderBy","find","children","defaultFixed","defaultRowsPerPage","disableLoadingOnEmptyTable","disablePagination","noBorder","orderByParam","orderParam","displayRows","fixedParam","paginationClasses","columnSort","sortedData","dataArray","cmp","fixedElems","filter","elem","List","stabilizedThis","el","index","sortedElems","sort","concat","stableSort","getSorting","formatTypeSort","slice","isEmpty","Table","TableHead","TableBody","TablePagination","backIconButtonProps","component","count","nextIconButtonProps","onPageChange","onRowsPerPageChange","rowsPerPageOptions","defaultProps","withStyles","paddingBottom","hide","visibility","actions","noBorderBottom","borderBottom","annotation","paddingLeft","ownersText","fontColor","container","actionButton","fontWeight","boldFont","marginRight","left","bottom","borderTop","border","modifyBtn","xl","fontSize","smallFontSize","removeModuleIcon","modalHeading","modalContainer","minHeight","modalManage","modalClose","modalButtonRow","modalButtonRemove","modalName","textOverflow","overflow","modalUserName","whiteSpace","modalOwner","md","modalUser","modalDescription","modalOpen","amountInput","gasCostsContainer","useTextFieldLabelStyle","borderRadius","useTextFieldInputStyle","BaseAddressBookInput","addressBookEntries","fieldMutator","setIsValidAddress","setSelectedEntry","setValidationText","validationText","networkId","useSelector","currentChainId","updateAddressInfo","addressEntry","address","validateAddress","addressErrorMessage","mustBeEthereumAddress","checkedAddr","checksumAddress","filteredEntries","filterAddressEntries","inputValue","length","onInputChange","_","reason","normalizedValue","trimSpaces","isFeatureEnabled","FEATURES","DOMAIN_LOOKUP","isValidEnsName","isValidCryptoDomainName","getAddressFromDomain","logError","Errors","_101","message","validatedAddress","chainId","labelStyles","inputStyles","Autocomplete","closeIcon","openOnFocus","filterOptions","freeSolo","options","renderInput","params","autoFocus","fullWidth","InputLabelProps","shrink","required","InputProps","getOptionLabel","renderOption","hash","showAvatar","flexGrow","AddressBookInput","currentNetworkAddressBook","errorMsg","ContractsAddressBookInput","setFilteredEntries","filterContractAddresses","filterContractAddressBookEntries","filteredADBK","onSetSelectedEntry","selectedEntry","mustBeEthereumContractAddress","contractAddressErrorMessage","SpendingLimitRadioButtons","styled","RadioButtons","theme","colors","primary","StyledSwitch","icon","hexToRgb","primaryLight","SafeRadioButtons","initialValue","groupName","onRadioChange","Switch","control","type","render","checked","ResetTimeLabel","div","ResetTimeToggle","ResetTimeOptions","RESET_TIME_OPTIONS","RINKEBY_RESET_TIME_OPTIONS","getResetTimeOptions","getNetworkName","toLowerCase","ResetTime","withResetTime","useField","subscription","resetTimeOptions","switchExplanation","Field","GnoField","AmountInput","TextField","SRCTextField","Amount","tokenAddress","visited","selectedTokenRecord","extendedSafeTokensSelector","token","validate","composeValidators","mustBeFloat","minValue","endAdornment","symbol","AddressInfo","addressBookEntryName","explorerUrl","getExplorerInfo","strong","sameString","ADDRESS_BOOK_DEFAULT_NAME","showCopyBtn","textSize","ResetTimeInfo","iconSize","iconType","text","StyledImage","StyledImageName","TokenInfo","amount","logoUri","ListItemIcon","other","_objectWithoutProperties","context","ListContext","_extends","clsx","alignItemsFlexStart","palette","action","flexShrink","marginTop","useTokenInfo","tokens","safeKnownCoins","sameAddress","Toolbar","_props$component","Component","_props$disableGutters","disableGutters","_props$variant","gutters","position","_defineProperty","spacing","paddingRight","breakpoints","up","regular","mixins","toolbar","dense","_ref","KeyboardArrowRight","_ref2","KeyboardArrowLeft","_ref3","_ref4","TablePaginationActions","_props$onChangePage","onChangePage","_props$onPageChange","useTheme","disabled","Math","ceil","defaultLabelDisplayedRows","from","to","defaultRowsPerPageOptions","colSpan","_props$ActionsCompone","ActionsComponent","_props$backIconButton","backIconButtonText","colSpanProp","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","_props$nextIconButton","nextIconButtonText","onChangeRowsPerPageProp","onChangeRowsPerPage","onRowsPerPageChangeProp","_props$rowsPerPageOpt","_props$SelectProps","SelectProps","selectId","useId","labelId","MenuItemComponent","native","MenuItem","spacer","Typography","caption","Select","select","selectIcon","InputBase","rowsPerPageOption","menuItem","key","min","typography","pxToRem","flex","textAlign","textAlignLast","useSelectedTokenStyles","tokenData","tokenImage","useSelectStyles","selectMenu","SelectedToken","ListItemText","secondary","formatAmount","balance","tokenBalance","toString","TokenSelectField","isValid","tokenClasses","SelectField","displayEmpty","RemoveLimitModal","spendingLimit","tokenInfo","spent","safeAddress","extractSafeAddress","txData","setTxData","dispatch","useDispatch","manualSafeTxGas","setManualSafeTxGas","manualGasPrice","setManualGasPrice","manualGasLimit","setManualGasLimit","beneficiary","getDeleteAllowanceTxData","useEstimateTransactionGas","txRecipient","SPENDING_LIMIT_MODULE_ADDRESS","txAmount","safeTxGas","gasCostFormatted","txEstimationExecutionStatus","isExecution","isOffChainSignature","isCreation","gasLimit","gasEstimation","gasPriceFormatted","useEstimationStatus","buttonStatus","resetTimeLabel","resetTime","resetTimeMin","confirmButtonText","ButtonStatus","LOADING","EstimationStatus","EditableTxParameters","ethGasLimit","ethGasPrice","closeEditModalCallback","txParameters","oldGasPrice","newGasPrice","oldSafeTxGas","newSafeTxGas","toggleEditMode","ModalHeader","Body","fromTokenUnit","decimals","TxParametersDetail","onEdit","isTransactionCreation","isTransactionExecution","cn","Footer","withoutBorder","Buttons","cancelButtonProps","confirmButtonProps","createTransaction","valueInWei","txNonce","safeNonce","ethParameters","notifiedTransaction","TX_NOTIFICATION_TYPES","REMOVE_SPENDING_LIMIT_TX","removeSelectedSpendingLimit","status","SPENDING_LIMIT_TABLE_BENEFICIARY_ID","SPENDING_LIMIT_TABLE_SPENT_ID","SPENDING_LIMIT_TABLE_RESET_TIME_ID","getWindowDimensions","window","innerWidth","innerHeight","SpentVsAmount","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","useWindowDimensions","showIcon","useMemo","spentInfo","formattedSpent","useFormattedAmounts","LimitsTable","granted","grantedSelector","beneficiaryColumn","custom","spentColumn","resetColumn","actionsColumn","generateColumns","autoColumns","selectedRow","setSelectedRow","TableContainer","row","tabIndex","columnId","rowElement","relativeTime","ButtonHelper","tooltip","BeneficiaryInput","BeneficiaryScan","Beneficiary","initialValues","useFormState","mutators","useForm","pristine","setPristine","setBeneficiary","addressBook","onKeyDown","scannedAddress","startsWith","replace","scannedName","TokenInput","Token","FormContainer","formMutators","args","utils","changeValue","canReview","invalid","submitting","dirtyFieldsSinceLastSubmit","values","Create","onCancel","onReview","subTitle","GnoForm","onSubmit","calculateSpendingLimitsTxData","safeVersion","spendingLimits","existentSpendingLimit","txToken","modules","transactions","isModuleEnabled","push","enableSpendingLimitModuleMultiSendTx","some","delegate","addSpendingLimitBeneficiaryMultiSendTx","getResetSpendingLimitTx","spendingLimitTxData","startTime","currentMinutes","spendingLimitArgs","spendingLimitInWei","toTokenUnit","resetBaseMin","setSpendingLimitTx","encodedTxForMultisend","setSpendingLimitMultiSendTx","spendingLimitMultiSendTx","ReviewSpendingLimits","onBack","currentSafe","currentVersion","currentDelegate","useExistentSpendingLimit","estimateGasArgs","setEstimateGasArgs","operation","gasPrice","safeModules","pair","previousResetTime","center","makeToken","step","CREATE","ethGasPriceInGWei","advancedOptionsTxParameters","handleSubmit","REVIEW","newLimitModalReducer","newState","NewLimitModal","initialStep","useReducer","create","useCallback","review","useNewLimitModal","handleReview","StepWrapper","Step","StepsLine","NewLimitSteps","AssetAmount","Time","InfoText","Text","SpendingLimit","allowances","currentSafeSpendingLimits","spendingLimitData","lastResetMin","showNewSpendingLimitModal","setShowNewSpendingLimitModal","withoutMargin","end"],"mappings":"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","file":"static/js/35.3ee960b7.chunk.js","sourcesContent":["import { SyntheticEvent } from 'react'\n\nimport TokenPlaceholder from 'src/routes/safe/components/Balances/assets/token_placeholder.svg'\n\nexport const setImageToPlaceholder = (event: SyntheticEvent<HTMLImageElement, Event>): void => {\n  const img = event.currentTarget\n  if (!/token_placeholder/.test(img.src)) {\n    img.src = TokenPlaceholder\n  }\n}\n","export default __webpack_public_path__ + \"static/media/token_placeholder.c1abe466.svg\";","export default __webpack_public_path__ + \"static/media/qrcode.fec1b6d8.svg\";","import { background, lg, secondaryText, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: lg,\n    justifyContent: 'space-between',\n    maxHeight: '75px',\n    boxSizing: 'border-box',\n  },\n  loaderContainer: {\n    width: '100%',\n    height: '100%',\n  },\n  close: {\n    height: '25px',\n    width: '25px',\n    color: secondaryText,\n  },\n  detailsContainer: {\n    backgroundColor: background,\n    maxHeight: '450px',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n  button: {\n    '&:last-child': {\n      marginLeft: sm,\n    },\n  },\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport * as React from 'react'\nimport QrReader from 'react-qr-reader'\n\nimport { styles } from './style'\n\nimport Modal from 'src/components/Modal'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { useEffect, useState } from 'react'\n\nconst useStyles = makeStyles(styles)\n\ntype Props = {\n  isOpen: boolean\n  onClose: () => void\n  onScan: (value: string) => void\n}\n\nexport const ScanQRModal = ({ isOpen, onClose, onScan }: Props): React.ReactElement => {\n  const classes = useStyles()\n  const [fileUploadModalOpen, setFileUploadModalOpen] = useState<boolean>(false)\n  const [error, setError] = useState<string | null>(null)\n  const [cameraBlocked, setCameraBlocked] = useState<boolean>(false)\n  const scannerRef: any = React.createRef()\n  const openImageDialog = React.useCallback(() => {\n    scannerRef.current.openImageDialog()\n  }, [scannerRef])\n\n  useEffect(() => {\n    if (!fileUploadModalOpen && cameraBlocked && !error) {\n      setFileUploadModalOpen(true)\n      openImageDialog()\n    }\n  }, [cameraBlocked, openImageDialog, fileUploadModalOpen, setFileUploadModalOpen, error])\n\n  const onFileScannedResolve = (error: Error | null, successData: string | null) => {\n    if (error) {\n      console.error('QR code error', error)\n\n      if (error.name === 'NotAllowedError' || error.name === 'PermissionDismissedError') {\n        setCameraBlocked(true)\n        setFileUploadModalOpen(false)\n      } else {\n        setError('The QR could not be read')\n      }\n      return\n    }\n\n    if (successData) {\n      onScan(successData)\n    } else if (cameraBlocked) {\n      setError('The QR could not be read')\n    }\n  }\n\n  return (\n    <Modal description=\"Receive Tokens Form\" handleClose={onClose} open={isOpen} title=\"Receive Tokens\">\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph noMargin size=\"xl\">\n          Scan QR\n        </Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.close} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Col className={classes.detailsContainer} layout=\"column\" middle=\"xs\">\n        {error && (\n          <Block padding=\"md\" margin=\"md\">\n            {error}\n          </Block>\n        )}\n        <QrReader\n          legacyMode={cameraBlocked}\n          onError={(err: Error) => onFileScannedResolve(err, null)}\n          onScan={(data: string) => onFileScannedResolve(null, data)}\n          ref={scannerRef}\n          style={{ width: '400px', height: '400px' }}\n          facingMode=\"user\"\n        />\n      </Col>\n      <Hairline />\n      <Row align=\"center\" className={classes.buttonRow}>\n        <Button className={classes.button} color=\"secondary\" minWidth={154} onClick={onClose}>\n          Close\n        </Button>\n        <Button\n          className={classes.button}\n          color=\"primary\"\n          minWidth={154}\n          onClick={() => {\n            setCameraBlocked(true)\n            setError(null)\n            setFileUploadModalOpen(false)\n          }}\n          variant=\"contained\"\n        >\n          Upload an image\n        </Button>\n      </Row>\n    </Modal>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport { ReactElement, useState } from 'react'\n\nimport QRIcon from 'src/assets/icons/qrcode.svg'\nimport { ScanQRModal } from 'src/components/ScanQRModal'\nimport Img from 'src/components/layout/Img'\n\nconst useStyles = makeStyles({\n  qrCodeBtn: {\n    cursor: 'pointer',\n  },\n})\n\ntype Props = {\n  handleScan: (dataResult: string, closeQrModal: () => void) => void\n  testId?: string\n}\n\nexport const ScanQRWrapper = ({ handleScan, testId }: Props): ReactElement => {\n  const classes = useStyles()\n  const [qrModalOpen, setQrModalOpen] = useState(false)\n\n  const openQrModal = () => {\n    setQrModalOpen(true)\n  }\n\n  const closeQrModal = () => {\n    setQrModalOpen(false)\n  }\n\n  const onScanFinished = (value: string) => {\n    handleScan(value, closeQrModal)\n  }\n\n  return (\n    <>\n      <Img\n        alt=\"Scan QR\"\n        className={classes.qrCodeBtn}\n        height={20}\n        onClick={() => openQrModal()}\n        role=\"button\"\n        src={QRIcon}\n        testId={testId || 'qr-icon'}\n      />\n      {qrModalOpen && <ScanQRModal isOpen={qrModalOpen} onClose={closeQrModal} onScan={onScanFinished} />}\n    </>\n  )\n}\n","import FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\n\nconst style = {\n  minWidth: '100%',\n}\n\nconst SelectInput = ({\n  classes,\n  disableError,\n  formControlProps,\n  input: { name, onChange, value, ...restInput },\n  label,\n  meta,\n  renderValue,\n  ...rest\n}) => {\n  const showError = ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) && meta.touched && !disableError\n  const inputProps = {\n    ...restInput,\n    name,\n  }\n\n  return (\n    <FormControl {...formControlProps} error={showError} style={style}>\n      <InputLabel htmlFor={name}>{label}</InputLabel>\n      <Select\n        classes={classes}\n        inputProps={inputProps}\n        onChange={onChange}\n        renderValue={renderValue}\n        value={value}\n        {...rest}\n      />\n      {showError && <FormHelperText>{meta.error || meta.submitError}</FormHelperText>}\n    </FormControl>\n  )\n}\n\nexport default SelectInput\n","import TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport * as React from 'react'\n\ninterface CellWidth {\n  maxWidth: string\n}\n\nexport const cellWidth = (width?: string | number): CellWidth | undefined => {\n  if (!width) {\n    return undefined\n  }\n\n  return {\n    maxWidth: `${width}px`,\n  }\n}\n\nclass GnoTableHead extends React.PureComponent<any> {\n  changeSort = (property, orderAttr) => () => {\n    const { onSort } = this.props\n\n    onSort(property, orderAttr)\n  }\n\n  render() {\n    const { columns, order, orderBy } = this.props\n\n    return (\n      <TableHead>\n        <TableRow>\n          {columns.map((column) => (\n            <TableCell\n              align={column.align}\n              key={column.id}\n              padding={column.disablePadding ? 'none' : 'normal'}\n              sortDirection={orderBy === column.id ? order : false}\n            >\n              {column.static ? (\n                <div style={column.style}>{column.label}</div>\n              ) : (\n                <TableSortLabel\n                  active={orderBy === column.id}\n                  direction={order}\n                  onClick={this.changeSort(column.id, column.order)}\n                  style={column.style}\n                >\n                  {column.label}\n                </TableSortLabel>\n              )}\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    )\n  }\n}\n\nexport default GnoTableHead\n","import { List } from 'immutable'\n\nexport const FIXED = 'fixed'\n\nexport const buildOrderFieldFrom = (attr: string): string => `${attr}Order`\n\nconst desc = (\n  a: string,\n  b: string,\n  orderBy: string,\n  orderProp: boolean,\n  format: (value: string | number) => string | number,\n): number => {\n  const order = orderProp ? buildOrderFieldFrom(orderBy) : orderBy\n\n  if (format(b[order]) < format(a[order])) {\n    return -1\n  }\n  if (format(b[order]) > format(a[order])) {\n    return 1\n  }\n\n  return 0\n}\n\n// eslint-disable-next-line\nexport const stableSort = (dataArray, cmp, fixed) => {\n  const fixedElems = fixed ? dataArray.filter((elem) => elem.fixed) : List([])\n  const data = fixed ? dataArray.filter((elem) => !elem[FIXED]) : dataArray\n  let stabilizedThis = data.map((el, index) => [el, index])\n\n  stabilizedThis = stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0])\n\n    if (order !== 0) {\n      return order\n    }\n\n    return a[1] - b[1]\n  })\n\n  const sortedElems = stabilizedThis.map((el) => el[0])\n\n  return fixedElems.concat(sortedElems)\n}\n\nexport const getSorting = (\n  order: 'desc' | 'asc',\n  orderBy: string,\n  orderProp: boolean,\n  format: (value: string | number) => string | number = (value) => value,\n): ((a: string, b: string) => number) =>\n  order === 'desc'\n    ? (a, b) => desc(a, b, orderBy, orderProp, format)\n    : (a, b) => -desc(a, b, orderBy, orderProp, format)\n","import { Loader } from '@gnosis.pm/safe-react-components'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport { withStyles } from '@material-ui/core/styles'\nimport * as React from 'react'\n\nimport TableHead from 'src/components/Table/TableHead'\nimport { getSorting, stableSort } from 'src/components/Table/sorting'\nimport Row from 'src/components/layout/Row'\nimport { sm, xxl } from 'src/theme/variables'\n\nconst styles = {\n  root: {\n    backgroundColor: 'white',\n    borderTopRightRadius: sm,\n    borderTopLeftRadius: sm,\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n  },\n  selectRoot: {\n    lineHeight: xxl,\n    backgroundColor: 'white',\n  },\n  white: {\n    backgroundColor: 'white',\n  },\n  paginationRoot: {\n    backgroundColor: 'white',\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n    marginBottom: '90px',\n    borderBottomRightRadius: sm,\n    borderBottomLeftRadius: sm,\n  },\n  loader: {\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n  },\n}\n\nconst FIXED_EMPTY_HEIGHT = 255\n\nconst backProps = {\n  'aria-label': 'Previous Page',\n}\n\nconst nextProps = {\n  'aria-label': 'Next Page',\n}\n\nclass GnoTable extends React.Component<any, any> {\n  static defaultProps = {\n    defaultOrder: 'asc',\n    disablePagination: false,\n    defaultRowsPerPage: 5,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      page: 0,\n      order: undefined,\n      orderBy: undefined,\n      fixed: undefined,\n      orderProp: false,\n      rowsPerPage: undefined,\n    }\n  }\n\n  componentDidMount() {\n    const { columns, defaultOrderBy } = this.props\n\n    if (defaultOrderBy && columns) {\n      const defaultOrderCol = columns.find(({ id }) => id === defaultOrderBy)\n\n      if (defaultOrderCol.order) {\n        this.setState({\n          orderProp: true,\n        })\n      }\n    }\n  }\n\n  onSort = (newOrderBy, orderProp) => {\n    const { order, orderBy } = this.state\n    const { defaultOrder } = this.props\n    let newOrder = 'desc'\n\n    // if table was previously sorted by the user\n    if (order && orderBy === newOrderBy && order === 'desc') {\n      newOrder = 'asc'\n    } else if (!order && defaultOrder === 'desc') {\n      // if it was not sorted and defaultOrder is used\n      newOrder = 'asc'\n    }\n\n    this.setState(() => ({\n      order: newOrder,\n      orderBy: newOrderBy,\n      orderProp,\n      fixed: false,\n    }))\n  }\n\n  getEmptyStyle = () => ({\n    height: `calc(100vh - ${FIXED_EMPTY_HEIGHT}px)`,\n    borderTopRightRadius: sm,\n    borderTopLeftRadius: sm,\n    backgroundColor: 'white',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  })\n\n  handleChangePage = (e, page) => {\n    this.setState({ page })\n  }\n\n  handleChangeRowsPerPage = (e) => {\n    const rowsPerPage = Number(e.target.value)\n    this.setState({ rowsPerPage })\n  }\n\n  render() {\n    const {\n      children,\n      classes,\n      columns,\n      data,\n      defaultFixed,\n      defaultOrder,\n      defaultOrderBy,\n      defaultRowsPerPage,\n      disableLoadingOnEmptyTable,\n      disablePagination,\n      label,\n      noBorder,\n      size,\n    }: any = this.props\n    const { fixed, order, orderBy, orderProp, page, rowsPerPage } = this.state\n    const orderByParam = orderBy || defaultOrderBy\n    const orderParam = order || defaultOrder\n    const displayRows = rowsPerPage || defaultRowsPerPage\n    const fixedParam = typeof fixed !== 'undefined' ? fixed : !!defaultFixed\n    const paginationClasses = {\n      selectRoot: classes.selectRoot,\n      root: !noBorder && classes.paginationRoot,\n      input: classes.white,\n    }\n    const columnSort = columns.find((column) => column.id === orderByParam)\n    let sortedData = stableSort(\n      data,\n      getSorting(orderParam, orderByParam, orderProp, columnSort?.formatTypeSort),\n      fixedParam,\n    )\n\n    if (!disablePagination) {\n      sortedData = sortedData.slice(page * displayRows, page * displayRows + displayRows)\n    }\n\n    const isEmpty = size === 0 && !disableLoadingOnEmptyTable\n\n    return (\n      <>\n        {!isEmpty && (\n          <Table aria-labelledby={label} className={noBorder ? '' : classes.root}>\n            <TableHead columns={columns} onSort={this.onSort} order={order} orderBy={orderByParam} />\n            <TableBody>{children(sortedData)}</TableBody>\n          </Table>\n        )}\n        {isEmpty && (\n          <Row className={classes.loader} style={this.getEmptyStyle()}>\n            <Loader size=\"sm\" />\n          </Row>\n        )}\n        {!disablePagination && (\n          <TablePagination\n            backIconButtonProps={backProps}\n            classes={paginationClasses}\n            component=\"div\"\n            count={size}\n            nextIconButtonProps={nextProps}\n            onPageChange={this.handleChangePage}\n            onRowsPerPageChange={this.handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={displayRows}\n            rowsPerPageOptions={[5, 10, 25, 50, 100]}\n          />\n        )}\n      </>\n    )\n  }\n}\n\nexport default withStyles(styles as any)(GnoTable)\n","import { createStyles, makeStyles } from '@material-ui/core'\nimport {\n  background,\n  boldFont,\n  border,\n  error,\n  fontColor,\n  lg,\n  md,\n  secondaryText,\n  sm,\n  smallFontSize,\n  xl,\n} from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    title: {\n      padding: lg,\n      paddingBottom: 0,\n    },\n    hide: {\n      '&:hover': {\n        backgroundColor: '#f7f5f5',\n      },\n      '&:hover $actions': {\n        visibility: 'initial',\n      },\n    },\n    actions: {\n      justifyContent: 'flex-end',\n      visibility: 'hidden',\n    },\n    noBorderBottom: {\n      '& > td': {\n        borderBottom: 'none',\n      },\n    },\n    annotation: {\n      paddingLeft: lg,\n    },\n    ownersText: {\n      color: secondaryText,\n      '& b': {\n        color: fontColor,\n      },\n    },\n    container: {\n      padding: lg,\n    },\n    actionButton: {\n      fontWeight: boldFont,\n      marginRight: sm,\n    },\n    buttonRow: {\n      padding: lg,\n      left: 0,\n      bottom: 0,\n      boxSizing: 'border-box',\n      width: '100%',\n      justifyContent: 'flex-end',\n      borderTop: `2px solid ${border}`,\n    },\n    modifyBtn: {\n      height: xl,\n      fontSize: smallFontSize,\n    },\n    removeModuleIcon: {\n      marginLeft: lg,\n      cursor: 'pointer',\n    },\n    modalHeading: {\n      boxSizing: 'border-box',\n      justifyContent: 'space-between',\n      height: '74px',\n      padding: `${sm} ${lg}`,\n    },\n    modalContainer: {\n      minHeight: '369px',\n    },\n    modalManage: {\n      fontSize: lg,\n    },\n    modalClose: {\n      height: '35px',\n      width: '35px',\n    },\n    modalButtonRow: {\n      height: '84px',\n      justifyContent: 'center',\n    },\n    modalButtonRemove: {\n      color: '#fff',\n      backgroundColor: error,\n      height: '42px',\n    },\n    modalName: {\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n    },\n    modalUserName: {\n      whiteSpace: 'nowrap',\n    },\n    modalOwner: {\n      backgroundColor: background,\n      padding: md,\n      alignItems: 'center',\n    },\n    modalUser: {\n      justifyContent: 'left',\n    },\n    modalDescription: {\n      padding: md,\n    },\n    modalOpen: {\n      paddingLeft: sm,\n      width: 'auto',\n      '&:hover': {\n        cursor: 'pointer',\n      },\n    },\n    amountInput: {\n      width: '100% !important',\n    },\n    gasCostsContainer: {\n      backgroundColor: background,\n      padding: `0 ${lg}`,\n    },\n  }),\n)\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nexport const useTextFieldLabelStyle = makeStyles(\n  createStyles({\n    root: {\n      overflow: 'hidden',\n      borderRadius: 4,\n      fontSize: '15px',\n      width: '500px',\n    },\n  }),\n)\n\nexport const useTextFieldInputStyle = makeStyles(\n  createStyles({\n    root: {\n      fontSize: '14px',\n      width: '420px',\n    },\n  }),\n)\n","import { EthHashInfo } from '@gnosis.pm/safe-react-components'\nimport MuiTextField from '@material-ui/core/TextField'\nimport Autocomplete, { AutocompleteProps } from '@material-ui/lab/Autocomplete'\nimport { Dispatch, ReactElement, SetStateAction, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { mustBeEthereumAddress, mustBeEthereumContractAddress } from 'src/components/forms/validator'\nimport { isFeatureEnabled } from 'src/config'\nimport { FEATURES } from 'src/config/networks/network.d'\nimport { AddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { currentNetworkAddressBook } from 'src/logic/addressBook/store/selectors'\nimport { filterContractAddressBookEntries, filterAddressEntries } from 'src/logic/addressBook/utils'\nimport { isValidEnsName, isValidCryptoDomainName } from 'src/logic/wallets/ethAddresses'\nimport { getAddressFromDomain } from 'src/logic/wallets/getWeb3'\nimport {\n  useTextFieldInputStyle,\n  useTextFieldLabelStyle,\n} from 'src/routes/safe/components/Balances/SendModal/screens/AddressBookInput/style'\nimport { trimSpaces } from 'src/utils/strings'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { checksumAddress } from 'src/utils/checksumAddress'\nimport { currentChainId } from 'src/logic/config/store/selectors'\n\nexport interface AddressBookProps {\n  fieldMutator: (address: string) => void\n  label?: string\n  pristine?: boolean\n  recipientAddress?: string\n  errorMsg?: string\n  setIsValidAddress: (valid: boolean) => void\n  setSelectedEntry: Dispatch<SetStateAction<{ address: string; name: string }> | null>\n}\n\nexport interface BaseAddressBookInputProps extends AddressBookProps {\n  addressBookEntries: AddressBookEntry[]\n  setSelectedEntry: (args: { address: string; name: string } | null) => void\n  setValidationText: Dispatch<SetStateAction<string | undefined>>\n  validationText: string | undefined\n}\n\nconst BaseAddressBookInput = ({\n  addressBookEntries,\n  fieldMutator,\n  label = 'Recipient',\n  setIsValidAddress,\n  setSelectedEntry,\n  setValidationText,\n  validationText,\n}: BaseAddressBookInputProps): ReactElement => {\n  const networkId = useSelector(currentChainId)\n\n  const updateAddressInfo = (addressEntry: AddressBookEntry): void => {\n    setSelectedEntry(addressEntry)\n    fieldMutator(addressEntry.address)\n  }\n\n  const validateAddress = (address: string): AddressBookEntry | string | undefined => {\n    const addressErrorMessage = mustBeEthereumAddress(address)\n    setIsValidAddress(!addressErrorMessage)\n\n    if (addressErrorMessage) {\n      setValidationText(addressErrorMessage)\n      return\n    }\n\n    // Automatically checksum valid addresses\n    let checkedAddr: string\n    try {\n      checkedAddr = checksumAddress(address)\n    } catch (err) {\n      checkedAddr = address\n    }\n\n    const filteredEntries = filterAddressEntries(addressBookEntries, { inputValue: checkedAddr })\n    return filteredEntries.length === 1 ? filteredEntries[0] : checkedAddr\n  }\n\n  const onChange: AutocompleteProps<AddressBookEntry, false, false, true>['onChange'] = (_, value, reason) => {\n    switch (reason) {\n      case 'select-option': {\n        const { address, name, chainId } = value as AddressBookEntry\n        updateAddressInfo({ address, name, chainId })\n        break\n      }\n    }\n  }\n\n  const onInputChange: AutocompleteProps<AddressBookEntry, false, false, true>['onInputChange'] = async (\n    _,\n    value,\n    reason,\n  ) => {\n    switch (reason) {\n      case 'input': {\n        const normalizedValue = trimSpaces(value)\n\n        if (!normalizedValue) {\n          break\n        }\n\n        // ENS-enabled resolve/validation\n        if (\n          isFeatureEnabled(FEATURES.DOMAIN_LOOKUP) &&\n          (isValidEnsName(normalizedValue) || isValidCryptoDomainName(normalizedValue))\n        ) {\n          let address = ''\n          try {\n            address = await getAddressFromDomain(normalizedValue)\n          } catch (err) {\n            logError(Errors._101, err.message)\n          }\n\n          const validatedAddress = validateAddress(address)\n\n          if (!validatedAddress) {\n            fieldMutator('')\n            break\n          }\n\n          const newEntry =\n            typeof validatedAddress === 'string'\n              ? {\n                  address,\n                  name: normalizedValue,\n                  chainId: networkId,\n                }\n              : validatedAddress\n\n          updateAddressInfo(newEntry)\n          break\n        }\n\n        // ETH address validation\n        const validatedAddress = validateAddress(normalizedValue)\n\n        if (!validatedAddress) {\n          fieldMutator('')\n          break\n        }\n\n        const newEntry =\n          typeof validatedAddress === 'string'\n            ? {\n                address: validatedAddress,\n                name: '',\n                chainId: networkId,\n              }\n            : validatedAddress\n\n        updateAddressInfo(newEntry)\n\n        break\n      }\n    }\n  }\n\n  const labelStyles = useTextFieldLabelStyle()\n  const inputStyles = useTextFieldInputStyle()\n\n  return (\n    <Autocomplete<AddressBookEntry, false, false, true>\n      closeIcon={null}\n      openOnFocus={false}\n      filterOptions={filterAddressEntries}\n      freeSolo\n      onChange={onChange}\n      onInputChange={onInputChange}\n      options={addressBookEntries}\n      id=\"address-book-input\"\n      renderInput={(params) => (\n        <MuiTextField\n          {...params}\n          autoFocus={true}\n          error={!!validationText}\n          fullWidth\n          variant=\"filled\"\n          label={validationText ? validationText : label}\n          InputLabelProps={{ shrink: true, required: true, classes: labelStyles }}\n          InputProps={{ ...params.InputProps, classes: inputStyles }}\n        />\n      )}\n      getOptionLabel={({ address }) => address}\n      renderOption={({ address, name }) => <EthHashInfo hash={address} name={name} showAvatar />}\n      role=\"listbox\"\n      style={{ display: 'flex', flexGrow: 1 }}\n    />\n  )\n}\n\nexport const AddressBookInput = (props: AddressBookProps): ReactElement => {\n  const addressBookEntries = useSelector(currentNetworkAddressBook)\n  const [validationText, setValidationText] = useState<string>('')\n\n  useEffect(() => {\n    if (props.errorMsg) {\n      setValidationText(props.errorMsg)\n    }\n  }, [props.errorMsg])\n\n  return (\n    <BaseAddressBookInput\n      addressBookEntries={addressBookEntries}\n      setValidationText={setValidationText}\n      validationText={validationText}\n      {...props}\n    />\n  )\n}\n\nexport const ContractsAddressBookInput = ({\n  setIsValidAddress,\n  setSelectedEntry,\n  ...props\n}: AddressBookProps): ReactElement => {\n  const addressBookEntries = useSelector(currentNetworkAddressBook)\n  const [filteredEntries, setFilteredEntries] = useState<AddressBookEntry[]>([])\n  const [validationText, setValidationText] = useState<string>('')\n\n  useEffect(() => {\n    const filterContractAddresses = async (): Promise<void> => {\n      const filteredADBK = await filterContractAddressBookEntries(addressBookEntries)\n      setFilteredEntries(filteredADBK)\n    }\n    filterContractAddresses()\n  }, [addressBookEntries])\n\n  const onSetSelectedEntry = async (selectedEntry) => {\n    if (selectedEntry?.address) {\n      // verify if `address` is a contract\n      const contractAddressErrorMessage = await mustBeEthereumContractAddress(selectedEntry.address)\n      setIsValidAddress(!contractAddressErrorMessage)\n      setValidationText(contractAddressErrorMessage ?? '')\n      setSelectedEntry(selectedEntry)\n    }\n  }\n\n  return (\n    <BaseAddressBookInput\n      addressBookEntries={filteredEntries}\n      setIsValidAddress={setIsValidAddress}\n      setSelectedEntry={onSetSelectedEntry}\n      setValidationText={setValidationText}\n      validationText={validationText}\n      {...props}\n    />\n  )\n}\n","import { RadioButtons, Text } from '@gnosis.pm/safe-react-components'\nimport { FormControlLabel, hexToRgb, Switch as SwitchMui } from '@material-ui/core'\nimport { ReactElement } from 'react'\nimport { useField } from 'react-final-form'\nimport styled from 'styled-components'\n\nimport { getNetworkName } from 'src/config'\nimport { Field } from 'src/routes/safe/components/Settings/SpendingLimit/FormFields/Amount'\n\n// TODO: propose refactor in safe-react-components based on this requirements\nconst SpendingLimitRadioButtons = styled(RadioButtons)`\n  & .MuiRadio-colorPrimary.Mui-checked {\n    color: ${({ theme }) => theme.colors.primary};\n  }\n`\n\n// TODO: add `name` and `value` to SRC Switch, as they're required for a better RFF integration\nconst StyledSwitch = styled(({ ...rest }) => <SwitchMui {...rest} />)`\n  && {\n    .MuiIconButton-label,\n    .MuiSwitch-colorSecondary {\n      color: ${({ theme }) => theme.colors.icon};\n    }\n\n    .MuiSwitch-colorSecondary.Mui-checked .MuiIconButton-label {\n      color: ${({ theme }) => theme.colors.primary};\n    }\n\n    .MuiSwitch-colorSecondary.Mui-checked:hover {\n      background-color: ${({ theme }) => hexToRgb(`${theme.colors.primary}03`)};\n    }\n\n    .Mui-checked + .MuiSwitch-track {\n      background-color: ${({ theme }) => theme.colors.primaryLight};\n    }\n  }\n`\n\ninterface RadioButtonOption {\n  label: string\n  value: string\n}\n\ninterface RadioButtonProps {\n  options: RadioButtonOption[]\n  initialValue: string\n  groupName: string\n}\n\nconst SafeRadioButtons = ({ options, initialValue, groupName }: RadioButtonProps): ReactElement => (\n  <Field name={groupName} initialValue={initialValue}>\n    {({ input: { name, value, onChange } }) => (\n      <SpendingLimitRadioButtons name={name} value={value || initialValue} onRadioChange={onChange} options={options} />\n    )}\n  </Field>\n)\n\nconst Switch = ({ label, name }: { label: string; name: string }): ReactElement => (\n  <FormControlLabel\n    label={label}\n    control={\n      <Field\n        name={name}\n        type=\"checkbox\"\n        render={({ input: { checked, onChange, name, value } }) => (\n          <StyledSwitch checked={checked} onChange={onChange} name={name} value={value} />\n        )}\n      />\n    }\n  />\n)\n\nconst ResetTimeLabel = styled.div`\n  grid-area: resetTimeLabel;\n`\n\nconst ResetTimeToggle = styled.div`\n  grid-area: resetTimeToggle;\n`\n\nconst ResetTimeOptions = styled.div`\n  grid-area: resetTimeOption;\n`\n\nconst RESET_TIME_OPTIONS = [\n  { label: '1 day', value: '1440' }, // 1 day x 24h x 60min\n  { label: '1 week', value: '10080' }, // 7 days x 24h x 60min\n  { label: '1 month', value: '43200' }, // 30 days x 24h x 60min\n]\n\nconst RINKEBY_RESET_TIME_OPTIONS = [\n  { label: '5 minutes', value: '5' },\n  { label: '30 minutes', value: '30' },\n  { label: '1 hour', value: '60' },\n]\n\nexport const getResetTimeOptions = (): RadioButtonOption[] => {\n  const currentNetwork = getNetworkName().toLowerCase()\n  return currentNetwork !== 'rinkeby' ? RESET_TIME_OPTIONS : RINKEBY_RESET_TIME_OPTIONS\n}\n\nconst ResetTime = (): ReactElement => {\n  const {\n    input: { value: withResetTime },\n  } = useField('withResetTime', { subscription: { value: true } })\n\n  const resetTimeOptions = getResetTimeOptions()\n\n  const switchExplanation = withResetTime ? 'choose reset time period' : 'one time'\n\n  return (\n    <>\n      <ResetTimeLabel>\n        <Text size=\"xl\">Set a reset time so the allowance automatically refills after the defined time period.</Text>\n      </ResetTimeLabel>\n      <ResetTimeToggle>\n        <Switch label={`Reset time (${switchExplanation})`} name=\"withResetTime\" />\n      </ResetTimeToggle>\n      {withResetTime && (\n        <ResetTimeOptions>\n          <SafeRadioButtons groupName=\"resetTime\" initialValue={resetTimeOptions[0].value} options={resetTimeOptions} />\n        </ResetTimeOptions>\n      )}\n    </>\n  )\n}\n\nexport default ResetTime\n","import { TextField as SRCTextField } from '@gnosis.pm/safe-react-components'\nimport { ReactElement } from 'react'\nimport { useField } from 'react-final-form'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\n\nimport GnoField from 'src/components/forms/Field'\nimport { composeValidators, minValue, mustBeFloat, required } from 'src/components/forms/validator'\nimport { extendedSafeTokensSelector } from 'src/routes/safe/container/selector'\nimport { useStyles } from 'src/routes/safe/components/Settings/SpendingLimit/style'\n\nexport const Field = styled(GnoField)`\n  margin: 8px 0;\n  width: 100%;\n`\n\nconst AmountInput = styled.div`\n  grid-area: amountInput;\n`\n\nconst TextField = styled(SRCTextField)`\n  margin: 0;\n`\n\nconst Amount = (): ReactElement => {\n  const classes = useStyles()\n\n  const {\n    input: { value: tokenAddress },\n  } = useField('token', { subscription: { value: true } })\n  const {\n    meta: { touched, visited },\n  } = useField('amount', { subscription: { touched: true, visited: true } })\n\n  const tokens = useSelector(extendedSafeTokensSelector)\n\n  const selectedTokenRecord = tokens.find((token) => token.address === tokenAddress)\n\n  const validate = (touched || visited) && composeValidators(required, mustBeFloat, minValue(0, false))\n\n  return (\n    <AmountInput>\n      <Field\n        component={TextField}\n        label=\"Amount*\"\n        name=\"amount\"\n        type=\"text\"\n        data-testid=\"amount-input\"\n        endAdornment={selectedTokenRecord?.symbol}\n        className={classes.amountInput}\n        validate={validate}\n      />\n    </AmountInput>\n  )\n}\n\nexport default Amount\n","import { EthHashInfo, Text } from '@gnosis.pm/safe-react-components'\nimport { ReactElement } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { getExplorerInfo } from 'src/config'\nimport { addressBookEntryName } from 'src/logic/addressBook/store/selectors'\nimport { ADDRESS_BOOK_DEFAULT_NAME } from 'src/logic/addressBook/model/addressBook'\nimport { sameString } from 'src/utils/strings'\n\ninterface AddressInfoProps {\n  address: string\n  title?: string\n}\n\nconst AddressInfo = ({ address, title }: AddressInfoProps): ReactElement => {\n  const name = useSelector((state) => addressBookEntryName(state, { address }))\n  const explorerUrl = getExplorerInfo(address)\n\n  return (\n    <>\n      {title && (\n        <Text size=\"xl\" strong>\n          {title}\n        </Text>\n      )}\n      <EthHashInfo\n        hash={address}\n        name={sameString(name, ADDRESS_BOOK_DEFAULT_NAME) ? undefined : name}\n        showCopyBtn\n        showAvatar\n        textSize=\"lg\"\n        explorerUrl={explorerUrl}\n      />\n    </>\n  )\n}\n\nexport default AddressInfo\n","import { IconText, Text } from '@gnosis.pm/safe-react-components'\nimport { ReactElement } from 'react'\n\nimport Row from 'src/components/layout/Row'\n\ninterface ResetTimeInfoProps {\n  title?: string\n  label?: string\n}\n\nconst ResetTimeInfo = ({ title, label }: ResetTimeInfoProps): ReactElement => (\n  <>\n    <Text size=\"xl\" strong>\n      {title}\n    </Text>\n    {label ? (\n      <Row align=\"center\" margin=\"md\">\n        <IconText iconSize=\"md\" iconType=\"fuelIndicator\" text={label} textSize=\"lg\" />\n      </Row>\n    ) : (\n      <Row align=\"center\" margin=\"md\">\n        <Text size=\"lg\">One-time spending limit</Text>\n      </Row>\n    )}\n  </>\n)\n\nexport default ResetTimeInfo\n","import { Text } from '@gnosis.pm/safe-react-components'\nimport { ReactElement } from 'react'\nimport styled from 'styled-components'\n\nimport { Token } from 'src/logic/tokens/store/model/token'\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\n\nconst StyledImage = styled.img`\n  width: 32px;\n  height: 32px;\n  object-fit: contain;\n  margin: 0 8px 0 0;\n`\nconst StyledImageName = styled.div`\n  display: flex;\n  align-items: center;\n`\n\ninterface TokenInfoProps {\n  amount: string\n  title?: string\n  token: Token\n}\n\nconst TokenInfo = ({ amount, title, token }: TokenInfoProps): ReactElement => (\n  <>\n    <Text size=\"xl\" strong>\n      {title}\n    </Text>\n    <StyledImageName>\n      <StyledImage alt={token.name} onError={setImageToPlaceholder} src={token.logoUri || ''} />\n      <Text size=\"lg\">\n        {amount} {token.symbol}\n      </Text>\n    </StyledImageName>\n  </>\n)\n\nexport default TokenInfo\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      minWidth: 56,\n      color: theme.palette.action.active,\n      flexShrink: 0,\n      display: 'inline-flex'\n    },\n\n    /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n    alignItemsFlexStart: {\n      marginTop: 8\n    }\n  };\n};\n/**\n * A simple wrapper to apply `List` styles to an `Icon` or `SvgIcon`.\n */\n\nvar ListItemIcon = /*#__PURE__*/React.forwardRef(function ListItemIcon(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemIcon.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally `Icon`, `SvgIcon`,\n   * or a `@material-ui/icons` SVG icon element.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemIcon'\n})(ListItemIcon);","import { useSelector } from 'react-redux'\n\nimport { Token } from 'src/logic/tokens/store/model/token'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { safeKnownCoins } from 'src/routes/safe/container/selector'\n\nconst useTokenInfo = (address: string): Token | undefined => {\n  const tokens = useSelector(safeKnownCoins)\n\n  if (tokens) {\n    return tokens.find((token) => sameAddress(token.address, address))\n  }\n}\n\nexport default useTokenInfo\n","import Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport { ReactElement } from 'react'\n\nexport { TableBody, TableCell, TableHead, TableRow }\n\nconst buildWidthFrom = (size) => ({\n  minWidth: `${size}px`,\n})\n\nconst overflowStyle: any = {\n  overflowX: 'auto',\n}\n\n// see: https://css-tricks.com/responsive-data-tables/\nconst GnoTable = ({ children, size }): ReactElement => {\n  const style = size ? buildWidthFrom(size) : undefined\n\n  return (\n    <div style={overflowStyle}>\n      <Table style={style}>{children}</Table>\n    </div>\n  )\n}\n\nexport default GnoTable\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: _defineProperty({\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `variant=\"regular\"`. */\n    regular: theme.mixins.toolbar,\n\n    /* Styles applied to the root element if `variant=\"dense\"`. */\n    dense: {\n      minHeight: 48\n    }\n  };\n};\nvar Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'regular' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[variant], className, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes = {\n  /**\n   * Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, disables gutter padding.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['regular', 'dense'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToolbar'\n})(Toolbar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$onChangePage = props.onChangePage,\n      onChangePage = _props$onChangePage === void 0 ? function () {} : _props$onChangePage,\n      _props$onPageChange = props.onPageChange,\n      onPageChange = _props$onPageChange === void 0 ? function () {} : _props$onPageChange,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"onPageChange\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n    onPageChange(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n    onPageChange(event, page + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/unstable_useId';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      overflow: 'auto',\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n    // TODO v5: `.selectRoot` should be merged with `.input`\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {},\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onPageChange = props.onPageChange,\n      onChangeRowsPerPageProp = props.onChangeRowsPerPage,\n      onRowsPerPageChangeProp = props.onRowsPerPageChange,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onPageChange\", \"onChangeRowsPerPage\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var onChangeRowsPerPage = onChangeRowsPerPageProp || onRowsPerPageChangeProp;\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var selectId = useId();\n  var labelId = useId();\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption,\n    id: labelId\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    id: selectId,\n    labelId: labelId\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return /*#__PURE__*/React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n      value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n    }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page: page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    onPageChange: onPageChange,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   * @deprecated Use the onPageChange prop instead.\n   */\n  onChangePage: deprecatedPropType(PropTypes.func, 'Use the `onPageChange` prop instead.'),\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @deprecated Use the onRowsPerPageChange prop instead.\n   */\n  onChangeRowsPerPage: deprecatedPropType(PropTypes.func, 'Use the `onRowsPerPageChange` prop instead.'),\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n\n    if (count === -1) {\n      return null;\n    }\n\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import { createStyles, makeStyles } from '@material-ui/core'\n\nimport { sm } from 'src/theme/variables'\n\nexport const useSelectedTokenStyles = makeStyles(\n  createStyles({\n    container: {\n      minHeight: '55px',\n      padding: 0,\n      width: '100%',\n    },\n    tokenData: {\n      padding: 0,\n      margin: 0,\n      lineHeight: '14px',\n    },\n    tokenImage: {\n      display: 'block',\n      marginRight: sm,\n      height: 28,\n      width: 'auto',\n    },\n  }),\n)\n\nexport const useSelectStyles = makeStyles(\n  createStyles({\n    selectMenu: {\n      paddingRight: 0,\n    },\n  }),\n)\n","import { Text } from '@gnosis.pm/safe-react-components'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport { List } from 'immutable'\nimport { ReactElement } from 'react'\n\nimport Field from 'src/components/forms/Field'\nimport SelectField from 'src/components/forms/SelectField'\nimport { required } from 'src/components/forms/validator'\nimport Img from 'src/components/layout/Img'\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\nimport { Token } from 'src/logic/tokens/store/model/token'\n\nimport { useSelectStyles, useSelectedTokenStyles } from './style'\n\ninterface SelectTokenProps {\n  tokenAddress: string\n  tokens: List<Token>\n}\n\nconst SelectedToken = ({ tokenAddress, tokens }: SelectTokenProps): ReactElement => {\n  const classes = useSelectedTokenStyles()\n  const token = tokens.find(({ address }) => address === tokenAddress)\n\n  return (\n    <MenuItem className={classes.container}>\n      {token ? (\n        <>\n          <ListItemIcon>\n            <Img\n              className={classes.tokenImage}\n              alt={token.name}\n              onError={setImageToPlaceholder}\n              src={token.logoUri || ''}\n            />\n          </ListItemIcon>\n          <ListItemText\n            className={classes.tokenData}\n            primary={token.name}\n            secondary={`${formatAmount(token.balance?.tokenBalance.toString() ?? '0')} ${token.symbol}`}\n          />\n        </>\n      ) : (\n        <Text color=\"placeHolder\" size=\"xl\">\n          Select an asset*\n        </Text>\n      )}\n    </MenuItem>\n  )\n}\n\ninterface TokenSelectFieldProps {\n  initialValue?: string\n  isValid?: boolean\n  tokens: List<Token>\n}\n\nconst TokenSelectField = ({ initialValue, isValid = true, tokens }: TokenSelectFieldProps): ReactElement => {\n  const classes = useSelectStyles()\n  const tokenClasses = useSelectedTokenStyles()\n\n  return (\n    <Field\n      classes={{ selectMenu: classes.selectMenu }}\n      className={isValid ? 'isValid' : 'isInvalid'}\n      component={SelectField}\n      displayEmpty\n      initialValue={initialValue}\n      name=\"token\"\n      renderValue={(tokenAddress) => <SelectedToken tokenAddress={tokenAddress} tokens={tokens} />}\n      validate={required}\n    >\n      {tokens.map((token) => (\n        <MenuItem key={token.address} value={token.address}>\n          <ListItemIcon>\n            <Img\n              className={tokenClasses.tokenImage}\n              alt={token.name}\n              onError={setImageToPlaceholder}\n              src={token.logoUri || ''}\n            />\n          </ListItemIcon>\n          <ListItemText\n            primary={token.name}\n            secondary={`${formatAmount(token.balance?.tokenBalance.toString() ?? '0')} ${token.symbol}`}\n            data-testid={`select-token-${token.name}`}\n          />\n        </MenuItem>\n      ))}\n    </Field>\n  )\n}\n\nexport default TokenSelectField\n","import cn from 'classnames'\nimport { ReactElement, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport Col from 'src/components/layout/Col'\nimport Row from 'src/components/layout/Row'\nimport Hairline from 'src/components/layout/Hairline'\nimport { ButtonStatus, Modal } from 'src/components/Modal'\nimport { TransactionFees } from 'src/components/TransactionsFees'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\nimport useTokenInfo from 'src/logic/safe/hooks/useTokenInfo'\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { getDeleteAllowanceTxData } from 'src/logic/safe/utils/spendingLimits'\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { SPENDING_LIMIT_MODULE_ADDRESS } from 'src/utils/constants'\nimport { getResetTimeOptions } from './FormFields/ResetTime'\nimport { AddressInfo, ResetTimeInfo, TokenInfo } from './InfoDisplay'\nimport { SpendingLimitTable } from './LimitsTable/dataFetcher'\nimport { useStyles } from './style'\nimport { extractSafeAddress } from 'src/routes/routes'\n\ninterface RemoveSpendingLimitModalProps {\n  onClose: () => void\n  spendingLimit: SpendingLimitTable\n  open: boolean\n}\n\nexport const RemoveLimitModal = ({ onClose, spendingLimit, open }: RemoveSpendingLimitModalProps): ReactElement => {\n  const classes = useStyles()\n\n  const tokenInfo = useTokenInfo(spendingLimit.spent.tokenAddress)\n\n  const safeAddress = extractSafeAddress()\n  const [txData, setTxData] = useState('')\n  const dispatch = useDispatch()\n  const [manualSafeTxGas, setManualSafeTxGas] = useState('0')\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\n\n  useEffect(() => {\n    const {\n      beneficiary,\n      spent: { tokenAddress },\n    } = spendingLimit\n    const txData = getDeleteAllowanceTxData({ beneficiary, tokenAddress })\n    setTxData(txData)\n  }, [spendingLimit])\n\n  const {\n    gasCostFormatted,\n    txEstimationExecutionStatus,\n    isExecution,\n    isOffChainSignature,\n    isCreation,\n    gasLimit,\n    gasEstimation,\n    gasPriceFormatted,\n  } = useEstimateTransactionGas({\n    txData,\n    txRecipient: SPENDING_LIMIT_MODULE_ADDRESS,\n    txAmount: '0',\n    safeTxGas: manualSafeTxGas,\n    manualGasPrice,\n    manualGasLimit,\n  })\n\n  const [buttonStatus] = useEstimationStatus(txEstimationExecutionStatus)\n\n  const removeSelectedSpendingLimit = (txParameters: TxParameters) => {\n    try {\n      dispatch(\n        createTransaction({\n          safeAddress,\n          to: SPENDING_LIMIT_MODULE_ADDRESS,\n          valueInWei: '0',\n          txData,\n          txNonce: txParameters.safeNonce,\n          safeTxGas: txParameters.safeTxGas,\n          ethParameters: txParameters,\n          notifiedTransaction: TX_NOTIFICATION_TYPES.REMOVE_SPENDING_LIMIT_TX,\n        }),\n      )\n    } catch (e) {\n      console.error(\n        `failed to remove spending limit ${spendingLimit.beneficiary} -> ${spendingLimit.spent.tokenAddress}`,\n        e.message,\n      )\n    }\n  }\n\n  const resetTimeLabel =\n    getResetTimeOptions().find(({ value }) => +value === +spendingLimit.resetTime.resetTimeMin)?.label ?? ''\n\n  const closeEditModalCallback = (txParameters: TxParameters) => {\n    const oldGasPrice = gasPriceFormatted\n    const newGasPrice = txParameters.ethGasPrice\n    const oldSafeTxGas = gasEstimation\n    const newSafeTxGas = txParameters.safeTxGas\n\n    if (newGasPrice && oldGasPrice !== newGasPrice) {\n      setManualGasPrice(txParameters.ethGasPrice)\n    }\n\n    if (txParameters.ethGasLimit && gasLimit !== txParameters.ethGasLimit) {\n      setManualGasLimit(txParameters.ethGasLimit)\n    }\n\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\n      setManualSafeTxGas(newSafeTxGas)\n    }\n  }\n\n  let confirmButtonText = 'Remove'\n  if (ButtonStatus.LOADING === buttonStatus) {\n    confirmButtonText = txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : 'Removing'\n  }\n\n  return (\n    <Modal\n      handleClose={onClose}\n      open={open}\n      title=\"Remove spending limit\"\n      description=\"Remove the selected spending limit\"\n    >\n      <EditableTxParameters\n        isOffChainSignature={isOffChainSignature}\n        isExecution={isExecution}\n        ethGasLimit={gasLimit}\n        ethGasPrice={gasPriceFormatted}\n        safeTxGas={gasEstimation}\n        closeEditModalCallback={closeEditModalCallback}\n      >\n        {(txParameters, toggleEditMode) => {\n          return (\n            <>\n              <ModalHeader onClose={onClose} title=\"Remove spending limit\" />\n              <Hairline />\n\n              <Modal.Body>\n                <Col margin=\"lg\">\n                  <AddressInfo title=\"Beneficiary\" address={spendingLimit.beneficiary} />\n                </Col>\n                <Col margin=\"lg\">\n                  {tokenInfo && (\n                    <TokenInfo\n                      amount={fromTokenUnit(spendingLimit.spent.amount, tokenInfo.decimals)}\n                      title=\"Amount\"\n                      token={tokenInfo}\n                    />\n                  )}\n                </Col>\n                <Col margin=\"lg\">\n                  <ResetTimeInfo title=\"Reset Time\" label={resetTimeLabel} />\n                </Col>\n                {/* Tx Parameters */}\n                <TxParametersDetail\n                  txParameters={txParameters}\n                  onEdit={toggleEditMode}\n                  isTransactionCreation={isCreation}\n                  isTransactionExecution={isExecution}\n                  isOffChainSignature={isOffChainSignature}\n                />\n              </Modal.Body>\n\n              <Row className={cn(classes.modalDescription, classes.gasCostsContainer)}>\n                <TransactionFees\n                  gasCostFormatted={gasCostFormatted}\n                  isExecution={isExecution}\n                  isCreation={isCreation}\n                  isOffChainSignature={isOffChainSignature}\n                  txEstimationExecutionStatus={txEstimationExecutionStatus}\n                />\n              </Row>\n\n              <Modal.Footer withoutBorder={buttonStatus !== ButtonStatus.LOADING}>\n                <Modal.Footer.Buttons\n                  cancelButtonProps={{ onClick: onClose }}\n                  confirmButtonProps={{\n                    color: 'error',\n                    onClick: () => removeSelectedSpendingLimit(txParameters),\n                    status: buttonStatus,\n                    text: confirmButtonText,\n                  }}\n                />\n              </Modal.Footer>\n            </>\n          )\n        }}\n      </EditableTxParameters>\n    </Modal>\n  )\n}\n","import { List } from 'immutable'\n\nimport { TableColumn } from 'src/components/Table/types.d'\nimport { SpendingLimitRow } from 'src/logic/safe/utils/spendingLimits'\nimport { relativeTime } from 'src/utils/date'\n\nexport const SPENDING_LIMIT_TABLE_BENEFICIARY_ID = 'beneficiary'\nexport const SPENDING_LIMIT_TABLE_SPENT_ID = 'spent'\nexport const SPENDING_LIMIT_TABLE_RESET_TIME_ID = 'resetTime'\nexport const SPENDING_LIMIT_TABLE_ACTION_ID = 'action'\n\nexport type SpendingLimitTable = {\n  [SPENDING_LIMIT_TABLE_BENEFICIARY_ID]: string\n  [SPENDING_LIMIT_TABLE_SPENT_ID]: {\n    spent: string\n    amount: string\n    tokenAddress: string\n  }\n  [SPENDING_LIMIT_TABLE_RESET_TIME_ID]: {\n    relativeTime: string\n    lastResetMin: string\n    resetTimeMin: string\n  }\n}\n\nexport const getSpendingLimitData = (spendingLimits?: SpendingLimitRow[] | null): SpendingLimitTable[] | undefined =>\n  spendingLimits?.map((spendingLimit) => ({\n    [SPENDING_LIMIT_TABLE_BENEFICIARY_ID]: spendingLimit.delegate,\n    [SPENDING_LIMIT_TABLE_SPENT_ID]: {\n      spent: spendingLimit.spent,\n      amount: spendingLimit.amount,\n      tokenAddress: spendingLimit.token,\n    },\n    [SPENDING_LIMIT_TABLE_RESET_TIME_ID]: {\n      relativeTime: relativeTime(spendingLimit.lastResetMin, spendingLimit.resetTimeMin),\n      lastResetMin: spendingLimit.lastResetMin,\n      resetTimeMin: spendingLimit.resetTimeMin,\n    },\n  }))\n\nexport const generateColumns = (): List<TableColumn> => {\n  const beneficiaryColumn: TableColumn = {\n    align: 'left',\n    custom: false,\n    disablePadding: false,\n    id: SPENDING_LIMIT_TABLE_BENEFICIARY_ID,\n    label: 'Beneficiary',\n    order: false,\n  }\n\n  const spentColumn: TableColumn = {\n    align: 'left',\n    custom: false,\n    disablePadding: false,\n    id: SPENDING_LIMIT_TABLE_SPENT_ID,\n    label: 'Spent',\n    order: false,\n    static: true,\n  }\n\n  const resetColumn: TableColumn = {\n    align: 'left',\n    custom: false,\n    disablePadding: false,\n    id: SPENDING_LIMIT_TABLE_RESET_TIME_ID,\n    label: 'Reset Time',\n    order: false,\n    static: true,\n  }\n\n  const actionsColumn: TableColumn = {\n    custom: true,\n    disablePadding: false,\n    id: SPENDING_LIMIT_TABLE_ACTION_ID,\n    label: '',\n    order: false,\n  }\n\n  return List([beneficiaryColumn, spentColumn, resetColumn, actionsColumn])\n}\n","import { useState, useEffect } from 'react'\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window\n  return {\n    width,\n    height,\n  }\n}\n\nexport const useWindowDimensions = (): { width: number; height: number } => {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions())\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions())\n    }\n\n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  return windowDimensions\n}\n","import { Text } from '@gnosis.pm/safe-react-components'\nimport { ReactElement, useMemo } from 'react'\nimport styled from 'styled-components'\n\nimport { Token } from 'src/logic/tokens/store/model/token'\nimport { formatAmount } from 'src/logic/tokens/utils/formatAmount'\nimport { setImageToPlaceholder } from 'src/routes/safe/components/Balances/utils'\nimport useTokenInfo from 'src/logic/safe/hooks/useTokenInfo'\nimport { fromTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport { useWindowDimensions } from 'src/logic/hooks/useWindowDimensions'\n\nconst StyledImage = styled.img`\n  width: 32px;\n  height: 32px;\n  object-fit: contain;\n  margin: 0 8px 0 0;\n`\n\nconst StyledImageName = styled.div`\n  display: flex;\n  align-items: center;\n`\n\ntype FormattedAmountsProps = { amount: string; spent: string; tokenInfo?: Token }\n\ntype FormattedAmounts = { amount: string; spent: string }\n\nconst useFormattedAmounts = ({ amount, spent, tokenInfo }: FormattedAmountsProps): FormattedAmounts | undefined => {\n  return useMemo(() => {\n    if (tokenInfo) {\n      const formattedSpent = formatAmount(fromTokenUnit(spent, tokenInfo.decimals)).toString()\n      const formattedAmount = formatAmount(fromTokenUnit(amount, tokenInfo.decimals)).toString()\n      return { amount: formattedAmount, spent: formattedSpent }\n    }\n  }, [amount, spent, tokenInfo])\n}\n\ninterface SpentVsAmountProps {\n  amount: string\n  spent: string\n  tokenAddress: string\n}\n\nexport const SpentVsAmount = ({ amount, spent, tokenAddress }: SpentVsAmountProps): ReactElement | null => {\n  const { width } = useWindowDimensions()\n  const showIcon = useMemo(() => width > 1024, [width])\n\n  const tokenInfo = useTokenInfo(tokenAddress)\n  const spentInfo = useFormattedAmounts({ amount, spent, tokenInfo })\n\n  return spentInfo && tokenInfo ? (\n    <StyledImageName>\n      {showIcon && <StyledImage alt={tokenInfo.name} onError={setImageToPlaceholder} src={tokenInfo.logoUri || ''} />}\n      <Text size=\"lg\">{`${spentInfo.spent} of ${spentInfo.amount} ${tokenInfo.symbol}`}</Text>\n    </StyledImageName>\n  ) : null\n}\n","import { Text, Icon } from '@gnosis.pm/safe-react-components'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport cn from 'classnames'\nimport { ReactElement, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport ButtonHelper from 'src/components/ButtonHelper'\nimport Row from 'src/components/layout/Row'\nimport { TableCell, TableRow } from 'src/components/layout/Table'\nimport Table from 'src/components/Table'\nimport { AddressInfo } from 'src/routes/safe/components/Settings/SpendingLimit/InfoDisplay'\nimport { RemoveLimitModal } from 'src/routes/safe/components/Settings/SpendingLimit/RemoveLimitModal'\nimport { useStyles } from 'src/routes/safe/components/Settings/SpendingLimit/style'\nimport { grantedSelector } from 'src/routes/safe/container/selector'\n\nimport {\n  generateColumns,\n  SPENDING_LIMIT_TABLE_BENEFICIARY_ID,\n  SPENDING_LIMIT_TABLE_RESET_TIME_ID,\n  SPENDING_LIMIT_TABLE_SPENT_ID,\n  SpendingLimitTable,\n} from './dataFetcher'\nimport { SpentVsAmount } from './SpentVsAmount'\n\ninterface SpendingLimitTableProps {\n  data?: SpendingLimitTable[]\n}\n\nexport const LimitsTable = ({ data }: SpendingLimitTableProps): ReactElement => {\n  const classes = useStyles()\n  const granted = useSelector(grantedSelector)\n\n  const columns = generateColumns()\n  const autoColumns = columns.filter(({ custom }) => !custom)\n\n  const [selectedRow, setSelectedRow] = useState<SpendingLimitTable>()\n\n  return (\n    <>\n      <TableContainer style={{ minHeight: '440px' }}>\n        <Table\n          columns={columns}\n          data={data}\n          defaultFixed\n          defaultOrderBy={SPENDING_LIMIT_TABLE_BENEFICIARY_ID}\n          defaultRowsPerPage={5}\n          label=\"Spending limits\"\n          noBorder\n          size={data?.length}\n        >\n          {(sortedData) =>\n            sortedData.map((row, index) => (\n              <TableRow\n                className={cn(classes.hide, index >= 3 && index === sortedData.size - 1 && classes.noBorderBottom)}\n                data-testid=\"spending-limit-table-row\"\n                key={index}\n                tabIndex={-1}\n              >\n                {autoColumns.map((column, index) => {\n                  const columnId = column.id\n                  const rowElement = row[columnId]\n\n                  return (\n                    <TableCell align={column.align} component=\"td\" key={`${columnId}-${index}`}>\n                      {columnId === SPENDING_LIMIT_TABLE_BENEFICIARY_ID && <AddressInfo address={rowElement} />}\n                      {columnId === SPENDING_LIMIT_TABLE_SPENT_ID && <SpentVsAmount {...rowElement} />}\n                      {columnId === SPENDING_LIMIT_TABLE_RESET_TIME_ID && (\n                        <Text size=\"lg\">{rowElement.relativeTime}</Text>\n                      )}\n                    </TableCell>\n                  )\n                })}\n                <TableCell component=\"td\">\n                  <Row align=\"end\" className={classes.actions}>\n                    {granted && (\n                      <ButtonHelper onClick={() => setSelectedRow(row)} data-testid=\"remove-limit-btn\">\n                        <Icon size=\"sm\" type=\"delete\" color=\"error\" tooltip=\"Remove limit\" />\n                      </ButtonHelper>\n                    )}\n                  </Row>\n                </TableCell>\n              </TableRow>\n            ))\n          }\n        </Table>\n      </TableContainer>\n      {selectedRow && (\n        <RemoveLimitModal onClose={() => setSelectedRow(undefined)} spendingLimit={selectedRow} open={true} />\n      )}\n    </>\n  )\n}\n","import { EthHashInfo } from '@gnosis.pm/safe-react-components'\nimport { KeyboardEvent, ReactElement, useEffect, useState } from 'react'\nimport { useForm, useFormState } from 'react-final-form'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\n\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\nimport { getExplorerInfo } from 'src/config'\nimport { currentNetworkAddressBook } from 'src/logic/addressBook/store/selectors'\nimport { AddressBookInput } from 'src/routes/safe/components/Balances/SendModal/screens/AddressBookInput'\nimport { sameString } from 'src/utils/strings'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\n\nconst BeneficiaryInput = styled.div`\n  grid-area: beneficiaryInput;\n`\n\nconst BeneficiaryScan = styled.div`\n  grid-area: beneficiaryScan;\n`\n\nconst Beneficiary = (): ReactElement => {\n  const { initialValues } = useFormState()\n  const { mutators } = useForm()\n\n  const [selectedEntry, setSelectedEntry] = useState<{ address?: string; name?: string } | null>({\n    address: initialValues?.beneficiary || '',\n    name: '',\n  })\n\n  const [pristine, setPristine] = useState<boolean>(!initialValues?.beneficiary)\n\n  useEffect(() => {\n    if (selectedEntry === null) {\n      mutators?.setBeneficiary?.('')\n\n      if (pristine) {\n        setPristine(false)\n      }\n    }\n  }, [mutators, pristine, selectedEntry])\n\n  const addressBook = useSelector(currentNetworkAddressBook)\n\n  const handleScan = (value, closeQrModal) => {\n    const scannedAddress = value.startsWith('ethereum:') ? value.replace('ethereum:', '') : value\n    const scannedName = addressBook.find(({ address }) => {\n      return sameAddress(scannedAddress, address)\n    })?.name\n\n    mutators?.setBeneficiary?.(scannedAddress)\n\n    setSelectedEntry({\n      name: scannedName,\n      address: scannedAddress,\n    })\n\n    closeQrModal()\n  }\n\n  const handleOnKeyDown = (e: KeyboardEvent<HTMLElement>): void => {\n    if (sameString(e.key, 'Tab')) {\n      return\n    }\n    setSelectedEntry(null)\n  }\n\n  const handleOnClick = () => {\n    setSelectedEntry(null)\n  }\n\n  return selectedEntry?.address ? (\n    <BeneficiaryInput\n      role=\"button\"\n      aria-pressed=\"false\"\n      tabIndex={0}\n      onKeyDown={handleOnKeyDown}\n      onClick={handleOnClick}\n    >\n      <EthHashInfo\n        hash={selectedEntry.address}\n        name={selectedEntry.name}\n        showCopyBtn\n        showAvatar\n        textSize=\"lg\"\n        explorerUrl={getExplorerInfo(selectedEntry.address)}\n      />\n    </BeneficiaryInput>\n  ) : (\n    <>\n      <BeneficiaryInput>\n        <AddressBookInput\n          fieldMutator={mutators?.setBeneficiary}\n          pristine={pristine}\n          setSelectedEntry={setSelectedEntry}\n          setIsValidAddress={() => {}}\n          label=\"Beneficiary\"\n        />\n      </BeneficiaryInput>\n      <BeneficiaryScan>\n        <ScanQRWrapper handleScan={handleScan} />\n      </BeneficiaryScan>\n    </>\n  )\n}\n\nexport default Beneficiary\n","import { ReactElement } from 'react'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\n\nimport TokenSelectField from 'src/routes/safe/components/Balances/SendModal/screens/SendFunds/TokenSelectField'\nimport { extendedSafeTokensSelector } from 'src/routes/safe/container/selector'\n\nconst TokenInput = styled.div`\n  grid-area: tokenInput;\n`\n\nconst Token = (): ReactElement => {\n  const tokens = useSelector(extendedSafeTokensSelector)\n\n  return (\n    <TokenInput>\n      <TokenSelectField tokens={tokens} />\n    </TokenInput>\n  )\n}\n\nexport default Token\n","import { FormState, Mutator } from 'final-form'\nimport { ReactElement } from 'react'\nimport styled from 'styled-components'\n\nimport GnoForm from 'src/components/forms/GnoForm'\nimport { Modal } from 'src/components/Modal'\nimport { Amount, Beneficiary, ResetTime, Token } from 'src/routes/safe/components/Settings/SpendingLimit/FormFields'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport Hairline from 'src/components/layout/Hairline'\n\nconst FormContainer = styled.div`\n  padding: 24px 8px 24px 24px;\n  align-items: center;\n  display: grid;\n  grid-template-columns: 4fr 1fr;\n  grid-template-rows: 6fr;\n  gap: 16px 8px;\n  grid-template-areas:\n    'beneficiaryInput beneficiaryScan'\n    'tokenInput .'\n    'amountInput .'\n    'resetTimeLabel resetTimeLabel'\n    'resetTimeToggle resetTimeToggle'\n    'resetTimeOption resetTimeOption';\n`\n\nconst formMutators: Record<string, Mutator<{ beneficiary: { name: string } }>> = {\n  setBeneficiary: (args, state, utils) => {\n    utils.changeValue(state, 'beneficiary', () => args[0])\n  },\n}\n\ninterface NewSpendingLimitProps {\n  initialValues?: Record<string, string>\n  onCancel: () => void\n  onReview: (values) => void\n}\n\nconst canReview = ({\n  invalid,\n  submitting,\n  dirtyFieldsSinceLastSubmit,\n  values: { beneficiary, token, amount },\n}: FormState<{ beneficiary: string; token: string; amount: string }>): boolean =>\n  !(submitting || invalid || !beneficiary || !token || !amount || !dirtyFieldsSinceLastSubmit)\n\nconst Create = ({ initialValues, onCancel, onReview }: NewSpendingLimitProps): ReactElement => {\n  return (\n    <>\n      <ModalHeader onClose={onCancel} title=\"New spending limit\" subTitle=\"1 of 2\" />\n      <Hairline />\n      <GnoForm formMutators={formMutators} onSubmit={onReview} initialValues={initialValues}>\n        {(...args) => {\n          return (\n            <>\n              <FormContainer>\n                <Beneficiary />\n                <Token />\n                <Amount />\n                <ResetTime />\n              </FormContainer>\n\n              <Modal.Footer>\n                <Modal.Footer.Buttons\n                  cancelButtonProps={{ onClick: onCancel }}\n                  confirmButtonProps={{ disabled: !canReview(args[2]), text: 'Review' }}\n                />\n              </Modal.Footer>\n            </>\n          )\n        }}\n      </GnoForm>\n    </>\n  )\n}\n\nexport default Create\n","import { Text } from '@gnosis.pm/safe-react-components'\nimport { ReactElement, useEffect, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Col from 'src/components/layout/Col'\nimport Row from 'src/components/layout/Row'\nimport { ButtonStatus, Modal } from 'src/components/Modal'\nimport { createTransaction, CreateTransactionArgs } from 'src/logic/safe/store/actions/createTransaction'\nimport { SafeRecordProps, SpendingLimit } from 'src/logic/safe/store/models/safe'\nimport {\n  addSpendingLimitBeneficiaryMultiSendTx,\n  currentMinutes,\n  enableSpendingLimitModuleMultiSendTx,\n  getResetSpendingLimitTx,\n  setSpendingLimitMultiSendTx,\n  setSpendingLimitTx,\n  spendingLimitMultiSendTx,\n  SpendingLimitRow,\n} from 'src/logic/safe/utils/spendingLimits'\nimport { MultiSendTx } from 'src/logic/safe/transactions/multisend'\nimport { makeToken, Token } from 'src/logic/tokens/store/model/token'\nimport { fromTokenUnit, toTokenUnit } from 'src/logic/tokens/utils/humanReadableValue'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { getResetTimeOptions } from 'src/routes/safe/components/Settings/SpendingLimit/FormFields/ResetTime'\nimport { AddressInfo, ResetTimeInfo, TokenInfo } from 'src/routes/safe/components/Settings/SpendingLimit/InfoDisplay'\nimport { useStyles } from 'src/routes/safe/components/Settings/SpendingLimit/style'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\nimport { TransactionFees } from 'src/components/TransactionsFees'\nimport Hairline from 'src/components/layout/Hairline'\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\nimport { isModuleEnabled } from 'src/logic/safe/utils/modules'\nimport { SPENDING_LIMIT_MODULE_ADDRESS } from 'src/utils/constants'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\n\nimport { ActionCallback, CREATE } from '.'\n\nconst useExistentSpendingLimit = ({\n  spendingLimits,\n  txToken,\n  values,\n}: {\n  spendingLimits?: SafeRecordProps['spendingLimits']\n  txToken: Token\n  values: ReviewSpendingLimitProps['values']\n}) => {\n  // undefined: before setting a value\n  // null: if no previous value\n  // SpendingLimit: if previous value exists\n  return useMemo<SpendingLimit | null>(() => {\n    // if `delegate` already exist, check what tokens were delegated to the _beneficiary_ `getTokens(safe, delegate)`\n    const currentDelegate = spendingLimits?.find(\n      ({ delegate, token }) => sameAddress(delegate, values.beneficiary) && sameAddress(token, values.token),\n    )\n\n    // let the user know that is about to replace an existent allowance\n    if (currentDelegate !== undefined) {\n      return {\n        ...currentDelegate,\n        amount: fromTokenUnit(currentDelegate.amount, txToken.decimals),\n      }\n    } else {\n      return null\n    }\n  }, [spendingLimits, txToken.decimals, values.beneficiary, values.token])\n}\n\nconst calculateSpendingLimitsTxData = (\n  safeAddress: string,\n  safeVersion: string,\n  spendingLimits: SpendingLimit[] | null | undefined,\n  existentSpendingLimit: SpendingLimit | null,\n  txToken: Token,\n  values: Record<string, string>,\n  modules: string[],\n  txParameters?: TxParameters,\n): {\n  spendingLimitTxData: CreateTransactionArgs\n  transactions: MultiSendTx[]\n  spendingLimitArgs: {\n    beneficiary: string\n    token: string\n    spendingLimitInWei: string\n    resetTimeMin: number\n    resetBaseMin: number\n  }\n} => {\n  const isSpendingLimitEnabled = isModuleEnabled(modules, SPENDING_LIMIT_MODULE_ADDRESS)\n  const transactions: MultiSendTx[] = []\n\n  // is spendingLimit module enabled? -> if not, create the tx to enable it, and encode it\n  if (!isSpendingLimitEnabled && safeAddress) {\n    transactions.push(enableSpendingLimitModuleMultiSendTx(safeAddress, safeVersion))\n  }\n\n  // does `delegate` already exist? (`getDelegates`, previously queried to build the table with allowances (??))\n  //                                  ^ - shall we rely on this or query the list of delegates once again?\n  const isDelegateAlreadyAdded =\n    spendingLimits?.some(({ delegate }) => sameAddress(delegate, values?.beneficiary)) ?? false\n\n  // if `delegate` does not exist, add it by calling `addDelegate(beneficiary)`\n  if (!isDelegateAlreadyAdded && values?.beneficiary) {\n    transactions.push(addSpendingLimitBeneficiaryMultiSendTx(values.beneficiary))\n  }\n\n  if (existentSpendingLimit && existentSpendingLimit.spent !== '0') {\n    transactions.push(getResetSpendingLimitTx(existentSpendingLimit.delegate, txToken.address))\n  }\n\n  // prepare the setAllowance tx\n  const startTime = currentMinutes() - 30\n  const spendingLimitArgs = {\n    beneficiary: values.beneficiary,\n    token: values.token,\n    spendingLimitInWei: toTokenUnit(values.amount, txToken.decimals),\n    resetTimeMin: values.withResetTime ? +values.resetTime : 0,\n    resetBaseMin: values.withResetTime ? startTime : 0,\n  }\n\n  let spendingLimitTxData\n  if (safeAddress) {\n    // if there's no tx for enable module or adding a delegate, then we avoid using multiSend Tx\n    if (transactions.length === 0) {\n      spendingLimitTxData = setSpendingLimitTx({ spendingLimitArgs, safeAddress })\n    } else {\n      const encodedTxForMultisend = setSpendingLimitMultiSendTx({ spendingLimitArgs, safeAddress })\n      transactions.push(encodedTxForMultisend)\n      spendingLimitTxData = spendingLimitMultiSendTx({ transactions, safeAddress })\n    }\n\n    if (txParameters) {\n      spendingLimitTxData.txNonce = txParameters.safeNonce\n      spendingLimitTxData.safeTxGas = txParameters.safeTxGas ? txParameters.safeTxGas : undefined\n      spendingLimitTxData.ethParameters = txParameters\n    }\n  }\n  return {\n    spendingLimitTxData,\n    transactions,\n    spendingLimitArgs,\n  }\n}\n\ninterface ReviewSpendingLimitProps {\n  onBack: ActionCallback\n  onClose: () => void\n  txToken: Token\n  values: Record<string, string>\n  existentSpendingLimit?: SpendingLimitRow\n}\n\nexport const ReviewSpendingLimits = ({ onBack, onClose, txToken, values }: ReviewSpendingLimitProps): ReactElement => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const {\n    address: safeAddress = '',\n    spendingLimits,\n    currentVersion: safeVersion = '',\n    modules,\n  } = useSelector(currentSafe) ?? {}\n  const existentSpendingLimit = useExistentSpendingLimit({ spendingLimits, txToken, values })\n  const [estimateGasArgs, setEstimateGasArgs] = useState<Partial<CreateTransactionArgs>>({\n    to: '',\n    txData: '',\n  })\n  const [manualSafeTxGas, setManualSafeTxGas] = useState('0')\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\n\n  const {\n    gasCostFormatted,\n    txEstimationExecutionStatus,\n    isExecution,\n    isCreation,\n    isOffChainSignature,\n    gasPrice,\n    gasPriceFormatted,\n    gasLimit,\n    gasEstimation,\n  } = useEstimateTransactionGas({\n    txData: estimateGasArgs.txData as string,\n    txRecipient: estimateGasArgs.to as string,\n    operation: estimateGasArgs.operation,\n    safeTxGas: manualSafeTxGas,\n    manualGasPrice,\n    manualGasLimit,\n  })\n\n  const [buttonStatus] = useEstimationStatus(txEstimationExecutionStatus)\n\n  const safeModules = useMemo(() => modules?.map((pair) => pair[1]) || [], [modules])\n\n  useEffect(() => {\n    const { spendingLimitTxData } = calculateSpendingLimitsTxData(\n      safeAddress,\n      safeVersion,\n      spendingLimits,\n      existentSpendingLimit,\n      txToken,\n      values,\n      safeModules,\n    )\n    setEstimateGasArgs(spendingLimitTxData)\n  }, [safeAddress, safeVersion, spendingLimits, existentSpendingLimit, txToken, values, safeModules])\n\n  const handleSubmit = (txParameters: TxParameters): void => {\n    const { ethGasPrice, ethGasLimit, ethGasPriceInGWei } = txParameters\n    const advancedOptionsTxParameters = {\n      ...txParameters,\n      ethGasPrice: ethGasPrice || gasPrice,\n      ethGasPriceInGWei: ethGasPriceInGWei || gasPriceFormatted,\n      ethGasLimit: ethGasLimit || gasLimit,\n    }\n\n    if (safeAddress) {\n      const { spendingLimitTxData } = calculateSpendingLimitsTxData(\n        safeAddress,\n        safeVersion,\n        spendingLimits,\n        existentSpendingLimit,\n        txToken,\n        values,\n        safeModules,\n        advancedOptionsTxParameters,\n      )\n\n      dispatch(createTransaction(spendingLimitTxData))\n    }\n  }\n\n  const resetTimeLabel = useMemo(\n    () => (values.withResetTime ? getResetTimeOptions().find(({ value }) => value === values.resetTime)?.label : ''),\n    [values.resetTime, values.withResetTime],\n  )\n\n  const previousResetTime = (existentSpendingLimit: SpendingLimit) =>\n    getResetTimeOptions().find(({ value }) => value === (+existentSpendingLimit.resetTimeMin).toString())?.label ??\n    'One-time spending limit'\n\n  const closeEditModalCallback = (txParameters: TxParameters) => {\n    const oldGasPrice = gasPriceFormatted\n    const newGasPrice = txParameters.ethGasPrice\n    const oldSafeTxGas = gasEstimation\n    const newSafeTxGas = txParameters.safeTxGas\n\n    if (newGasPrice && oldGasPrice !== newGasPrice) {\n      setManualGasPrice(txParameters.ethGasPrice)\n    }\n\n    if (txParameters.ethGasLimit && gasLimit !== txParameters.ethGasLimit) {\n      setManualGasLimit(txParameters.ethGasLimit)\n    }\n\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\n      setManualSafeTxGas(newSafeTxGas)\n    }\n  }\n\n  let confirmButtonText = 'Submit'\n  if (ButtonStatus.LOADING === buttonStatus) {\n    confirmButtonText = txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : 'Submitting'\n  }\n\n  return (\n    <EditableTxParameters\n      isOffChainSignature={isOffChainSignature}\n      isExecution={isExecution}\n      ethGasLimit={gasLimit}\n      ethGasPrice={gasPriceFormatted}\n      safeTxGas={gasEstimation}\n      closeEditModalCallback={closeEditModalCallback}\n    >\n      {(txParameters, toggleEditMode) => (\n        <>\n          <ModalHeader onClose={onClose} title=\"New spending limit\" subTitle=\"2 of 2\" />\n          <Hairline />\n\n          <Modal.Body>\n            <Col margin=\"lg\">\n              <AddressInfo address={values.beneficiary} title=\"Beneficiary\" />\n            </Col>\n            <Col margin=\"lg\">\n              <TokenInfo\n                amount={fromTokenUnit(toTokenUnit(values.amount, txToken.decimals), txToken.decimals)}\n                title=\"Amount\"\n                token={txToken}\n              />\n              {existentSpendingLimit && (\n                <Text size=\"lg\" color=\"error\">\n                  Previous Amount: {existentSpendingLimit.amount}\n                </Text>\n              )}\n            </Col>\n            <Col margin=\"lg\">\n              <ResetTimeInfo title=\"Reset Time\" label={resetTimeLabel} />\n              {existentSpendingLimit && (\n                <Row align=\"center\" margin=\"md\">\n                  <Text size=\"lg\" color=\"error\">\n                    Previous Reset Time: {previousResetTime(existentSpendingLimit)}\n                  </Text>\n                </Row>\n              )}\n            </Col>\n\n            {existentSpendingLimit && (\n              <Col margin=\"md\">\n                <Text size=\"xl\" color=\"error\" center strong>\n                  You are about to replace an existent spending limit\n                </Text>\n              </Col>\n            )}\n            {/* Tx Parameters */}\n            <TxParametersDetail\n              txParameters={txParameters}\n              onEdit={toggleEditMode}\n              isTransactionCreation={isCreation}\n              isTransactionExecution={isExecution}\n              isOffChainSignature={isOffChainSignature}\n            />\n          </Modal.Body>\n          <div className={classes.gasCostsContainer}>\n            <TransactionFees\n              gasCostFormatted={gasCostFormatted}\n              isExecution={isExecution}\n              isCreation={isCreation}\n              isOffChainSignature={isOffChainSignature}\n              txEstimationExecutionStatus={txEstimationExecutionStatus}\n            />\n          </div>\n\n          <Modal.Footer withoutBorder={buttonStatus !== ButtonStatus.LOADING}>\n            <Modal.Footer.Buttons\n              cancelButtonProps={{\n                onClick: () => onBack({ values: {}, txToken: makeToken(), step: CREATE }),\n                text: 'Back',\n              }}\n              confirmButtonProps={{\n                onClick: () => handleSubmit(txParameters),\n                disabled: existentSpendingLimit === undefined,\n                status: buttonStatus,\n                text: confirmButtonText,\n              }}\n            />\n          </Modal.Footer>\n        </>\n      )}\n    </EditableTxParameters>\n  )\n}\n","import { List } from 'immutable'\nimport { ReactElement, Reducer, useCallback, useReducer } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Modal } from 'src/components/Modal'\nimport { makeToken, Token } from 'src/logic/tokens/store/model/token'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { extendedSafeTokensSelector } from 'src/routes/safe/container/selector'\n\nimport Create from './Create'\nimport { ReviewSpendingLimits } from './Review'\n\nexport const CREATE = 'CREATE' as const\nexport const REVIEW = 'REVIEW' as const\n\ntype Step = typeof CREATE | typeof REVIEW\n\ntype State = {\n  step: Step\n  values: Record<string, string>\n  txToken: Token\n}\n\ntype Action = {\n  type: Step\n  newState: State\n  tokens: List<Token>\n}\n\nconst newLimitModalReducer = (state: State, action: Action): State => {\n  const { type, newState, tokens } = action\n\n  switch (type) {\n    case CREATE: {\n      return {\n        ...state,\n        step: CREATE,\n      }\n    }\n\n    case REVIEW: {\n      return {\n        ...state,\n        ...newState,\n        // we lookup into the list of tokens for the selected token info\n        txToken: tokens.find((token) => sameAddress(token.address, newState.values.token)) ?? state.txToken,\n        step: REVIEW,\n      }\n    }\n  }\n}\n\nexport type ActionCallback = (state: State) => void\ntype NewLimitModalHook = [State, { create: ActionCallback; review: ActionCallback }]\n\nconst useNewLimitModal = (initialStep: Step): NewLimitModalHook => {\n  // globally stored tokens\n  const tokens = useSelector(extendedSafeTokensSelector)\n\n  // setup the reducer with initial values\n  const [state, dispatch] = useReducer<Reducer<State, Action>, State>(\n    newLimitModalReducer,\n    {\n      step: initialStep,\n      txToken: makeToken(),\n      values: {},\n    },\n    (state) => state,\n  )\n\n  // define actions\n  const create = useCallback<ActionCallback>((newState) => dispatch({ type: CREATE, newState, tokens }), [tokens])\n  const review = useCallback<ActionCallback>((newState) => dispatch({ type: REVIEW, newState, tokens }), [tokens])\n\n  // returns state and dispatch\n  return [state, { create, review }]\n}\n\ninterface SpendingLimitModalProps {\n  close: () => void\n  open: boolean\n}\n\nexport const NewLimitModal = ({ close, open }: SpendingLimitModalProps): ReactElement => {\n  // state and dispatch\n  const [{ step, txToken, values }, { create, review }] = useNewLimitModal(CREATE)\n\n  const handleReview = async (values) => {\n    // if form is valid, we update the state to REVIEW and sets values\n    review({ step, txToken, values })\n  }\n\n  return (\n    <Modal\n      handleClose={close}\n      open={open}\n      title=\"New spending limit\"\n      description=\"set rules for specific beneficiaries to access funds from this Safe without having to collect all signatures\"\n    >\n      {step === CREATE && <Create initialValues={values} onCancel={close} onReview={handleReview} />}\n      {step === REVIEW && <ReviewSpendingLimits onBack={create} onClose={close} txToken={txToken} values={values} />}\n    </Modal>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/asset-amount.98054bf3.svg\";","export default __webpack_public_path__ + \"static/media/beneficiary.0beb8d31.svg\";","export default __webpack_public_path__ + \"static/media/time.31d09fca.svg\";","import { Text } from '@gnosis.pm/safe-react-components'\nimport { ReactElement } from 'react'\nimport styled from 'styled-components'\n\nimport Img from 'src/components/layout/Img'\nimport AssetAmount from './assets/asset-amount.svg'\nimport Beneficiary from './assets/beneficiary.svg'\nimport Time from './assets/time.svg'\n\nconst StepWrapper = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin-top: 20px;\n  max-width: 720px;\n  text-align: center;\n`\n\nconst Step = styled.div`\n  width: 24%;\n  min-width: 120px;\n  max-width: 164px;\n`\n\nconst StepsLine = styled.div`\n  height: 2px;\n  flex: 1;\n  background: #d4d5d3;\n  margin: 46px 0;\n`\n\nexport const NewLimitSteps = (): ReactElement => (\n  <StepWrapper>\n    <Step>\n      <Img alt=\"Select Beneficiary\" title=\"Beneficiary\" height={96} src={Beneficiary} />\n\n      <Text size=\"lg\" color=\"placeHolder\" strong center>\n        Select Beneficiary\n      </Text>\n\n      <Text size=\"lg\" color=\"placeHolder\" center>\n        Define beneficiary that will be able to use the allowance.\n      </Text>\n\n      <Text size=\"lg\" color=\"placeHolder\" center>\n        The beneficiary does not have to be an owner of this Safe\n      </Text>\n    </Step>\n\n    <StepsLine />\n\n    <Step>\n      <Img alt=\"Select asset and amount\" title=\"Asset and Amount\" height={96} src={AssetAmount} />\n\n      <Text size=\"lg\" color=\"placeHolder\" strong center>\n        Select asset and amount\n      </Text>\n\n      <Text size=\"lg\" color=\"placeHolder\" center>\n        You can set a spending limit for any asset stored in your Safe\n      </Text>\n    </Step>\n\n    <StepsLine />\n\n    <Step>\n      <Img alt=\"Select time\" title=\"Time\" height={96} src={Time} />\n\n      <Text size=\"lg\" color=\"placeHolder\" strong center>\n        Select time\n      </Text>\n\n      <Text size=\"lg\" color=\"placeHolder\" center>\n        You can choose to set a one-time spending limit or to have it automatically refill after a defined time-period\n      </Text>\n    </Step>\n  </StepWrapper>\n)\n","import { Button, Text, Title } from '@gnosis.pm/safe-react-components'\nimport { ReactElement, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\n\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Row from 'src/components/layout/Row'\nimport { currentSafeSpendingLimits } from 'src/logic/safe/store/selectors'\nimport { grantedSelector } from 'src/routes/safe/container/selector'\n\nimport { LimitsTable } from './LimitsTable'\nimport { getSpendingLimitData } from './LimitsTable/dataFetcher'\nimport { NewLimitModal } from './NewLimitModal'\nimport { NewLimitSteps } from './NewLimitSteps'\nimport { useStyles } from './style'\n\nconst InfoText = styled(Text)`\n  margin-top: 16px;\n`\n\nconst SpendingLimit = (): ReactElement => {\n  const classes = useStyles()\n  const granted = useSelector(grantedSelector)\n  const allowances = useSelector(currentSafeSpendingLimits)\n  const spendingLimitData = getSpendingLimitData(allowances)\n\n  const [showNewSpendingLimitModal, setShowNewSpendingLimitModal] = useState(false)\n  const openNewSpendingLimitModal = () => {\n    setShowNewSpendingLimitModal(true)\n  }\n  const closeNewSpendingLimitModal = () => {\n    setShowNewSpendingLimitModal(false)\n  }\n\n  return (\n    <>\n      <Block className={classes.container} grow=\"grow\">\n        <Title size=\"xs\" withoutMargin>\n          Spending limit\n        </Title>\n        <InfoText size=\"lg\">\n          You can set rules for specific beneficiaries to access funds from this Safe without having to collect all\n          signatures.\n        </InfoText>\n        {spendingLimitData?.length ? <LimitsTable data={spendingLimitData} /> : <NewLimitSteps />}\n      </Block>\n\n      {granted && (\n        <>\n          <Row align=\"end\" className={classes.buttonRow} grow>\n            <Col end=\"xs\">\n              <Button\n                className={classes.actionButton}\n                color=\"primary\"\n                size=\"md\"\n                data-testid=\"new-spending-limit-button\"\n                onClick={openNewSpendingLimitModal}\n                variant=\"contained\"\n              >\n                New spending limit\n              </Button>\n            </Col>\n          </Row>\n          {showNewSpendingLimitModal && <NewLimitModal close={closeNewSpendingLimitModal} open={true} />}\n        </>\n      )}\n    </>\n  )\n}\n\nexport default SpendingLimit\n"],"sourceRoot":""}