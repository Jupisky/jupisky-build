{"version":3,"sources":["routes/safe/container/index.tsx"],"names":["BALANCES_TAB_BTN_TEST_ID","SETTINGS_TAB_BTN_TEST_ID","APPS_TAB_BTN_TEST_ID","TRANSACTIONS_TAB_BTN_TEST_ID","ADDRESS_BOOK_TAB_BTN_TEST_ID","SAFE_VIEW_NAME_HEADING_TEST_ID","TRANSACTIONS_TAB_NEW_BTN_TEST_ID","Apps","lazy","Settings","Balances","TxList","AddressBookTable","Container","featuresEnabled","useSelector","currentSafeFeaturesEnabled","isSafeLoaded","currentSafeOwners","length","useState","isOpen","title","body","footer","onClose","modal","setModal","size","exact","path","SAFE_ROUTES","ASSETS_BALANCES","ASSETS_BALANCES_COLLECTIBLES","render","wrapInSuspense","TRANSACTIONS","to","TRANSACTIONS_HISTORY","TRANSACTIONS_QUEUE","ADDRESS_BOOK","APPS","history","includes","FEATURES","SAFE_APPS","push","generateSafeRoute","extractPrefixedSafeAddress","SETTINGS"],"mappings":"6nBAWaA,EAA2B,mBAC3BC,EAA2B,mBAC3BC,EAAuB,eACvBC,EAA+B,uBAC/BC,EAA+B,uBAC/BC,EAAiC,oBACjCC,EAAmC,2BAE1CC,EAAOC,gBAAK,kBAAM,wEAClBC,EAAWD,gBAAK,kBAAM,mCACtBE,EAAWF,gBAAK,kBAAM,mCACtBG,EAASH,gBAAK,kBAAM,gEACpBI,EAAmBJ,gBAAK,kBAAM,wEA0ErBK,UAxEG,WAChB,IAAMC,EAAkBC,YAAYC,KAE9BC,EADSF,YAAYG,KACCC,OAAS,EAErC,EAA0BC,mBAAS,CACjCC,QAAQ,EACRC,MAAO,KACPC,KAAM,KACNC,OAAQ,KACRC,QAAS,eALX,mBAAOC,EAAP,KAAcC,EAAd,KAQA,IAAKV,EACH,OACE,cAAC,IAAD,UACE,cAAC,SAAD,CAAQW,KAAK,SAmBnB,OACE,qCACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,OAAK,EACLC,KAAM,CAACC,IAAYC,gBAAiBD,IAAYE,8BAChDC,OAAQ,kBAAMC,YAAe,cAACzB,EAAD,IAAc,SAE7C,cAAC,IAAD,CACEmB,OAAK,EACLC,KAAMC,IAAYK,aAClBF,OAAQ,kBAAM,cAAC,IAAD,CAAUG,GAAIN,IAAYO,0BAE1C,cAAC,IAAD,CACET,OAAK,EACLC,KAAM,CAACC,IAAYO,qBAAsBP,IAAYQ,oBACrDL,OAAQ,kBAAMC,YAAe,cAACxB,EAAD,IAAY,SAE3C,cAAC,IAAD,CAAOkB,OAAK,EAACC,KAAMC,IAAYS,aAAcN,OAAQ,kBAAMC,YAAe,cAACvB,EAAD,IAAsB,SAChG,cAAC,IAAD,CACEiB,OAAK,EACLC,KAAMC,IAAYU,KAClBP,OAAQ,YAAkB,IAAfQ,EAAc,EAAdA,QAIT,OAHK5B,EAAgB6B,SAASC,IAASC,YACrCH,EAAQI,KAAKC,YAAkBhB,IAAYC,gBAAiBgB,gBAEvDb,YAAe,cAAC5B,EAAD,IAAU,SAGpC,cAAC,IAAD,CAAOuB,KAAMC,IAAYkB,SAAUf,OAAQ,kBAAMC,YAAe,cAAC1B,EAAD,IAAc,SAC9E,cAAC,IAAD,CAAU4B,GAAIN,IAAYC,qBAE3BN,EAAML,QAAU,cAAC,eAAD,2BAAkBK,GAAlB,IAAyBD,QA9CpB,WACJ,IAAD,EAAfC,EAAMD,UACR,UAAAC,EAAMD,eAAN,cAAAC,IAGFC,EAAS,CACPN,QAAQ,EACRC,MAAO,KACPC,KAAM,KACNC,OAAQ,KACRC,QAAS","file":"static/js/99.2da32a82.chunk.js","sourcesContent":["import { GenericModal, Loader } from '@gnosis.pm/safe-react-components'\nimport { useState, lazy } from 'react'\nimport { useSelector } from 'react-redux'\nimport { Redirect, Route, Switch } from 'react-router-dom'\n\nimport { currentSafeFeaturesEnabled, currentSafeOwners } from 'src/logic/safe/store/selectors'\nimport { wrapInSuspense } from 'src/utils/wrapInSuspense'\nimport { FEATURES } from 'src/config/networks/network.d'\nimport { LoadingContainer } from 'src/components/LoaderContainer'\nimport { generateSafeRoute, extractPrefixedSafeAddress, SAFE_ROUTES } from 'src/routes/routes'\n\nexport const BALANCES_TAB_BTN_TEST_ID = 'balances-tab-btn'\nexport const SETTINGS_TAB_BTN_TEST_ID = 'settings-tab-btn'\nexport const APPS_TAB_BTN_TEST_ID = 'apps-tab-btn'\nexport const TRANSACTIONS_TAB_BTN_TEST_ID = 'transactions-tab-btn'\nexport const ADDRESS_BOOK_TAB_BTN_TEST_ID = 'address-book-tab-btn'\nexport const SAFE_VIEW_NAME_HEADING_TEST_ID = 'safe-name-heading'\nexport const TRANSACTIONS_TAB_NEW_BTN_TEST_ID = 'transactions-tab-new-btn'\n\nconst Apps = lazy(() => import('src/routes/safe/components/Apps'))\nconst Settings = lazy(() => import('src/routes/safe/components/Settings'))\nconst Balances = lazy(() => import('src/routes/safe/components/Balances'))\nconst TxList = lazy(() => import('src/routes/safe/components/Transactions/TxList'))\nconst AddressBookTable = lazy(() => import('src/routes/safe/components/AddressBook'))\n\nconst Container = (): React.ReactElement => {\n  const featuresEnabled = useSelector(currentSafeFeaturesEnabled)\n  const owners = useSelector(currentSafeOwners)\n  const isSafeLoaded = owners.length > 0\n\n  const [modal, setModal] = useState({\n    isOpen: false,\n    title: null,\n    body: null,\n    footer: null,\n    onClose: () => {},\n  })\n\n  if (!isSafeLoaded) {\n    return (\n      <LoadingContainer>\n        <Loader size=\"md\" />\n      </LoadingContainer>\n    )\n  }\n\n  const closeGenericModal = () => {\n    if (modal.onClose) {\n      modal.onClose?.()\n    }\n\n    setModal({\n      isOpen: false,\n      title: null,\n      body: null,\n      footer: null,\n      onClose: () => {},\n    })\n  }\n\n  return (\n    <>\n      <Switch>\n        <Route\n          exact\n          path={[SAFE_ROUTES.ASSETS_BALANCES, SAFE_ROUTES.ASSETS_BALANCES_COLLECTIBLES]}\n          render={() => wrapInSuspense(<Balances />, null)}\n        />\n        <Route\n          exact\n          path={SAFE_ROUTES.TRANSACTIONS}\n          render={() => <Redirect to={SAFE_ROUTES.TRANSACTIONS_HISTORY} />}\n        />\n        <Route\n          exact\n          path={[SAFE_ROUTES.TRANSACTIONS_HISTORY, SAFE_ROUTES.TRANSACTIONS_QUEUE]}\n          render={() => wrapInSuspense(<TxList />, null)}\n        />\n        <Route exact path={SAFE_ROUTES.ADDRESS_BOOK} render={() => wrapInSuspense(<AddressBookTable />, null)} />\n        <Route\n          exact\n          path={SAFE_ROUTES.APPS}\n          render={({ history }) => {\n            if (!featuresEnabled.includes(FEATURES.SAFE_APPS)) {\n              history.push(generateSafeRoute(SAFE_ROUTES.ASSETS_BALANCES, extractPrefixedSafeAddress()))\n            }\n            return wrapInSuspense(<Apps />, null)\n          }}\n        />\n        <Route path={SAFE_ROUTES.SETTINGS} render={() => wrapInSuspense(<Settings />, null)} />\n        <Redirect to={SAFE_ROUTES.ASSETS_BALANCES} />\n      </Switch>\n      {modal.isOpen && <GenericModal {...modal} onClose={closeGenericModal} />}\n    </>\n  )\n}\n\nexport default Container\n"],"sourceRoot":""}