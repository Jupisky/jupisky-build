{"version":3,"sources":["components/Table/TableHead.tsx","components/Table/sorting.ts","components/Table/index.tsx","components/layout/Table/index.tsx","../node_modules/@material-ui/core/esm/Toolbar/Toolbar.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","routes/safe/components/Settings/Advanced/dataFetcher.ts","routes/safe/components/Settings/Advanced/style.ts","routes/safe/components/Settings/Advanced/RemoveModuleModal.tsx","routes/safe/components/Settings/Advanced/ModulesTable.tsx","logic/safe/utils/guardManager.ts","routes/safe/components/Settings/Advanced/RemoveGuardModal.tsx","routes/safe/components/Settings/Advanced/TransactionGuard.tsx","routes/safe/components/Settings/Advanced/index.tsx"],"names":["cellWidth","width","maxWidth","GnoTableHead","changeSort","property","orderAttr","onSort","props","this","columns","order","orderBy","map","column","align","padding","disablePadding","sortDirection","id","static","style","label","active","direction","onClick","React","desc","a","b","orderProp","format","styles","root","backgroundColor","borderTopRightRadius","sm","borderTopLeftRadius","boxShadow","selectRoot","lineHeight","xxl","white","paginationRoot","marginBottom","borderBottomRightRadius","borderBottomLeftRadius","loader","backProps","nextProps","GnoTable","newOrderBy","state","defaultOrder","newOrder","setState","fixed","getEmptyStyle","height","display","justifyContent","alignItems","handleChangePage","e","page","handleChangeRowsPerPage","rowsPerPage","Number","target","value","undefined","defaultOrderBy","find","children","classes","data","defaultFixed","defaultRowsPerPage","disableLoadingOnEmptyTable","disablePagination","noBorder","size","orderByParam","orderParam","displayRows","fixedParam","paginationClasses","input","columnSort","sortedData","dataArray","cmp","fixedElems","filter","elem","List","stabilizedThis","el","index","sortedElems","sort","concat","stableSort","getSorting","formatTypeSort","slice","isEmpty","Table","className","TableHead","TableBody","Row","TablePagination","backIconButtonProps","component","count","nextIconButtonProps","onPageChange","onRowsPerPageChange","rowsPerPageOptions","defaultProps","withStyles","Toolbar","ref","_props$component","Component","_props$disableGutters","disableGutters","_props$variant","variant","other","_objectWithoutProperties","_extends","clsx","gutters","theme","position","_defineProperty","paddingLeft","spacing","paddingRight","breakpoints","up","regular","mixins","toolbar","dense","minHeight","name","_ref","KeyboardArrowRight","_ref2","KeyboardArrowLeft","_ref3","_ref4","TablePaginationActions","_props$onChangePage","onChangePage","_props$onPageChange","useTheme","IconButton","event","disabled","color","Math","ceil","defaultLabelDisplayedRows","from","to","defaultRowsPerPageOptions","colSpan","_props$ActionsCompone","ActionsComponent","_props$backIconButton","backIconButtonText","colSpanProp","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","_props$nextIconButton","nextIconButtonText","onChangeRowsPerPageProp","onChangeRowsPerPage","onRowsPerPageChangeProp","_props$rowsPerPageOpt","_props$SelectProps","SelectProps","selectId","useId","labelId","MenuItemComponent","native","MenuItem","spacer","length","Typography","caption","Select","select","icon","selectIcon","InputBase","onChange","rowsPerPageOption","menuItem","key","min","actions","title","palette","text","primary","fontSize","typography","pxToRem","overflow","flex","flexShrink","marginRight","marginLeft","textAlign","textAlignLast","MODULES_TABLE_ADDRESS_ID","generateColumns","addressColumn","custom","actionsColumn","useStyles","makeStyles","createStyles","container","lg","hide","visibility","minWidth","noBorderBottom","borderBottom","modalOwner","md","modalDescription","accordionContainer","margin","gasCostsContainer","background","RemoveModuleModal","onClose","selectedModulePair","useSelector","currentSafe","safeAddress","address","safeVersion","currentVersion","useState","txData","setTxData","dispatch","useDispatch","manualSafeTxGas","setManualSafeTxGas","manualGasPrice","setManualGasPrice","manualGasLimit","setManualGasLimit","moduleAddress","useEstimateTransactionGas","txRecipient","txAmount","safeTxGas","gasCostFormatted","txEstimationExecutionStatus","isExecution","isOffChainSignature","isCreation","gasLimit","gasEstimation","gasPriceFormatted","useEstimationStatus","buttonStatus","useEffect","getDisableModuleTxData","removeSelectedModule","txParameters","createTransaction","valueInWei","txNonce","safeNonce","ethParameters","notifiedTransaction","TX_NOTIFICATION_TYPES","SETTINGS_CHANGE_TX","logError","Errors","_806","message","confirmButtonText","ButtonStatus","LOADING","EstimationStatus","Modal","description","handleClose","paperClassName","open","EditableTxParameters","ethGasLimit","ethGasPrice","closeEditModalCallback","oldGasPrice","newGasPrice","oldSafeTxGas","newSafeTxGas","toggleEditMode","ModalHeader","Hairline","Block","Col","xs","hash","showCopyBtn","showAvatar","explorerUrl","getExplorerInfo","Paragraph","noMargin","TxParametersDetail","onEdit","isTransactionCreation","isTransactionExecution","cn","Footer","withoutBorder","Buttons","cancelButtonProps","confirmButtonProps","status","ModulesTable","moduleData","autoColumns","granted","grantedSelector","viewRemoveModuleModal","setViewRemoveModuleModal","setSelectedModulePair","TableContainer","row","tabIndex","columnId","rowElement","justify","ButtonHelper","dataTestId","type","tooltip","getRemoveGuardTxData","guardAddress","getGnosisSafeInstanceAt","methods","setGuard","encodeABI","getSetGuardTxData","ZERO_ADDRESS","RemoveGuardModal","useMemo","removeTransactionGuard","_807","TransactionGuard","viewRemoveGuardModal","setViewRemoveGuardModal","triggerRemoveSelectedGuard","InfoText","styled","Text","Bold","strong","colors","NoModuleLegend","NoTransactionGuardLegend","Advanced","modulesList","nonce","modules","guard","isVersionWithGuards","semverSatisfies","trackEvent","useAnalytics","SETTINGS_EVENTS","ADVANCED","withoutMargin"],"mappings":"wOAUaA,EAAY,SAACC,GACxB,GAAKA,EAIL,MAAO,CACLC,SAAS,GAAD,OAAKD,EAAL,QAINE,E,4MACJC,WAAa,SAACC,EAAUC,GAAX,OAAyB,YAGpCC,EAFmB,EAAKC,MAAhBD,QAEDF,EAAUC,K,4CAGnB,WAAU,IAAD,OACP,EAAoCG,KAAKD,MAAjCE,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,MAAOC,EAAxB,EAAwBA,QAExB,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACGF,EAAQG,KAAI,SAACC,GAAD,OACX,cAAC,IAAD,CACEC,MAAOD,EAAOC,MAEdC,QAASF,EAAOG,eAAiB,OAAS,SAC1CC,cAAeN,IAAYE,EAAOK,IAAKR,EAJzC,SAMGG,EAAOM,OACN,qBAAKC,MAAOP,EAAOO,MAAnB,SAA2BP,EAAOQ,QAElC,cAAC,IAAD,CACEC,OAAQX,IAAYE,EAAOK,GAC3BK,UAAWb,EACXc,QAAS,EAAKrB,WAAWU,EAAOK,GAAIL,EAAOH,OAC3CU,MAAOP,EAAOO,MAJhB,SAMGP,EAAOQ,SAbPR,EAAOK,e,GAhBCO,iBAwCZvB,O,yICtDTwB,EAAO,SACXC,EACAC,EACAjB,EACAkB,EACAC,GAEA,IAAMpB,EAAQmB,EATmB,UASalB,EATb,SASwBA,EAEzD,OAAImB,EAAOF,EAAElB,IAAUoB,EAAOH,EAAEjB,KACtB,EAENoB,EAAOF,EAAElB,IAAUoB,EAAOH,EAAEjB,IACvB,EAGF,G,wBCVHqB,EAAS,CACbC,KAAM,CACJC,gBAAiB,QACjBC,qBAAsBC,KACtBC,oBAAqBD,KACrBE,UAAW,4CAEbC,WAAY,CACVC,WAAYC,MACZP,gBAAiB,SAEnBQ,MAAO,CACLR,gBAAiB,SAEnBS,eAAgB,CACdT,gBAAiB,QACjBI,UAAW,2CACXM,aAAc,OACdC,wBAAyBT,KACzBU,uBAAwBV,MAE1BW,OAAQ,CACNT,UAAW,6CAMTU,EAAY,CAChB,aAAc,iBAGVC,EAAY,CAChB,aAAc,aAGVC,E,kDAOJ,WAAY1C,GAAQ,IAAD,8BACjB,cAAMA,IA0BRD,OAAS,SAAC4C,EAAYrB,GACpB,MAA2B,EAAKsB,MAAxBzC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QACPyC,EAAiB,EAAK7C,MAAtB6C,aACJC,EAAW,OAGX3C,GAASC,IAAYuC,GAAwB,SAAVxC,EACrC2C,EAAW,MACD3C,GAA0B,SAAjB0C,IAEnBC,EAAW,OAGb,EAAKC,UAAS,iBAAO,CACnB5C,MAAO2C,EACP1C,QAASuC,EACTrB,YACA0B,OAAO,OA5CQ,EAgDnBC,cAAgB,iBAAO,CACrBC,OAAO,gBAAD,OAlEiB,IAkEjB,OACNvB,qBAAsBC,KACtBC,oBAAqBD,KACrBF,gBAAiB,QACjBjC,MAAO,OACP0D,QAAS,OACTC,eAAgB,SAChBC,WAAY,WAxDK,EA2DnBC,iBAAmB,SAACC,EAAGC,GACrB,EAAKT,SAAS,CAAES,UA5DC,EA+DnBC,wBAA0B,SAACF,GACzB,IAAMG,EAAcC,OAAOJ,EAAEK,OAAOC,OACpC,EAAKd,SAAS,CAAEW,iBA9DhB,EAAKd,MAAQ,CACXY,KAAM,EACNrD,WAAO2D,EACP1D,aAAS0D,EACTd,WAAOc,EACPxC,WAAW,EACXoC,iBAAaI,GATE,E,qDAanB,WACE,MAAoC7D,KAAKD,MAAjCE,EAAR,EAAQA,QAAS6D,EAAjB,EAAiBA,eAEbA,GAAkB7D,IACIA,EAAQ8D,MAAK,qBAAGrD,KAAgBoD,KAEpC5D,OAClBF,KAAK8C,SAAS,CACZzB,WAAW,O,oBA+CnB,WACE,MAcSrB,KAAKD,MAbZiE,EADF,EACEA,SACAC,EAFF,EAEEA,QACAhE,EAHF,EAGEA,QACAiE,EAJF,EAIEA,KACAC,EALF,EAKEA,aACAvB,EANF,EAMEA,aACAkB,EAPF,EAOEA,eACAM,EARF,EAQEA,mBACAC,EATF,EASEA,2BACAC,EAVF,EAUEA,kBACAzD,EAXF,EAWEA,MACA0D,EAZF,EAYEA,SACAC,EAbF,EAaEA,KAEF,EAAgExE,KAAK2C,MAA7DI,EAAR,EAAQA,MAAO7C,EAAf,EAAeA,MAAOC,EAAtB,EAAsBA,QAASkB,EAA/B,EAA+BA,UAAWkC,EAA1C,EAA0CA,KAAME,EAAhD,EAAgDA,YAC1CgB,EAAetE,GAAW2D,EAC1BY,EAAaxE,GAAS0C,EACtB+B,EAAclB,GAAeW,EAC7BQ,EAA8B,qBAAV7B,EAAwBA,IAAUoB,EACtDU,EAAoB,CACxB/C,WAAYmC,EAAQnC,WACpBN,MAAO+C,GAAYN,EAAQ/B,eAC3B4C,MAAOb,EAAQhC,OAEX8C,EAAa9E,EAAQ8D,MAAK,SAAC1D,GAAD,OAAYA,EAAOK,KAAO+D,KACtDO,ED5HkB,SAACC,EAAWC,EAAKnC,GACzC,IAAMoC,EAAapC,EAAQkC,EAAUG,QAAO,SAACC,GAAD,OAAUA,EAAKtC,SAASuC,YAAK,IAErEC,GADSxC,EAAQkC,EAAUG,QAAO,SAACC,GAAD,OAAWA,EAAI,SAAWJ,GACtC7E,KAAI,SAACoF,EAAIC,GAAL,MAAe,CAACD,EAAIC,MAY5CC,GAVNH,EAAiBA,EAAeI,MAAK,SAACxE,EAAGC,GACvC,IAAMlB,EAAQgF,EAAI/D,EAAE,GAAIC,EAAE,IAE1B,OAAc,IAAVlB,EACKA,EAGFiB,EAAE,GAAKC,EAAE,OAGiBhB,KAAI,SAACoF,GAAD,OAAQA,EAAG,MAElD,OAAOL,EAAWS,OAAOF,GC2GNG,CACf3B,EDzGoB,SACxBhE,EACAC,EACAkB,GAHwB,IAIxBC,EAJwB,uDAI8B,SAACsC,GAAD,OAAWA,GAJzC,MAMd,SAAV1D,EACI,SAACiB,EAAGC,GAAJ,OAAUF,EAAKC,EAAGC,EAAGjB,EAASkB,EAAWC,IACzC,SAACH,EAAGC,GAAJ,OAAWF,EAAKC,EAAGC,EAAGjB,EAASkB,EAAWC,ICkG1CwE,CAAWpB,EAAYD,EAAcpD,EAA3B,OAAsC0D,QAAtC,IAAsCA,OAAtC,EAAsCA,EAAYgB,gBAC5DnB,GAGGN,IACHU,EAAaA,EAAWgB,MAAMzC,EAAOoB,EAAapB,EAAOoB,EAAcA,IAGzE,IAAMsB,EAAmB,IAATzB,IAAeH,EAE/B,OACE,sCACI4B,GACA,eAACC,EAAA,EAAD,CAAO,kBAAiBrF,EAAOsF,UAAW5B,EAAW,GAAKN,EAAQzC,KAAlE,UACE,cAAC4E,EAAA,EAAD,CAAWnG,QAASA,EAASH,OAAQE,KAAKF,OAAQI,MAAOA,EAAOC,QAASsE,IACzE,cAAC4B,EAAA,EAAD,UAAYrC,EAASgB,QAGxBiB,GACC,cAACK,EAAA,EAAD,CAAKH,UAAWlC,EAAQ3B,OAAQ1B,MAAOZ,KAAKgD,gBAA5C,SACE,cAAC,SAAD,CAAQwB,KAAK,UAGfF,GACA,cAACiC,EAAA,EAAD,CACEC,oBAAqBjE,EACrB0B,QAASY,EACT4B,UAAU,MACVC,MAAOlC,EACPmC,oBAAqBnE,EACrBoE,aAAc5G,KAAKqD,iBACnBwD,oBAAqB7G,KAAKwD,wBAC1BD,KAAMA,EACNE,YAAakB,EACbmC,mBAAoB,CAAC,EAAG,GAAI,GAAI,GAAI,c,GA1IzB7F,aAAjBwB,EACGsE,aAAe,CACpBnE,aAAc,MACd0B,mBAAmB,EACnBF,mBAAoB,GA8IT4C,gBAAWzF,EAAXyF,CAA0BvE,I,kCClMzC,+G,gICkCIwE,EAAuBhG,cAAiB,SAAiBlB,EAAOmH,GAClE,IAAIjD,EAAUlE,EAAMkE,QAChBkC,EAAYpG,EAAMoG,UAClBgB,EAAmBpH,EAAM0G,UACzBW,OAAiC,IAArBD,EAA8B,MAAQA,EAClDE,EAAwBtH,EAAMuH,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DE,EAAiBxH,EAAMyH,QACvBA,OAA6B,IAAnBD,EAA4B,UAAYA,EAClDE,EAAQC,YAAyB3H,EAAO,CAAC,UAAW,YAAa,YAAa,iBAAkB,YAEpG,OAAoBkB,gBAAoBmG,EAAWO,YAAS,CAC1DxB,UAAWyB,kBAAK3D,EAAQzC,KAAMyC,EAAQuD,GAAUrB,GAAYmB,GAAkBrD,EAAQ4D,SACtFX,IAAKA,GACJO,OAqCUT,eA9EK,SAAgBc,GAClC,MAAO,CAELtG,KAAM,CACJuG,SAAU,WACV7E,QAAS,OACTE,WAAY,UAIdyE,QAASG,YAAgB,CACvBC,YAAaH,EAAMI,QAAQ,GAC3BC,aAAcL,EAAMI,QAAQ,IAC3BJ,EAAMM,YAAYC,GAAG,MAAO,CAC7BJ,YAAaH,EAAMI,QAAQ,GAC3BC,aAAcL,EAAMI,QAAQ,KAI9BI,QAASR,EAAMS,OAAOC,QAGtBC,MAAO,CACLC,UAAW,OAuDiB,CAChCC,KAAM,cADO3B,CAEZC,G,4CC3EC2B,EAAoB3H,gBAAoB4H,IAAoB,MAE5DC,EAAqB7H,gBAAoB8H,IAAmB,MAE5DC,EAAqB/H,gBAAoB8H,IAAmB,MAE5DE,EAAqBhI,gBAAoB4H,IAAoB,MAgFlDK,EA9E2BjI,cAAiB,SAAgClB,EAAOmH,GAChG,IAAIV,EAAsBzG,EAAMyG,oBAC5BE,EAAQ3G,EAAM2G,MACdC,EAAsB5G,EAAM4G,oBAC5BwC,EAAsBpJ,EAAMqJ,aAC5BA,OAAuC,IAAxBD,EAAiC,aAAiBA,EACjEE,EAAsBtJ,EAAM6G,aAC5BA,OAAuC,IAAxByC,EAAiC,aAAiBA,EACjE9F,EAAOxD,EAAMwD,KACbE,EAAc1D,EAAM0D,YACpBgE,EAAQC,YAAyB3H,EAAO,CAAC,sBAAuB,QAAS,sBAAuB,eAAgB,eAAgB,OAAQ,gBAExI+H,EAAQwB,cAYZ,OAAoBrI,gBAAoB,MAAO0G,YAAS,CACtDT,IAAKA,GACJO,GAAqBxG,gBAAoBsI,IAAY5B,YAAS,CAC/D3G,QAb0B,SAA+BwI,GACzDJ,EAAaI,EAAOjG,EAAO,GAC3BqD,EAAa4C,EAAOjG,EAAO,IAY3BkG,SAAmB,IAATlG,EACVmG,MAAO,WACNlD,GAA0C,QAApBsB,EAAM/G,UAAsB6H,EAAOE,GAAqB7H,gBAAoBsI,IAAY5B,YAAS,CACxH3G,QAZ0B,SAA+BwI,GACzDJ,EAAaI,EAAOjG,EAAO,GAC3BqD,EAAa4C,EAAOjG,EAAO,IAW3BkG,UAAqB,IAAX/C,GAAenD,GAAQoG,KAAKC,KAAKlD,EAAQjD,GAAe,EAClEiG,MAAO,WACN/C,GAA0C,QAApBmB,EAAM/G,UAAsBiI,EAAQC,O,SC6B3DY,EAA4B,SAAmCjB,GACjE,IAAIkB,EAAOlB,EAAKkB,KACZC,EAAKnB,EAAKmB,GACVrD,EAAQkC,EAAKlC,MACjB,MAAO,GAAGd,OAAOkE,EAAM,KAAKlE,OAAOmE,EAAI,QAAQnE,QAAkB,IAAXc,EAAeA,EAAQ,aAAad,OAAOmE,KAG/FC,EAA4B,CAAC,GAAI,GAAI,GAAI,KAKzCzD,EAA+BtF,cAAiB,SAAyBlB,EAAOmH,GAClF,IA+BI+C,EA/BAC,EAAwBnK,EAAMoK,iBAC9BA,OAA6C,IAA1BD,EAAmChB,EAAyBgB,EAC/E1D,EAAsBzG,EAAMyG,oBAC5B4D,EAAwBrK,EAAMsK,mBAC9BA,OAA+C,IAA1BD,EAAmC,gBAAkBA,EAC1EnG,EAAUlE,EAAMkE,QAChBkC,EAAYpG,EAAMoG,UAClBmE,EAAcvK,EAAMkK,QACpB9C,EAAmBpH,EAAM0G,UACzBW,OAAiC,IAArBD,EAA8BoD,IAAYpD,EACtDT,EAAQ3G,EAAM2G,MACd8D,EAAwBzK,EAAM0K,mBAC9BA,OAA+C,IAA1BD,EAAmCX,EAA4BW,EACpFE,EAAwB3K,EAAM4K,iBAC9BA,OAA6C,IAA1BD,EAAmC,iBAAmBA,EACzE/D,EAAsB5G,EAAM4G,oBAC5BiE,EAAwB7K,EAAM8K,mBAC9BA,OAA+C,IAA1BD,EAAmC,YAAcA,EACtExB,EAAerJ,EAAMqJ,aACrBxC,EAAe7G,EAAM6G,aACrBkE,EAA0B/K,EAAMgL,oBAChCC,EAA0BjL,EAAM8G,oBAChCtD,EAAOxD,EAAMwD,KACbE,EAAc1D,EAAM0D,YACpBwH,EAAwBlL,EAAM+G,mBAC9BA,OAA+C,IAA1BmE,EAAmCjB,EAA4BiB,EACpFC,EAAqBnL,EAAMoL,YAC3BA,OAAqC,IAAvBD,EAAgC,GAAKA,EACnDzD,EAAQC,YAAyB3H,EAAO,CAAC,mBAAoB,sBAAuB,qBAAsB,UAAW,YAAa,UAAW,YAAa,QAAS,qBAAsB,mBAAoB,sBAAuB,qBAAsB,eAAgB,eAAgB,sBAAuB,sBAAuB,OAAQ,cAAe,qBAAsB,gBAErXgL,EAAsBD,GAA2BE,EAGjD5D,IAAcmD,KAA2B,OAAdnD,IAC7B6C,EAAUK,GAAe,KAG3B,IAAIc,EAAWC,cACXC,EAAUD,cACVE,EAAoBJ,EAAYK,OAAS,SAAWC,IACxD,OAAoBxK,gBAAoBmG,EAAWO,YAAS,CAC1DxB,UAAWyB,kBAAK3D,EAAQzC,KAAM2E,GAC9B8D,QAASA,EACT/C,IAAKA,GACJO,GAAqBxG,gBAAoBgG,EAAS,CACnDd,UAAWlC,EAAQuE,SACLvH,gBAAoB,MAAO,CACzCkF,UAAWlC,EAAQyH,SACjB5E,EAAmB6E,OAAS,GAAkB1K,gBAAoB2K,IAAY,CAChFlC,MAAO,UACPlC,QAAS,QACTrB,UAAWlC,EAAQ4H,QACnBnL,GAAI4K,GACHX,GAAmB7D,EAAmB6E,OAAS,GAAkB1K,gBAAoB6K,IAAQnE,YAAS,CACvG1D,QAAS,CACP8H,OAAQ9H,EAAQ8H,OAChBC,KAAM/H,EAAQgI,YAEhBnH,MAAoB7D,gBAAoBiL,IAAW,CACjD/F,UAAWyB,kBAAK3D,EAAQa,MAAOb,EAAQnC,cAEzC8B,MAAOH,EACP0I,SAAUpB,EACVrK,GAAI0K,EACJE,QAASA,GACRH,GAAcrE,EAAmB1G,KAAI,SAAUgM,GAChD,OAAoBnL,gBAAoBsK,EAAmB,CACzDpF,UAAWlC,EAAQoI,SACnBC,IAAKF,EAAkBxI,MAAQwI,EAAkBxI,MAAQwI,EACzDxI,MAAOwI,EAAkBxI,MAAQwI,EAAkBxI,MAAQwI,GAC1DA,EAAkBvL,MAAQuL,EAAkBvL,MAAQuL,OACvCnL,gBAAoB2K,IAAY,CAChDlC,MAAO,UACPlC,QAAS,QACTrB,UAAWlC,EAAQ4H,SAClBpB,EAAmB,CACpBX,KAAgB,IAAVpD,EAAc,EAAInD,EAAOE,EAAc,EAC7CsG,IAAe,IAAXrD,EAAeiD,KAAK4C,IAAI7F,GAAQnD,EAAO,GAAKE,IAAgBF,EAAO,GAAKE,EAC5EiD,OAAkB,IAAXA,GAAgB,EAAIA,EAC3BnD,KAAMA,KACUtC,gBAAoBkJ,EAAkB,CACtDhE,UAAWlC,EAAQuI,QACnBhG,oBAAqBmB,YAAS,CAC5B8E,MAAOpC,EACP,aAAcA,GACb7D,GACHE,MAAOA,EACPC,oBAAqBgB,YAAS,CAC5B8E,MAAO5B,EACP,aAAcA,GACblE,GACHyC,aAAcA,EACdxC,aAAcA,EACdrD,KAAMA,EACNE,YAAaA,SAqJFuD,iBAnUK,SAAgBc,GAClC,MAAO,CAELtG,KAAM,CACJkI,MAAO5B,EAAM4E,QAAQC,KAAKC,QAC1BC,SAAU/E,EAAMgF,WAAWC,QAAQ,IACnCC,SAAU,OAEV,eAAgB,CACdzM,QAAS,IAKbiI,QAAS,CACPE,UAAW,GACXP,aAAc,GAIhBuD,OAAQ,CACNuB,KAAM,YAIRpB,QAAS,CACPqB,WAAY,GAKdpL,WAAY,CACVqL,YAAa,GACbC,WAAY,GAIdrB,OAAQ,CACN9D,YAAa,EACbE,aAAc,GACdkF,UAAW,QACXC,cAAe,SAMjBrB,WAAY,GAGZnH,MAAO,CACL4E,MAAO,UACPmD,SAAU,UACVK,WAAY,GAIdb,SAAU,GAGVG,QAAS,CACPU,WAAY,EACZE,WAAY,OAqQgB,CAChCzE,KAAM,sBADO3B,CAEZT,I,0HCjVUgH,EAA2B,UAW3BC,EAAkB,WAC7B,IAAMC,EAA6B,CACjCnN,MAAO,OACPoN,QAAQ,EACRlN,gBAAgB,EAChBE,GAAI6M,EACJ1M,MAAO,UACPX,OAAO,GAGHyN,EAA6B,CACjCD,QAAQ,EACRlN,gBAAgB,EAChBE,GAvBoC,UAwBpCG,MAAO,GACPX,OAAO,GAGT,OAAOoF,YAAK,CAACmI,EAAeE,K,0BC7BjBC,EAAYC,YACvBC,YAAa,CACXC,UAAW,CACTxN,QAASyN,MAEXC,KAAM,CACJ,UAAW,CACTxM,gBAAiB,WAEnB,mBAAoB,CAClByM,WAAY,YAGhB1B,QAAS,CACPrJ,eAAgB,WAChB+K,WAAY,SACZC,SAAU,SAEZC,eAAgB,CACd,SAAU,CACRC,aAAc,SAGlBC,WAAY,CACV/N,QAASgO,KACTnL,WAAY,UAEdoL,iBAAkB,CAChBjO,QAASgO,MAEXE,mBAAoB,CAClBC,OAAO,KAAD,OAAOH,OAEfI,kBAAmB,CACjBlN,gBAAiBmN,aACjBrO,QAAQ,KAAD,OAAOyN,U,qOCLPa,EAAoB,SAAC,GAA2E,IAAzEC,EAAwE,EAAxEA,QAASC,EAA+D,EAA/DA,mBACrC9K,EAAU2J,IAEhB,EAA8DoB,YAAYC,KAAzDC,EAAjB,EAAQC,QAAsCC,EAA9C,EAA8BC,eAC9B,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACMC,EAAWC,cACjB,EAA8CJ,mBAAS,KAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KACA,EAA4CN,qBAA5C,mBAAOO,EAAP,KAAuBC,EAAvB,KACA,EAA4CR,qBAA5C,mBAAOS,EAAP,KAAuBC,EAAvB,KAESC,EAAT,YAA0BlB,EAA1B,MAEA,EASImB,YAA0B,CAC5BX,SACAY,YAAajB,EACbkB,SAAU,IACVC,UAAWV,EACXE,iBACAE,mBAdAO,EADF,EACEA,iBACAC,GAFF,EAEEA,4BACAC,GAHF,EAGEA,YACAC,GAJF,EAIEA,oBACAC,GALF,EAKEA,WACAC,GANF,EAMEA,SACAC,GAPF,EAOEA,cACAC,GARF,EAQEA,kBAUF,GAAuBC,YAAoBP,IAApCQ,GAAP,qBAEAC,qBAAU,WACR,IAAMzB,EAAS0B,YAAuBlC,EAAoBG,EAAaE,GACvEI,EAAUD,KACT,CAACR,EAAoBG,EAAaE,IAErC,IAAM8B,GAAoB,uCAAG,WAAOC,GAAP,SAAAhQ,EAAA,sDAC3B,IACEsO,EACE2B,YAAkB,CAChBlC,cACAnF,GAAImF,EACJmC,WAAY,IACZ9B,SACA+B,QAASH,EAAaI,UACtBlB,UAAWc,EAAad,UACxBmB,cAAeL,EACfM,oBAAqBC,IAAsBC,sBAG/C,MAAOrO,GACPsO,YAASC,IAAOC,KAAR,UAAiB/C,EAAjB,mBAAyCzL,EAAEyO,UAf1B,2CAAH,sDAsCtBC,GAAoB,SAKxB,OAJIC,IAAaC,UAAYnB,KAC3BiB,GAAoBzB,KAAgC4B,IAAiBD,QAAU,aAAe,YAI9F,cAACE,EAAA,EAAD,CACEC,YAAY,6BACZC,YAAaxD,EACbyD,eAAe,QACf9F,MAAM,gBACN+F,MAAI,EALN,SAOE,cAACC,EAAA,EAAD,CACEhC,oBAAqBA,GACrBD,YAAaA,GACbkC,YAAa/B,GACbgC,YAAa9B,GACbR,UAAWO,GACXgC,uBAtCyB,SAACzB,GAC9B,IAAM0B,EAAchC,GACdiC,EAAc3B,EAAawB,YAC3BI,EAAenC,GACfoC,EAAe7B,EAAad,UAE9ByC,GAAeD,IAAgBC,GACjChD,EAAkBqB,EAAawB,aAG7BxB,EAAauB,aAAe/B,KAAaQ,EAAauB,aACxD1C,EAAkBmB,EAAauB,aAG7BM,GAAgBD,IAAiBC,GACnCpD,EAAmBoD,IAiBnB,SAQG,SAAC7B,EAAc8B,GACd,OACE,qCACE,cAACC,EAAA,EAAD,CAAapE,QAASA,EAASrC,MAAM,iBACrC,cAAC0G,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,WACE,cAAC9M,EAAA,EAAD,CAAKH,UAAWlC,EAAQqK,WAAxB,SACE,cAAC+E,EAAA,EAAD,CAAK/S,MAAM,SAASgT,GAAI,EAAxB,SACE,cAAC,cAAD,CACEC,KAAMtD,EACNuD,aAAW,EACXC,YAAU,EACVC,YAAaC,YAAgB1D,SAInC,cAAC3J,EAAA,EAAD,CAAKH,UAAWlC,EAAQuK,iBAAxB,SACE,cAACoF,EAAA,EAAD,CAAWC,UAAQ,EAACrP,KAAK,KAAzB,kOAOJ,cAAC4O,EAAA,EAAD,CAAOjN,UAAWlC,EAAQwK,mBAA1B,SAEE,cAACqF,EAAA,EAAD,CACE3C,aAAcA,EACd4C,OAAQd,EACRe,sBAAuBtD,GACvBuD,uBAAwBzD,GACxBC,oBAAqBA,OAGzB,cAACnK,EAAA,EAAD,CAAKH,UAAW+N,IAAGjQ,EAAQuK,iBAAkBvK,EAAQ0K,mBAArD,SACE,cAAC,IAAD,CACE2B,iBAAkBA,EAClBE,YAAaA,GACbE,WAAYA,GACZD,oBAAqBA,GACrBF,4BAA6BA,OAGjC,cAAC,IAAa4D,OAAd,CAAqBC,cAAerD,KAAiBkB,IAAaC,QAAlE,SACE,cAAC,IAAaiC,OAAOE,QAArB,CACEC,kBAAmB,CAAEtT,QAAS8N,GAC9ByF,mBAAoB,CAClB7K,MAAO,QACP1I,QAAS,kBAAMkQ,GAAqBC,IACpCqD,OAAQzD,GACRpE,KAAMqF,iB,sCCzJbyC,EAAe,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,WACvBzQ,EAAU2J,IAEV3N,EAAUuN,IACVmH,EAAc1U,EAAQmF,QAAO,qBAAGsI,UAEhCkH,EAAU5F,YAAY6F,KAE5B,EAA0DvF,oBAAS,GAAnE,mBAAOwF,EAAP,KAA8BC,EAA9B,KAGA,EAAoDzF,qBAApD,mBAAOP,EAAP,KAA2BiG,EAA3B,KAMA,OACE,qCACE,cAACC,EAAA,EAAD,UACE,cAAC/O,EAAA,EAAD,CACEjG,QAASA,EACTiE,KAAMwQ,EACNvQ,cAAY,EACZL,eAAgByJ,EAChBjJ,mBAAiB,EACjBzD,MAAM,UACN0D,UAAQ,EACRC,KAAI,OAAEkQ,QAAF,IAAEA,OAAF,EAAEA,EAAY/I,OARpB,SAUG,SAAC3G,GAAD,OACCA,EAAW5E,KAAI,SAAC8U,EAAKzP,GAAN,OACb,cAAC,IAAD,CACEU,UAAW+N,IAAGjQ,EAAQgK,KAAMxI,GAAS,GAAKA,IAAUT,EAAWR,KAAO,GAAKP,EAAQmK,gBACnF,cAxCY,aA0CZ+G,UAAW,EAJb,SAMGR,EAAYvU,KAAI,SAACC,EAAQoF,GACxB,IAAM2P,EAAW/U,EAAOK,GAClB2U,EAAaH,EAAIE,GACdnF,EAAT,YAA0BoF,EAA1B,MAEA,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CAAW/U,MAAOD,EAAOC,MAAOmG,UAAU,KAA1C,SACG2O,IAAa7H,EACZ,cAAC6F,EAAA,EAAD,CAAOkC,QAAQ,OAAf,SACE,cAAC,cAAD,CACE/B,KAAMtD,EACNuD,aAAW,EACXC,YAAU,EACVC,YAAaC,YAAgB1D,OAIjCoF,GAXgDD,GAcpD,cAAC,IAAD,CAAW3O,UAAU,KAArB,SACE,cAACH,EAAA,EAAD,CAAKhG,MAAM,MAAM6F,UAAWlC,EAAQuI,QAApC,SACGoI,GACC,cAACW,EAAA,EAAD,CACEvU,QAAS,kBAlDnCgU,EAkDqEK,QAjDrEN,GAAyB,IAkDCS,WAAU,UAAKvF,EAAL,YAvEN,qBAqEN,SAIE,cAAC,OAAD,CAAMzL,KAAK,KAAKiR,KAAK,SAAS/L,MAAM,QAAQgM,QAAQ,0BAtB9D,UAAkBN,EAAlB,YAA8B3P,QAT7BA,WA4CdqP,GAAyB/F,GACxB,cAAC,EAAD,CAAmBD,QAvEK,kBAAMiG,GAAyB,IAuEJhG,mBAAoBA,Q,2BClGlE4G,GAAuB,SAACzG,EAAqBE,GACxD,OAP+B,SAACwG,EAAsB1G,EAAqBE,GAG3E,OAFqByG,YAAwB3G,EAAaE,GAEtC0G,QAAQC,SAASH,GAAcI,YAI5CC,CAAkBC,KAAchH,EAAaE,ICuBzC+G,GAAmB,SAAC,GAAoE,IAAlErH,EAAiE,EAAjEA,QAAS8G,EAAwD,EAAxDA,aACpC3R,EAAU2J,IAEhB,EAA8DoB,YAAYC,KAAzDC,EAAjB,EAAQC,QAAsCC,EAA9C,EAA8BC,eACxBI,EAAWC,cACjB,EAA8CJ,mBAAS,KAAvD,mBAAOK,EAAP,KAAwBC,EAAxB,KACA,EAA4CN,qBAA5C,mBAAOO,EAAP,KAAuBC,EAAvB,KACA,EAA4CR,qBAA5C,mBAAOS,EAAP,KAAuBC,EAAvB,KAEMT,EAAS6G,mBAAQ,kBAAMT,GAAqBzG,EAAaE,KAAc,CAACF,EAAaE,IAE3F,EASIc,YAA0B,CAC5BX,SACAY,YAAajB,EACbkB,SAAU,IACVC,UAAWV,EACXE,iBACAE,mBAdAO,EADF,EACEA,iBACAC,EAFF,EAEEA,4BACAC,EAHF,EAGEA,YACAC,EAJF,EAIEA,oBACAC,EALF,EAKEA,WACAC,EANF,EAMEA,SACAC,GAPF,EAOEA,cACAC,GARF,EAQEA,kBAUF,GAAuBC,YAAoBP,GAApCQ,GAAP,qBAEMsF,GAAsB,uCAAG,WAAOlF,GAAP,SAAAhQ,EAAA,sDAC7B,IACEsO,EACE2B,YAAkB,CAChBlC,cACAnF,GAAImF,EACJmC,WAAY,IACZ9B,SACA+B,QAASH,EAAaI,UACtBlB,UAAWc,EAAad,UACxBmB,cAAeL,EACfM,oBAAqBC,IAAsBC,sBAG/C,MAAOrO,GACPsO,YAASC,IAAOyE,KAAR,UAAiBV,EAAjB,mBAAmCtS,EAAEyO,UAflB,2CAAH,sDAsCxBC,GAAoB,SAKxB,OAJIC,IAAaC,UAAYnB,KAC3BiB,GAAoBzB,IAAgC4B,IAAiBD,QAAU,aAAe,YAI9F,cAACE,EAAA,EAAD,CACEC,YAAY,wCACZC,YAAaxD,EACbyD,eAAe,QACf9F,MAAM,2BACN+F,MAAI,EALN,SAOE,cAACC,EAAA,EAAD,CACEhC,oBAAqBA,EACrBD,YAAaA,EACbkC,YAAa/B,EACbgC,YAAa9B,GACbR,UAAWO,GACXgC,uBAtCyB,SAACzB,GAC9B,IAAM0B,EAAchC,GACdiC,EAAc3B,EAAawB,YAC3BI,EAAenC,GACfoC,EAAe7B,EAAad,UAE9ByC,GAAeD,IAAgBC,GACjChD,EAAkBqB,EAAawB,aAG7BxB,EAAauB,aAAe/B,IAAaQ,EAAauB,aACxD1C,EAAkBmB,EAAauB,aAG7BM,GAAgBD,IAAiBC,GACnCpD,EAAmBoD,IAiBnB,SAQG,SAAC7B,EAAc8B,GACd,OACE,qCACE,cAACC,EAAA,EAAD,CAAapE,QAASA,EAASrC,MAAM,iBACrC,cAAC0G,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,WACE,cAAC9M,EAAA,EAAD,CAAKH,UAAWlC,EAAQqK,WAAxB,SACE,cAAC+E,EAAA,EAAD,CAAK/S,MAAM,SAASgT,GAAI,EAAxB,SACE,cAAC,cAAD,CACEC,KAAMqC,EACNpC,aAAW,EACXC,YAAU,EACVC,YAAaC,YAAgBiC,SAInC,cAACtP,EAAA,EAAD,CAAKH,UAAWlC,EAAQuK,iBAAxB,SACE,cAACoF,EAAA,EAAD,CAAWC,UAAQ,EAACrP,KAAK,KAAzB,kKAMJ,cAAC4O,EAAA,EAAD,CAAOjN,UAAWlC,EAAQwK,mBAA1B,SAEE,cAACqF,EAAA,EAAD,CACE3C,aAAcA,EACd4C,OAAQd,EACRe,sBAAuBtD,EACvBuD,uBAAwBzD,EACxBC,oBAAqBA,MAGzB,cAACnK,EAAA,EAAD,CAAKH,UAAW+N,IAAGjQ,EAAQuK,iBAAkBvK,EAAQ0K,mBAArD,SACE,cAAC,IAAD,CACE2B,iBAAkBA,EAClBE,YAAaA,EACbE,WAAYA,EACZD,oBAAqBA,EACrBF,4BAA6BA,MAGjC,cAAC,IAAa4D,OAAd,CAAqBC,cAAerD,KAAiBkB,IAAaC,QAAlE,SACE,cAAC,IAAaiC,OAAOE,QAArB,CACEC,kBAAmB,CAAEtT,QAAS8N,GAC9ByF,mBAAoB,CAClB7K,MAAO,QACP1I,QAAS,kBAAMqV,GAAuBlF,IACtCqD,OAAQzD,GACRpE,KAAMqF,iBCnJbuE,GAAmB,SAAC,GAA4D,IAA1DpH,EAAyD,EAAzDA,QAC3BlL,EAAU2J,IAEV3N,EAAUuN,IACVmH,EAAc1U,EAAQmF,QAAO,qBAAGsI,UAEhCkH,EAAU5F,YAAY6F,KAE5B,EAAwDvF,oBAAS,GAAjE,mBAAOkH,EAAP,KAA6BC,EAA7B,KAGMC,EAA6B,WACjCD,GAAwB,IAG1B,OACE,qCACE,cAACxB,EAAA,EAAD,UACE,cAAC/O,EAAA,EAAD,CAAOjG,QAASA,EAASiE,KAAM,CAACiL,GAAUhL,cAAY,EAACG,mBAAiB,EAACzD,MAAM,UAAU0D,UAAQ,EAAjG,SACG,SAACS,GAAD,OACCA,EAAW5E,KAAI,SAAC8U,EAAKzP,GAAN,OACb,cAAC,IAAD,CACEU,UAAW+N,IAAGjQ,EAAQgK,KAAMxI,GAAS,GAAKA,IAAUT,EAAWR,KAAO,GAAKP,EAAQmK,gBACnF,cA7BkB,aA+BlB+G,UAAW,EAJb,SAMGR,EAAYvU,KAAI,SAACC,EAAQoF,GACxB,IAAM2P,EAAW/U,EAAOK,GACxB,OACE,eAAC,WAAD,WACE,cAAC,IAAD,CAAWJ,MAAOD,EAAOC,MAAOmG,UAAU,KAA1C,SACE,cAAC2M,EAAA,EAAD,CAAOkC,QAAQ,OAAf,SACE,cAAC,cAAD,CAAa/B,KAAM2B,EAAK1B,aAAW,EAACC,YAAU,EAACC,YAAaC,YAAgBuB,QAF5BE,GAKpD,cAAC,IAAD,CAAW3O,UAAU,KAArB,SACE,cAACH,EAAA,EAAD,CAAKhG,MAAM,MAAM6F,UAAWlC,EAAQuI,QAApC,SACGoI,GACC,cAACW,EAAA,EAAD,CACEvU,QAAS0V,EACTlB,WAAU,UAAKN,EAAL,YAhDA,oBA8CZ,SAIE,cAAC,OAAD,CAAM1Q,KAAK,KAAKiR,KAAK,SAAS/L,MAAM,QAAQgM,QAAQ,0BAb9D,UAAkBN,EAAlB,YAA8B3P,QAN7BA,WAgCd+Q,GAAwBrH,GAAW,cAAC,GAAD,CAAkBL,QA/C7B,kBAAM2H,GAAwB,IA+C8Bb,aAAczG,QClEnGwH,GAAWC,kBAAOC,OAAPD,CAAH,iDAIRE,GAAOF,UAAOG,OAAV,0CACCjP,QAAMkP,OAAOrK,MAGlBsK,GAAiB,kBACrB,cAACN,GAAD,CAAUjN,MAAM,iBAAiBlF,KAAK,KAAtC,iCAKI0S,GAA2B,kBAC/B,cAACP,GAAD,CAAUjN,MAAM,iBAAiBlF,KAAK,KAAtC,uCAgEa2S,UA3DE,WAAqB,IAAD,IP1BPC,EO2BtBnT,EAAU2J,IAChB,YAAkDoB,YAAYC,YAA9D,QAA8E,GAAtEoI,EAAR,EAAQA,MAAOC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,MAAOlI,EAA/B,EAA+BA,eAEzBqF,EAAa4C,GAAO,UP7B1B,QAD4BF,EO8BeE,SP7B3C,IAAOF,OAAP,EAAOA,EAAahX,KAAI,SAACkX,GAAD,sBACrB/J,EAA2B+J,aO4BJ,QAAoC,KACxDE,EAAsBC,IAAgBpI,EAAgB,WACpDqI,EAAeC,cAAfD,WAMR,OAJA1G,qBAAU,WACR0G,EAAWE,IAAgBC,YAC1B,CAACH,IAGF,qCAEE,eAACtE,EAAA,EAAD,CAAOjN,UAAWlC,EAAQ8J,UAA1B,UACE,cAAC,QAAD,CAAOvJ,KAAK,KAAKsT,eAAa,EAA9B,2BAGA,cAACnB,GAAD,CAAUnS,KAAK,KAAf,kOAIA,eAACmS,GAAD,CAAUjN,MAAM,iBAAiBlF,KAAK,KAAtC,4BACiB,cAACsS,GAAD,CAAM,cAAa,gBAAnB,SAAqCO,UAKxD,eAACjE,EAAA,EAAD,CAAOjN,UAAWlC,EAAQ8J,UAA1B,UACE,cAAC,QAAD,CAAOvJ,KAAK,KAAKsT,eAAa,EAA9B,6BAGA,cAACnB,GAAD,CAAUnS,KAAK,KAAf,4KAKEkQ,GAAeA,EAAW/I,OAA8B,cAAC,EAAD,CAAc+I,WAAYA,IAA/C,cAAC,GAAD,OAItC8C,GACC,eAACpE,EAAA,EAAD,CAAOjN,UAAWlC,EAAQ8J,UAA1B,UACE,cAAC,QAAD,CAAOvJ,KAAK,KAAKsT,eAAa,EAA9B,+BAGA,cAACnB,GAAD,CAAUnS,KAAK,KAAf,0NAKE+S,EAAuC,cAAC,GAAD,CAAkBpI,QAASoI,IAA1D,cAAC,GAAD","file":"static/js/56.10580e9f.chunk.js","sourcesContent":["import TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport * as React from 'react'\n\ninterface CellWidth {\n  maxWidth: string\n}\n\nexport const cellWidth = (width?: string | number): CellWidth | undefined => {\n  if (!width) {\n    return undefined\n  }\n\n  return {\n    maxWidth: `${width}px`,\n  }\n}\n\nclass GnoTableHead extends React.PureComponent<any> {\n  changeSort = (property, orderAttr) => () => {\n    const { onSort } = this.props\n\n    onSort(property, orderAttr)\n  }\n\n  render() {\n    const { columns, order, orderBy } = this.props\n\n    return (\n      <TableHead>\n        <TableRow>\n          {columns.map((column) => (\n            <TableCell\n              align={column.align}\n              key={column.id}\n              padding={column.disablePadding ? 'none' : 'normal'}\n              sortDirection={orderBy === column.id ? order : false}\n            >\n              {column.static ? (\n                <div style={column.style}>{column.label}</div>\n              ) : (\n                <TableSortLabel\n                  active={orderBy === column.id}\n                  direction={order}\n                  onClick={this.changeSort(column.id, column.order)}\n                  style={column.style}\n                >\n                  {column.label}\n                </TableSortLabel>\n              )}\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    )\n  }\n}\n\nexport default GnoTableHead\n","import { List } from 'immutable'\n\nexport const FIXED = 'fixed'\n\nexport const buildOrderFieldFrom = (attr: string): string => `${attr}Order`\n\nconst desc = (\n  a: string,\n  b: string,\n  orderBy: string,\n  orderProp: boolean,\n  format: (value: string | number) => string | number,\n): number => {\n  const order = orderProp ? buildOrderFieldFrom(orderBy) : orderBy\n\n  if (format(b[order]) < format(a[order])) {\n    return -1\n  }\n  if (format(b[order]) > format(a[order])) {\n    return 1\n  }\n\n  return 0\n}\n\n// eslint-disable-next-line\nexport const stableSort = (dataArray, cmp, fixed) => {\n  const fixedElems = fixed ? dataArray.filter((elem) => elem.fixed) : List([])\n  const data = fixed ? dataArray.filter((elem) => !elem[FIXED]) : dataArray\n  let stabilizedThis = data.map((el, index) => [el, index])\n\n  stabilizedThis = stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0])\n\n    if (order !== 0) {\n      return order\n    }\n\n    return a[1] - b[1]\n  })\n\n  const sortedElems = stabilizedThis.map((el) => el[0])\n\n  return fixedElems.concat(sortedElems)\n}\n\nexport const getSorting = (\n  order: 'desc' | 'asc',\n  orderBy: string,\n  orderProp: boolean,\n  format: (value: string | number) => string | number = (value) => value,\n): ((a: string, b: string) => number) =>\n  order === 'desc'\n    ? (a, b) => desc(a, b, orderBy, orderProp, format)\n    : (a, b) => -desc(a, b, orderBy, orderProp, format)\n","import { Loader } from '@gnosis.pm/safe-react-components'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport { withStyles } from '@material-ui/core/styles'\nimport * as React from 'react'\n\nimport TableHead from 'src/components/Table/TableHead'\nimport { getSorting, stableSort } from 'src/components/Table/sorting'\nimport Row from 'src/components/layout/Row'\nimport { sm, xxl } from 'src/theme/variables'\n\nconst styles = {\n  root: {\n    backgroundColor: 'white',\n    borderTopRightRadius: sm,\n    borderTopLeftRadius: sm,\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n  },\n  selectRoot: {\n    lineHeight: xxl,\n    backgroundColor: 'white',\n  },\n  white: {\n    backgroundColor: 'white',\n  },\n  paginationRoot: {\n    backgroundColor: 'white',\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n    marginBottom: '90px',\n    borderBottomRightRadius: sm,\n    borderBottomLeftRadius: sm,\n  },\n  loader: {\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n  },\n}\n\nconst FIXED_EMPTY_HEIGHT = 255\n\nconst backProps = {\n  'aria-label': 'Previous Page',\n}\n\nconst nextProps = {\n  'aria-label': 'Next Page',\n}\n\nclass GnoTable extends React.Component<any, any> {\n  static defaultProps = {\n    defaultOrder: 'asc',\n    disablePagination: false,\n    defaultRowsPerPage: 5,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      page: 0,\n      order: undefined,\n      orderBy: undefined,\n      fixed: undefined,\n      orderProp: false,\n      rowsPerPage: undefined,\n    }\n  }\n\n  componentDidMount() {\n    const { columns, defaultOrderBy } = this.props\n\n    if (defaultOrderBy && columns) {\n      const defaultOrderCol = columns.find(({ id }) => id === defaultOrderBy)\n\n      if (defaultOrderCol.order) {\n        this.setState({\n          orderProp: true,\n        })\n      }\n    }\n  }\n\n  onSort = (newOrderBy, orderProp) => {\n    const { order, orderBy } = this.state\n    const { defaultOrder } = this.props\n    let newOrder = 'desc'\n\n    // if table was previously sorted by the user\n    if (order && orderBy === newOrderBy && order === 'desc') {\n      newOrder = 'asc'\n    } else if (!order && defaultOrder === 'desc') {\n      // if it was not sorted and defaultOrder is used\n      newOrder = 'asc'\n    }\n\n    this.setState(() => ({\n      order: newOrder,\n      orderBy: newOrderBy,\n      orderProp,\n      fixed: false,\n    }))\n  }\n\n  getEmptyStyle = () => ({\n    height: `calc(100vh - ${FIXED_EMPTY_HEIGHT}px)`,\n    borderTopRightRadius: sm,\n    borderTopLeftRadius: sm,\n    backgroundColor: 'white',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  })\n\n  handleChangePage = (e, page) => {\n    this.setState({ page })\n  }\n\n  handleChangeRowsPerPage = (e) => {\n    const rowsPerPage = Number(e.target.value)\n    this.setState({ rowsPerPage })\n  }\n\n  render() {\n    const {\n      children,\n      classes,\n      columns,\n      data,\n      defaultFixed,\n      defaultOrder,\n      defaultOrderBy,\n      defaultRowsPerPage,\n      disableLoadingOnEmptyTable,\n      disablePagination,\n      label,\n      noBorder,\n      size,\n    }: any = this.props\n    const { fixed, order, orderBy, orderProp, page, rowsPerPage } = this.state\n    const orderByParam = orderBy || defaultOrderBy\n    const orderParam = order || defaultOrder\n    const displayRows = rowsPerPage || defaultRowsPerPage\n    const fixedParam = typeof fixed !== 'undefined' ? fixed : !!defaultFixed\n    const paginationClasses = {\n      selectRoot: classes.selectRoot,\n      root: !noBorder && classes.paginationRoot,\n      input: classes.white,\n    }\n    const columnSort = columns.find((column) => column.id === orderByParam)\n    let sortedData = stableSort(\n      data,\n      getSorting(orderParam, orderByParam, orderProp, columnSort?.formatTypeSort),\n      fixedParam,\n    )\n\n    if (!disablePagination) {\n      sortedData = sortedData.slice(page * displayRows, page * displayRows + displayRows)\n    }\n\n    const isEmpty = size === 0 && !disableLoadingOnEmptyTable\n\n    return (\n      <>\n        {!isEmpty && (\n          <Table aria-labelledby={label} className={noBorder ? '' : classes.root}>\n            <TableHead columns={columns} onSort={this.onSort} order={order} orderBy={orderByParam} />\n            <TableBody>{children(sortedData)}</TableBody>\n          </Table>\n        )}\n        {isEmpty && (\n          <Row className={classes.loader} style={this.getEmptyStyle()}>\n            <Loader size=\"sm\" />\n          </Row>\n        )}\n        {!disablePagination && (\n          <TablePagination\n            backIconButtonProps={backProps}\n            classes={paginationClasses}\n            component=\"div\"\n            count={size}\n            nextIconButtonProps={nextProps}\n            onPageChange={this.handleChangePage}\n            onRowsPerPageChange={this.handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={displayRows}\n            rowsPerPageOptions={[5, 10, 25, 50, 100]}\n          />\n        )}\n      </>\n    )\n  }\n}\n\nexport default withStyles(styles as any)(GnoTable)\n","import Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport { ReactElement } from 'react'\n\nexport { TableBody, TableCell, TableHead, TableRow }\n\nconst buildWidthFrom = (size) => ({\n  minWidth: `${size}px`,\n})\n\nconst overflowStyle: any = {\n  overflowX: 'auto',\n}\n\n// see: https://css-tricks.com/responsive-data-tables/\nconst GnoTable = ({ children, size }): ReactElement => {\n  const style = size ? buildWidthFrom(size) : undefined\n\n  return (\n    <div style={overflowStyle}>\n      <Table style={style}>{children}</Table>\n    </div>\n  )\n}\n\nexport default GnoTable\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: _defineProperty({\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `variant=\"regular\"`. */\n    regular: theme.mixins.toolbar,\n\n    /* Styles applied to the root element if `variant=\"dense\"`. */\n    dense: {\n      minHeight: 48\n    }\n  };\n};\nvar Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'regular' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[variant], className, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes = {\n  /**\n   * Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, disables gutter padding.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['regular', 'dense'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToolbar'\n})(Toolbar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$onChangePage = props.onChangePage,\n      onChangePage = _props$onChangePage === void 0 ? function () {} : _props$onChangePage,\n      _props$onPageChange = props.onPageChange,\n      onPageChange = _props$onPageChange === void 0 ? function () {} : _props$onPageChange,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"onPageChange\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n    onPageChange(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n    onPageChange(event, page + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/unstable_useId';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      overflow: 'auto',\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n    // TODO v5: `.selectRoot` should be merged with `.input`\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {},\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onPageChange = props.onPageChange,\n      onChangeRowsPerPageProp = props.onChangeRowsPerPage,\n      onRowsPerPageChangeProp = props.onRowsPerPageChange,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onPageChange\", \"onChangeRowsPerPage\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var onChangeRowsPerPage = onChangeRowsPerPageProp || onRowsPerPageChangeProp;\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var selectId = useId();\n  var labelId = useId();\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption,\n    id: labelId\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    id: selectId,\n    labelId: labelId\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return /*#__PURE__*/React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n      value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n    }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page: page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    onPageChange: onPageChange,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   * @deprecated Use the onPageChange prop instead.\n   */\n  onChangePage: deprecatedPropType(PropTypes.func, 'Use the `onPageChange` prop instead.'),\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @deprecated Use the onRowsPerPageChange prop instead.\n   */\n  onChangeRowsPerPage: deprecatedPropType(PropTypes.func, 'Use the `onRowsPerPageChange` prop instead.'),\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n\n    if (count === -1) {\n      return null;\n    }\n\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import { List } from 'immutable'\nimport { TableColumn } from 'src/components/Table/types.d'\nimport { ModulePair } from 'src/logic/safe/store/models/safe'\n\nexport const MODULES_TABLE_ADDRESS_ID = 'address'\nexport const MODULES_TABLE_ACTIONS_ID = 'actions'\n\nexport type ModuleAddressColumn = { [MODULES_TABLE_ADDRESS_ID]: ModulePair }[]\n\nexport const getModuleData = (modulesList: ModulePair[] | null): ModuleAddressColumn | undefined => {\n  return modulesList?.map((modules) => ({\n    [MODULES_TABLE_ADDRESS_ID]: modules,\n  }))\n}\n\nexport const generateColumns = (): List<TableColumn> => {\n  const addressColumn: TableColumn = {\n    align: 'left',\n    custom: false,\n    disablePadding: false,\n    id: MODULES_TABLE_ADDRESS_ID,\n    label: 'Address',\n    order: false,\n  }\n\n  const actionsColumn: TableColumn = {\n    custom: true,\n    disablePadding: false,\n    id: MODULES_TABLE_ACTIONS_ID,\n    label: '',\n    order: false,\n  }\n\n  return List([addressColumn, actionsColumn])\n}\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nimport { background, lg, md } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    container: {\n      padding: lg,\n    },\n    hide: {\n      '&:hover': {\n        backgroundColor: '#f7f5f5',\n      },\n      '&:hover $actions': {\n        visibility: 'initial',\n      },\n    },\n    actions: {\n      justifyContent: 'flex-end',\n      visibility: 'hidden',\n      minWidth: '100px',\n    },\n    noBorderBottom: {\n      '& > td': {\n        borderBottom: 'none',\n      },\n    },\n    modalOwner: {\n      padding: md,\n      alignItems: 'center',\n    },\n    modalDescription: {\n      padding: md,\n    },\n    accordionContainer: {\n      margin: `0 ${md}`,\n    },\n    gasCostsContainer: {\n      backgroundColor: background,\n      padding: `0 ${lg}`,\n    },\n  }),\n)\n","import { EthHashInfo } from '@gnosis.pm/safe-react-components'\nimport cn from 'classnames'\nimport { ReactElement, useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport Modal, { ButtonStatus, Modal as GenericModal } from 'src/components/Modal'\nimport { getExplorerInfo } from 'src/config'\nimport { getDisableModuleTxData } from 'src/logic/safe/utils/modules'\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\n\nimport { ModulePair } from 'src/logic/safe/store/models/safe'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\n\nimport { useStyles } from './style'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\nimport { TransactionFees } from 'src/components/TransactionsFees'\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\n\ninterface RemoveModuleModalProps {\n  onClose: () => void\n  selectedModulePair: ModulePair\n}\n\nexport const RemoveModuleModal = ({ onClose, selectedModulePair }: RemoveModuleModalProps): ReactElement => {\n  const classes = useStyles()\n\n  const { address: safeAddress, currentVersion: safeVersion } = useSelector(currentSafe)\n  const [txData, setTxData] = useState('')\n  const dispatch = useDispatch()\n  const [manualSafeTxGas, setManualSafeTxGas] = useState('0')\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\n\n  const [, moduleAddress] = selectedModulePair\n\n  const {\n    gasCostFormatted,\n    txEstimationExecutionStatus,\n    isExecution,\n    isOffChainSignature,\n    isCreation,\n    gasLimit,\n    gasEstimation,\n    gasPriceFormatted,\n  } = useEstimateTransactionGas({\n    txData,\n    txRecipient: safeAddress,\n    txAmount: '0',\n    safeTxGas: manualSafeTxGas,\n    manualGasPrice,\n    manualGasLimit,\n  })\n\n  const [buttonStatus] = useEstimationStatus(txEstimationExecutionStatus)\n\n  useEffect(() => {\n    const txData = getDisableModuleTxData(selectedModulePair, safeAddress, safeVersion)\n    setTxData(txData)\n  }, [selectedModulePair, safeAddress, safeVersion])\n\n  const removeSelectedModule = async (txParameters: TxParameters): Promise<void> => {\n    try {\n      dispatch(\n        createTransaction({\n          safeAddress,\n          to: safeAddress,\n          valueInWei: '0',\n          txData,\n          txNonce: txParameters.safeNonce,\n          safeTxGas: txParameters.safeTxGas,\n          ethParameters: txParameters,\n          notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\n        }),\n      )\n    } catch (e) {\n      logError(Errors._806, `${selectedModulePair} – ${e.message}`)\n    }\n  }\n\n  const closeEditModalCallback = (txParameters: TxParameters) => {\n    const oldGasPrice = gasPriceFormatted\n    const newGasPrice = txParameters.ethGasPrice\n    const oldSafeTxGas = gasEstimation\n    const newSafeTxGas = txParameters.safeTxGas\n\n    if (newGasPrice && oldGasPrice !== newGasPrice) {\n      setManualGasPrice(txParameters.ethGasPrice)\n    }\n\n    if (txParameters.ethGasLimit && gasLimit !== txParameters.ethGasLimit) {\n      setManualGasLimit(txParameters.ethGasLimit)\n    }\n\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\n      setManualSafeTxGas(newSafeTxGas)\n    }\n  }\n\n  let confirmButtonText = 'Remove'\n  if (ButtonStatus.LOADING === buttonStatus) {\n    confirmButtonText = txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : 'Removing'\n  }\n\n  return (\n    <Modal\n      description=\"Remove the selected Module\"\n      handleClose={onClose}\n      paperClassName=\"modal\"\n      title=\"Remove Module\"\n      open\n    >\n      <EditableTxParameters\n        isOffChainSignature={isOffChainSignature}\n        isExecution={isExecution}\n        ethGasLimit={gasLimit}\n        ethGasPrice={gasPriceFormatted}\n        safeTxGas={gasEstimation}\n        closeEditModalCallback={closeEditModalCallback}\n      >\n        {(txParameters, toggleEditMode) => {\n          return (\n            <>\n              <ModalHeader onClose={onClose} title=\"Remove Guard\" />\n              <Hairline />\n              <Block>\n                <Row className={classes.modalOwner}>\n                  <Col align=\"center\" xs={1}>\n                    <EthHashInfo\n                      hash={moduleAddress}\n                      showCopyBtn\n                      showAvatar\n                      explorerUrl={getExplorerInfo(moduleAddress)}\n                    />\n                  </Col>\n                </Row>\n                <Row className={classes.modalDescription}>\n                  <Paragraph noMargin size=\"lg\">\n                    After removing this module, any feature or app that uses this module might no longer work. If this\n                    Safe requires more then one signature, the module removal will have to be confirmed by other owners\n                    as well.\n                  </Paragraph>\n                </Row>\n              </Block>\n              <Block className={classes.accordionContainer}>\n                {/* Tx Parameters */}\n                <TxParametersDetail\n                  txParameters={txParameters}\n                  onEdit={toggleEditMode}\n                  isTransactionCreation={isCreation}\n                  isTransactionExecution={isExecution}\n                  isOffChainSignature={isOffChainSignature}\n                />\n              </Block>\n              <Row className={cn(classes.modalDescription, classes.gasCostsContainer)}>\n                <TransactionFees\n                  gasCostFormatted={gasCostFormatted}\n                  isExecution={isExecution}\n                  isCreation={isCreation}\n                  isOffChainSignature={isOffChainSignature}\n                  txEstimationExecutionStatus={txEstimationExecutionStatus}\n                />\n              </Row>\n              <GenericModal.Footer withoutBorder={buttonStatus !== ButtonStatus.LOADING}>\n                <GenericModal.Footer.Buttons\n                  cancelButtonProps={{ onClick: onClose }}\n                  confirmButtonProps={{\n                    color: 'error',\n                    onClick: () => removeSelectedModule(txParameters),\n                    status: buttonStatus,\n                    text: confirmButtonText,\n                  }}\n                />\n              </GenericModal.Footer>\n            </>\n          )\n        }}\n      </EditableTxParameters>\n    </Modal>\n  )\n}\n","import { Icon, EthHashInfo } from '@gnosis.pm/safe-react-components'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport cn from 'classnames'\nimport { useState, Fragment } from 'react'\n\nimport { useSelector } from 'react-redux'\n\nimport { generateColumns, ModuleAddressColumn, MODULES_TABLE_ADDRESS_ID } from './dataFetcher'\nimport { RemoveModuleModal } from './RemoveModuleModal'\nimport { useStyles } from './style'\n\nimport ButtonHelper from 'src/components/ButtonHelper'\nimport { grantedSelector } from 'src/routes/safe/container/selector'\nimport { ModulePair } from 'src/logic/safe/store/models/safe'\nimport Table from 'src/components/Table'\nimport { TableCell, TableRow } from 'src/components/layout/Table'\nimport Block from 'src/components/layout/Block'\nimport Row from 'src/components/layout/Row'\nimport { getExplorerInfo } from 'src/config'\n\nconst REMOVE_MODULE_BTN_TEST_ID = 'remove-module-btn'\nconst MODULES_ROW_TEST_ID = 'owners-row'\n\ninterface ModulesTableProps {\n  moduleData: ModuleAddressColumn | null\n}\n\nexport const ModulesTable = ({ moduleData }: ModulesTableProps): React.ReactElement => {\n  const classes = useStyles()\n\n  const columns = generateColumns()\n  const autoColumns = columns.filter(({ custom }) => !custom)\n\n  const granted = useSelector(grantedSelector)\n\n  const [viewRemoveModuleModal, setViewRemoveModuleModal] = useState(false)\n  const hideRemoveModuleModal = () => setViewRemoveModuleModal(false)\n\n  const [selectedModulePair, setSelectedModulePair] = useState<ModulePair>()\n  const triggerRemoveSelectedModule = (modulePair: ModulePair): void => {\n    setSelectedModulePair(modulePair)\n    setViewRemoveModuleModal(true)\n  }\n\n  return (\n    <>\n      <TableContainer>\n        <Table\n          columns={columns}\n          data={moduleData}\n          defaultFixed\n          defaultOrderBy={MODULES_TABLE_ADDRESS_ID}\n          disablePagination\n          label=\"Modules\"\n          noBorder\n          size={moduleData?.length}\n        >\n          {(sortedData) =>\n            sortedData.map((row, index) => (\n              <TableRow\n                className={cn(classes.hide, index >= 3 && index === sortedData.size - 1 && classes.noBorderBottom)}\n                data-testid={MODULES_ROW_TEST_ID}\n                key={index}\n                tabIndex={-1}\n              >\n                {autoColumns.map((column, index) => {\n                  const columnId = column.id\n                  const rowElement = row[columnId]\n                  const [, moduleAddress] = rowElement\n\n                  return (\n                    <Fragment key={`${columnId}-${index}`}>\n                      <TableCell align={column.align} component=\"td\" key={columnId}>\n                        {columnId === MODULES_TABLE_ADDRESS_ID ? (\n                          <Block justify=\"left\">\n                            <EthHashInfo\n                              hash={moduleAddress}\n                              showCopyBtn\n                              showAvatar\n                              explorerUrl={getExplorerInfo(moduleAddress)}\n                            />\n                          </Block>\n                        ) : (\n                          rowElement\n                        )}\n                      </TableCell>\n                      <TableCell component=\"td\">\n                        <Row align=\"end\" className={classes.actions}>\n                          {granted && (\n                            <ButtonHelper\n                              onClick={() => triggerRemoveSelectedModule(rowElement)}\n                              dataTestId={`${moduleAddress}-${REMOVE_MODULE_BTN_TEST_ID}`}\n                            >\n                              <Icon size=\"sm\" type=\"delete\" color=\"error\" tooltip=\"Remove module\" />\n                            </ButtonHelper>\n                          )}\n                        </Row>\n                      </TableCell>\n                    </Fragment>\n                  )\n                })}\n              </TableRow>\n            ))\n          }\n        </Table>\n      </TableContainer>\n      {viewRemoveModuleModal && selectedModulePair && (\n        <RemoveModuleModal onClose={hideRemoveModuleModal} selectedModulePair={selectedModulePair} />\n      )}\n    </>\n  )\n}\n","import { getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\nimport { ZERO_ADDRESS } from 'src/logic/wallets/ethAddresses'\n\nexport const getSetGuardTxData = (guardAddress: string, safeAddress: string, safeVersion: string): string => {\n  const safeInstance = getGnosisSafeInstanceAt(safeAddress, safeVersion)\n\n  return safeInstance.methods.setGuard(guardAddress).encodeABI()\n}\n\nexport const getRemoveGuardTxData = (safeAddress: string, safeVersion: string): string => {\n  return getSetGuardTxData(ZERO_ADDRESS, safeAddress, safeVersion)\n}\n","import { EthHashInfo } from '@gnosis.pm/safe-react-components'\nimport cn from 'classnames'\nimport { ReactElement, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport Modal, { ButtonStatus, Modal as GenericModal } from 'src/components/Modal'\nimport { getExplorerInfo } from 'src/config'\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\n\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\n\nimport { useStyles } from './style'\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\nimport { TransactionFees } from 'src/components/TransactionsFees'\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { getRemoveGuardTxData } from 'src/logic/safe/utils/guardManager'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { ModalHeader } from '../../Balances/SendModal/screens/ModalHeader'\n\ninterface RemoveGuardModalProps {\n  onClose: () => void\n  guardAddress: string\n}\n\nexport const RemoveGuardModal = ({ onClose, guardAddress }: RemoveGuardModalProps): ReactElement => {\n  const classes = useStyles()\n\n  const { address: safeAddress, currentVersion: safeVersion } = useSelector(currentSafe)\n  const dispatch = useDispatch()\n  const [manualSafeTxGas, setManualSafeTxGas] = useState('0')\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\n\n  const txData = useMemo(() => getRemoveGuardTxData(safeAddress, safeVersion), [safeAddress, safeVersion])\n\n  const {\n    gasCostFormatted,\n    txEstimationExecutionStatus,\n    isExecution,\n    isOffChainSignature,\n    isCreation,\n    gasLimit,\n    gasEstimation,\n    gasPriceFormatted,\n  } = useEstimateTransactionGas({\n    txData,\n    txRecipient: safeAddress,\n    txAmount: '0',\n    safeTxGas: manualSafeTxGas,\n    manualGasPrice,\n    manualGasLimit,\n  })\n\n  const [buttonStatus] = useEstimationStatus(txEstimationExecutionStatus)\n\n  const removeTransactionGuard = async (txParameters: TxParameters): Promise<void> => {\n    try {\n      dispatch(\n        createTransaction({\n          safeAddress,\n          to: safeAddress,\n          valueInWei: '0',\n          txData,\n          txNonce: txParameters.safeNonce,\n          safeTxGas: txParameters.safeTxGas,\n          ethParameters: txParameters,\n          notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\n        }),\n      )\n    } catch (e) {\n      logError(Errors._807, `${guardAddress} – ${e.message}`)\n    }\n  }\n\n  const closeEditModalCallback = (txParameters: TxParameters) => {\n    const oldGasPrice = gasPriceFormatted\n    const newGasPrice = txParameters.ethGasPrice\n    const oldSafeTxGas = gasEstimation\n    const newSafeTxGas = txParameters.safeTxGas\n\n    if (newGasPrice && oldGasPrice !== newGasPrice) {\n      setManualGasPrice(txParameters.ethGasPrice)\n    }\n\n    if (txParameters.ethGasLimit && gasLimit !== txParameters.ethGasLimit) {\n      setManualGasLimit(txParameters.ethGasLimit)\n    }\n\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\n      setManualSafeTxGas(newSafeTxGas)\n    }\n  }\n\n  let confirmButtonText = 'Remove'\n  if (ButtonStatus.LOADING === buttonStatus) {\n    confirmButtonText = txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : 'Removing'\n  }\n\n  return (\n    <Modal\n      description=\"Remove the selected Transaction Guard\"\n      handleClose={onClose}\n      paperClassName=\"modal\"\n      title=\"Remove Transaction Guard\"\n      open\n    >\n      <EditableTxParameters\n        isOffChainSignature={isOffChainSignature}\n        isExecution={isExecution}\n        ethGasLimit={gasLimit}\n        ethGasPrice={gasPriceFormatted}\n        safeTxGas={gasEstimation}\n        closeEditModalCallback={closeEditModalCallback}\n      >\n        {(txParameters, toggleEditMode) => {\n          return (\n            <>\n              <ModalHeader onClose={onClose} title=\"Remove Guard\" />\n              <Hairline />\n              <Block>\n                <Row className={classes.modalOwner}>\n                  <Col align=\"center\" xs={1}>\n                    <EthHashInfo\n                      hash={guardAddress}\n                      showCopyBtn\n                      showAvatar\n                      explorerUrl={getExplorerInfo(guardAddress)}\n                    />\n                  </Col>\n                </Row>\n                <Row className={classes.modalDescription}>\n                  <Paragraph noMargin size=\"lg\">\n                    Once the transaction guard has been removed, checks by the transaction guard will not be conducted\n                    before or after any subsequent transactions.\n                  </Paragraph>\n                </Row>\n              </Block>\n              <Block className={classes.accordionContainer}>\n                {/* Tx Parameters */}\n                <TxParametersDetail\n                  txParameters={txParameters}\n                  onEdit={toggleEditMode}\n                  isTransactionCreation={isCreation}\n                  isTransactionExecution={isExecution}\n                  isOffChainSignature={isOffChainSignature}\n                />\n              </Block>\n              <Row className={cn(classes.modalDescription, classes.gasCostsContainer)}>\n                <TransactionFees\n                  gasCostFormatted={gasCostFormatted}\n                  isExecution={isExecution}\n                  isCreation={isCreation}\n                  isOffChainSignature={isOffChainSignature}\n                  txEstimationExecutionStatus={txEstimationExecutionStatus}\n                />\n              </Row>\n              <GenericModal.Footer withoutBorder={buttonStatus !== ButtonStatus.LOADING}>\n                <GenericModal.Footer.Buttons\n                  cancelButtonProps={{ onClick: onClose }}\n                  confirmButtonProps={{\n                    color: 'error',\n                    onClick: () => removeTransactionGuard(txParameters),\n                    status: buttonStatus,\n                    text: confirmButtonText,\n                  }}\n                />\n              </GenericModal.Footer>\n            </>\n          )\n        }}\n      </EditableTxParameters>\n    </Modal>\n  )\n}\n","import { Icon, EthHashInfo } from '@gnosis.pm/safe-react-components'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport cn from 'classnames'\nimport { useState, Fragment } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { generateColumns } from './dataFetcher'\nimport { RemoveGuardModal } from './RemoveGuardModal'\nimport { useStyles } from './style'\n\nimport ButtonHelper from 'src/components/ButtonHelper'\nimport { grantedSelector } from 'src/routes/safe/container/selector'\nimport Table from 'src/components/Table'\nimport { TableCell, TableRow } from 'src/components/layout/Table'\nimport Block from 'src/components/layout/Block'\nimport Row from 'src/components/layout/Row'\nimport { getExplorerInfo } from 'src/config'\n\nexport const REMOVE_GUARD_BTN_TEST_ID = 'remove-guard-btn'\nexport const GUARDS_ROW_TEST_ID = 'guards-row'\n\ninterface TransactionGuardProps {\n  address: string\n}\n\nexport const TransactionGuard = ({ address }: TransactionGuardProps): React.ReactElement => {\n  const classes = useStyles()\n\n  const columns = generateColumns()\n  const autoColumns = columns.filter(({ custom }) => !custom)\n\n  const granted = useSelector(grantedSelector)\n\n  const [viewRemoveGuardModal, setViewRemoveGuardModal] = useState(false)\n  const hideRemoveGuardModal = () => setViewRemoveGuardModal(false)\n\n  const triggerRemoveSelectedGuard = (): void => {\n    setViewRemoveGuardModal(true)\n  }\n\n  return (\n    <>\n      <TableContainer>\n        <Table columns={columns} data={[address]} defaultFixed disablePagination label=\"Modules\" noBorder>\n          {(sortedData) =>\n            sortedData.map((row, index) => (\n              <TableRow\n                className={cn(classes.hide, index >= 3 && index === sortedData.size - 1 && classes.noBorderBottom)}\n                data-testid={GUARDS_ROW_TEST_ID}\n                key={index}\n                tabIndex={-1}\n              >\n                {autoColumns.map((column, index) => {\n                  const columnId = column.id\n                  return (\n                    <Fragment key={`${columnId}-${index}`}>\n                      <TableCell align={column.align} component=\"td\" key={columnId}>\n                        <Block justify=\"left\">\n                          <EthHashInfo hash={row} showCopyBtn showAvatar explorerUrl={getExplorerInfo(row)} />\n                        </Block>\n                      </TableCell>\n                      <TableCell component=\"td\">\n                        <Row align=\"end\" className={classes.actions}>\n                          {granted && (\n                            <ButtonHelper\n                              onClick={triggerRemoveSelectedGuard}\n                              dataTestId={`${row}-${REMOVE_GUARD_BTN_TEST_ID}`}\n                            >\n                              <Icon size=\"sm\" type=\"delete\" color=\"error\" tooltip=\"Remove module\" />\n                            </ButtonHelper>\n                          )}\n                        </Row>\n                      </TableCell>\n                    </Fragment>\n                  )\n                })}\n              </TableRow>\n            ))\n          }\n        </Table>\n      </TableContainer>\n      {viewRemoveGuardModal && address && <RemoveGuardModal onClose={hideRemoveGuardModal} guardAddress={address} />}\n    </>\n  )\n}\n","import { Text, theme, Title } from '@gnosis.pm/safe-react-components'\nimport { ReactElement, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport styled from 'styled-components'\nimport semverSatisfies from 'semver/functions/satisfies'\n\nimport { getModuleData } from './dataFetcher'\nimport { useStyles } from './style'\nimport { ModulesTable } from './ModulesTable'\n\nimport Block from 'src/components/layout/Block'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { useAnalytics, SETTINGS_EVENTS } from 'src/utils/googleAnalytics'\nimport { TransactionGuard } from './TransactionGuard'\n\nconst InfoText = styled(Text)`\n  margin-top: 16px;\n`\n\nconst Bold = styled.strong`\n  color: ${theme.colors.text};\n`\n\nconst NoModuleLegend = (): ReactElement => (\n  <InfoText color=\"secondaryLight\" size=\"xl\">\n    No modules enabled\n  </InfoText>\n)\n\nconst NoTransactionGuardLegend = (): ReactElement => (\n  <InfoText color=\"secondaryLight\" size=\"xl\">\n    No transaction guard set\n  </InfoText>\n)\n\nconst Advanced = (): ReactElement => {\n  const classes = useStyles()\n  const { nonce, modules, guard, currentVersion } = useSelector(currentSafe) ?? {}\n\n  const moduleData = modules ? getModuleData(modules) ?? null : null\n  const isVersionWithGuards = semverSatisfies(currentVersion, '>=1.3.0')\n  const { trackEvent } = useAnalytics()\n\n  useEffect(() => {\n    trackEvent(SETTINGS_EVENTS.ADVANCED)\n  }, [trackEvent])\n\n  return (\n    <>\n      {/* Nonce */}\n      <Block className={classes.container}>\n        <Title size=\"xs\" withoutMargin>\n          Jupisky Nonce\n        </Title>\n        <InfoText size=\"lg\">\n          For security reasons, transactions made with Jupisky need to be executed in order. The nonce shows you\n          which transaction will be executed next. You can find the nonce for a transaction in the transaction details.\n        </InfoText>\n        <InfoText color=\"secondaryLight\" size=\"xl\">\n          Current Nonce: <Bold data-testid={'current-nonce'}>{nonce}</Bold>\n        </InfoText>\n      </Block>\n\n      {/* Modules */}\n      <Block className={classes.container}>\n        <Title size=\"xs\" withoutMargin>\n          Jupisky Modules\n        </Title>\n        <InfoText size=\"lg\">\n          Modules allow you to customize the access-control logic of your Jupisky. Modules are potentially risky, so make\n          sure to only use modules from trusted sources.\n        </InfoText>\n\n        {!moduleData || !moduleData.length ? <NoModuleLegend /> : <ModulesTable moduleData={moduleData} />}\n      </Block>\n\n      {/* Transaction guard */}\n      {isVersionWithGuards && (\n        <Block className={classes.container}>\n          <Title size=\"xs\" withoutMargin>\n            Transaction Guard\n          </Title>\n          <InfoText size=\"lg\">\n            Transaction guards impose additional constraints that are checked prior to executing a Jupisky transaction.\n            Transaction guards are potentially risky, so make sure to only use modules from trusted sources. \n          </InfoText>\n\n          {!guard ? <NoTransactionGuardLegend /> : <TransactionGuard address={guard} />}\n        </Block>\n      )}\n    </>\n  )\n}\n\nexport default Advanced\n"],"sourceRoot":""}