{"version":3,"sources":["assets/icons/qrcode.svg","components/ScanQRModal/style.ts","components/ScanQRModal/index.tsx","components/ScanQRModal/ScanQRWrapper/index.tsx","components/forms/SelectField/index.tsx","components/layout/Heading/index.tsx","components/Table/TableHead.tsx","components/layout/Heading/index.module.scss","../node_modules/react-final-form-listeners/dist/react-final-form-listeners.es.js","components/Table/sorting.ts","components/Table/index.tsx","components/forms/AddressInput/index.tsx","../node_modules/@material-ui/core/esm/Toolbar/Toolbar.js","../node_modules/@material-ui/core/esm/TablePagination/TablePaginationActions.js","../node_modules/@material-ui/core/esm/TablePagination/TablePagination.js","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/OwnerForm/style.ts","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/OwnerForm/index.tsx","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/Review/style.ts","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/Review/index.tsx","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/ThresholdForm/style.ts","routes/safe/components/Settings/ManageOwners/AddOwnerModal/screens/ThresholdForm/index.tsx","routes/safe/components/Settings/ManageOwners/AddOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/EditOwnerModal/style.ts","routes/safe/components/Settings/ManageOwners/EditOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/CheckOwner/style.ts","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/CheckOwner/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/Review/style.ts","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/Review/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/ThresholdForm/style.ts","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/screens/ThresholdForm/index.tsx","routes/safe/components/Settings/ManageOwners/RemoveOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/OwnerForm/style.ts","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/OwnerForm/index.tsx","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/Review/style.ts","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/Review/index.tsx","routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/index.tsx","routes/safe/components/Settings/ManageOwners/dataFetcher.ts","routes/safe/components/Settings/ManageOwners/style.ts","routes/safe/components/Settings/ManageOwners/index.tsx"],"names":["styles","createStyles","heading","padding","lg","justifyContent","maxHeight","boxSizing","loaderContainer","width","height","close","color","secondaryText","detailsContainer","backgroundColor","background","buttonRow","button","marginLeft","sm","useStyles","makeStyles","ScanQRModal","isOpen","onClose","onScan","classes","useState","fileUploadModalOpen","setFileUploadModalOpen","error","setError","cameraBlocked","setCameraBlocked","scannerRef","React","openImageDialog","current","useEffect","onFileScannedResolve","successData","console","name","Modal","description","handleClose","open","title","Row","align","className","grow","Paragraph","noMargin","size","IconButton","disableRipple","onClick","Hairline","Col","layout","middle","Block","margin","legacyMode","onError","err","data","ref","style","facingMode","Button","minWidth","variant","qrCodeBtn","cursor","ScanQRWrapper","handleScan","testId","qrModalOpen","setQrModalOpen","closeQrModal","Img","alt","role","src","QRIcon","value","SelectInput","disableError","formControlProps","input","onChange","restInput","label","meta","renderValue","rest","showError","submitError","dirtySinceLastSubmit","touched","inputProps","htmlFor","cx","classNames","bind","Heading","props","children","tag","truncate","capitalize","undefined","cellWidth","maxWidth","GnoTableHead","changeSort","property","orderAttr","onSort","this","columns","order","orderBy","map","column","disablePadding","sortDirection","id","static","active","direction","module","exports","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_inheritsLoose","subClass","superClass","create","constructor","__proto__","Component","OnChangeState","_React$Component","_this","state","previous","_proto","componentDidUpdate","_this$props","setState","render","OnChange","_ref","createElement","Field","subscription","allowNull","desc","a","b","orderProp","format","root","borderTopRightRadius","borderTopLeftRadius","boxShadow","selectRoot","lineHeight","xxl","white","paginationRoot","marginBottom","borderBottomRightRadius","borderBottomLeftRadius","loader","backProps","nextProps","GnoTable","newOrderBy","defaultOrder","newOrder","fixed","getEmptyStyle","display","alignItems","handleChangePage","e","page","handleChangeRowsPerPage","rowsPerPage","Number","defaultOrderBy","find","defaultFixed","defaultRowsPerPage","disableLoadingOnEmptyTable","disablePagination","noBorder","orderByParam","orderParam","displayRows","fixedParam","paginationClasses","columnSort","sortedData","dataArray","cmp","fixedElems","filter","elem","List","stabilizedThis","el","index","sortedElems","sort","concat","stableSort","getSorting","formatTypeSort","slice","isEmpty","Table","TableHead","TableBody","TablePagination","backIconButtonProps","component","count","nextIconButtonProps","onPageChange","onRowsPerPageChange","rowsPerPageOptions","defaultProps","withStyles","AddressInput","text","placeholder","fieldMutator","inputAdornment","validators","defaultValue","disabled","currentInput","setCurrentInput","resolutions","setResolutions","resolvedAddress","isResolving","adornment","endAdornment","position","TextField","type","spellCheck","validate","composeValidators","required","mustBeEthereumAddress","address","trimSpaces","isValidEnsName","isValidCryptoDomainName","prev","getAddressFromDomain","resolverAddr","formattedAddress","checksumAddress","logError","Errors","_101","message","checkedAddress","isValidAddress","Toolbar","_props$component","_props$disableGutters","disableGutters","_props$variant","other","_objectWithoutProperties","clsx","gutters","theme","_defineProperty","paddingLeft","spacing","paddingRight","breakpoints","up","regular","mixins","toolbar","dense","minHeight","KeyboardArrowRight","_ref2","KeyboardArrowLeft","_ref3","_ref4","TablePaginationActions","_props$onChangePage","onChangePage","_props$onPageChange","useTheme","event","Math","ceil","defaultLabelDisplayedRows","from","to","defaultRowsPerPageOptions","colSpan","_props$ActionsCompone","ActionsComponent","_props$backIconButton","backIconButtonText","colSpanProp","TableCell","_props$labelDisplayed","labelDisplayedRows","_props$labelRowsPerPa","labelRowsPerPage","_props$nextIconButton","nextIconButtonText","onChangeRowsPerPageProp","onChangeRowsPerPage","onRowsPerPageChangeProp","_props$rowsPerPageOpt","_props$SelectProps","SelectProps","selectId","useId","labelId","MenuItemComponent","native","MenuItem","spacer","Typography","caption","Select","select","icon","selectIcon","InputBase","rowsPerPageOption","menuItem","min","actions","palette","primary","fontSize","typography","pxToRem","overflow","flex","flexShrink","marginRight","textAlign","textAlignLast","formContainer","md","gap","ADD_OWNER_NAME_INPUT_TEST_ID","ADD_OWNER_ADDRESS_INPUT_TEST_ID","ADD_OWNER_NEXT_BTN_TEST_ID","formMutators","setOwnerAddress","args","utils","changeValue","setOwnerName","OwnerForm","onSubmit","initialValues","addressBookMap","useSelector","currentNetworkAddressBookAsMap","currentSafe","safeAddress","owners","ownerDoesntExist","uniqueAddress","ownerAddressIsNotSafeAddress","addressIsNotCurrentSafe","ModalHeader","subTitle","GnoForm","ownerName","ownerAddress","values","mutators","scannedAddress","startsWith","replace","xs","validAddressBookName","center","Footer","Buttons","cancelButtonProps","confirmButtonProps","info","flexDirection","details","borderRight","border","ownersTitle","owner","textOverflow","selectedOwner","gasCostsContainer","ReviewAddOwner","onClickBack","setData","currentSafeWithNames","safeName","safeVersion","currentVersion","manualSafeTxGas","setManualSafeTxGas","manualGasPrice","setManualGasPrice","manualGasLimit","setManualGasLimit","useEstimateTransactionGas","txData","txRecipient","safeTxGas","gasLimit","gasEstimation","gasCostFormatted","gasPriceFormatted","txEstimationExecutionStatus","isExecution","isOffChainSignature","isCreation","useEstimationStatus","buttonStatus","isCurrent","getGnosisSafeInstanceAt","methods","addOwnerWithThreshold","threshold","encodeABI","calculateAddOwnerData","EditableTxParameters","ethGasLimit","ethGasPrice","closeEditModalCallback","txParameters","oldGasPrice","newGasPrice","oldSafeTxGas","newSafeTxGas","toggleEditMode","weight","hash","showCopyBtn","showAvatar","explorerUrl","getExplorerInfo","TxParametersDetail","onEdit","compact","isTransactionCreation","isTransactionExecution","status","EstimationStatus","LOADING","headingText","ownersText","inputRow","errorText","bottom","ThresholdForm","numOptions","toString","SelectField","Array","x","mustBeInteger","minValue","maxValue","sendAddOwner","dispatch","gnosisSafe","createTransaction","valueInWei","txNonce","safeNonce","ethParameters","notifiedTransaction","TX_NOTIFICATION_TYPES","SETTINGS_CHANGE_TX","addressBookAddOrUpdate","makeAddressBookEntry","AddOwnerModal","activeScreen","setActiveScreen","setValues","useDispatch","onAddOwner","paperClassName","newValues","stateValues","manage","container","RENAME_OWNER_INPUT_TEST_ID","SAVE_OWNER_CHANGES_BTN_TEST_ID","EditOwnerModal","enqueueSnackbar","NOTIFICATIONS","OWNER_NAME_CHANGE_EXECUTED_MSG","pristine","initialValue","justify","CheckOwner","ReviewRemoveOwnerModal","calculateRemoveOwnerData","getOwners","safeOwners","findIndex","sameAddress","prevAddress","SENTINEL_ADDRESS","removeOwner","safeOwner","withoutBorder","ownersCount","defaultThreshold","sendRemoveOwner","ownerAddressToRemove","toLowerCase","RemoveOwnerModal","cpValues","REPLACE_OWNER_NAME_INPUT_TEST_ID","REPLACE_OWNER_ADDRESS_INPUT_TEST_ID","REPLACE_OWNER_NEXT_BTN_TEST_ID","selectedOwnerRemoved","selectedOwnerAdded","ReviewReplaceOwnerModal","newOwner","calculateReplaceOwnerData","swapOwner","sendReplaceOwner","ReplaceOwnerModal","setNewOwner","extractSafeAddress","currentSafeCurrentVersion","onReplaceOwner","checksumAddr","OWNERS_TABLE_NAME_ID","OWNERS_TABLE_ADDRESS_ID","paddingBottom","annotation","hide","visibility","noBorderBottom","borderBottom","editOwnerIcon","replaceOwnerIcon","controlsRow","borderRadius","removeOwnerIcon","RENAME_OWNER_BTN_TEST_ID","REMOVE_OWNER_BTN_TEST_ID","ADD_OWNER_BTN_TEST_ID","REPLACE_OWNER_BTN_TEST_ID","OWNERS_ROW_TEST_ID","ManageOwners","granted","trackEvent","useAnalytics","setSelectedOwner","showAddOwner","showRemoveOwner","showReplaceOwner","showEditOwner","modalsStatus","setModalStatus","onShow","action","row","prevState","onHide","Boolean","SETTINGS_EVENTS","OWNERS","nameColumn","custom","addressColumn","actionsColumn","generateColumns","autoColumns","c","ownerData","getOwnerData","TableContainer","TableRow","cn","ButtonHelper","dataTestId","tooltip","end"],"mappings":"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","file":"static/js/44.8f3a7b9f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/qrcode.fec1b6d8.svg\";","import { background, lg, secondaryText, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  heading: {\n    padding: lg,\n    justifyContent: 'space-between',\n    maxHeight: '75px',\n    boxSizing: 'border-box',\n  },\n  loaderContainer: {\n    width: '100%',\n    height: '100%',\n  },\n  close: {\n    height: '25px',\n    width: '25px',\n    color: secondaryText,\n  },\n  detailsContainer: {\n    backgroundColor: background,\n    maxHeight: '450px',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n  },\n  button: {\n    '&:last-child': {\n      marginLeft: sm,\n    },\n  },\n})\n","import IconButton from '@material-ui/core/IconButton'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Close from '@material-ui/icons/Close'\nimport * as React from 'react'\nimport QrReader from 'react-qr-reader'\n\nimport { styles } from './style'\n\nimport Modal from 'src/components/Modal'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { useEffect, useState } from 'react'\n\nconst useStyles = makeStyles(styles)\n\ntype Props = {\n  isOpen: boolean\n  onClose: () => void\n  onScan: (value: string) => void\n}\n\nexport const ScanQRModal = ({ isOpen, onClose, onScan }: Props): React.ReactElement => {\n  const classes = useStyles()\n  const [fileUploadModalOpen, setFileUploadModalOpen] = useState<boolean>(false)\n  const [error, setError] = useState<string | null>(null)\n  const [cameraBlocked, setCameraBlocked] = useState<boolean>(false)\n  const scannerRef: any = React.createRef()\n  const openImageDialog = React.useCallback(() => {\n    scannerRef.current.openImageDialog()\n  }, [scannerRef])\n\n  useEffect(() => {\n    if (!fileUploadModalOpen && cameraBlocked && !error) {\n      setFileUploadModalOpen(true)\n      openImageDialog()\n    }\n  }, [cameraBlocked, openImageDialog, fileUploadModalOpen, setFileUploadModalOpen, error])\n\n  const onFileScannedResolve = (error: Error | null, successData: string | null) => {\n    if (error) {\n      console.error('QR code error', error)\n\n      if (error.name === 'NotAllowedError' || error.name === 'PermissionDismissedError') {\n        setCameraBlocked(true)\n        setFileUploadModalOpen(false)\n      } else {\n        setError('The QR could not be read')\n      }\n      return\n    }\n\n    if (successData) {\n      onScan(successData)\n    } else if (cameraBlocked) {\n      setError('The QR could not be read')\n    }\n  }\n\n  return (\n    <Modal description=\"Receive Tokens Form\" handleClose={onClose} open={isOpen} title=\"Receive Tokens\">\n      <Row align=\"center\" className={classes.heading} grow>\n        <Paragraph noMargin size=\"xl\">\n          Scan QR\n        </Paragraph>\n        <IconButton disableRipple onClick={onClose}>\n          <Close className={classes.close} />\n        </IconButton>\n      </Row>\n      <Hairline />\n      <Col className={classes.detailsContainer} layout=\"column\" middle=\"xs\">\n        {error && (\n          <Block padding=\"md\" margin=\"md\">\n            {error}\n          </Block>\n        )}\n        <QrReader\n          legacyMode={cameraBlocked}\n          onError={(err: Error) => onFileScannedResolve(err, null)}\n          onScan={(data: string) => onFileScannedResolve(null, data)}\n          ref={scannerRef}\n          style={{ width: '400px', height: '400px' }}\n          facingMode=\"user\"\n        />\n      </Col>\n      <Hairline />\n      <Row align=\"center\" className={classes.buttonRow}>\n        <Button className={classes.button} color=\"secondary\" minWidth={154} onClick={onClose}>\n          Close\n        </Button>\n        <Button\n          className={classes.button}\n          color=\"primary\"\n          minWidth={154}\n          onClick={() => {\n            setCameraBlocked(true)\n            setError(null)\n            setFileUploadModalOpen(false)\n          }}\n          variant=\"contained\"\n        >\n          Upload an image\n        </Button>\n      </Row>\n    </Modal>\n  )\n}\n","import { makeStyles } from '@material-ui/core/styles'\nimport { ReactElement, useState } from 'react'\n\nimport QRIcon from 'src/assets/icons/qrcode.svg'\nimport { ScanQRModal } from 'src/components/ScanQRModal'\nimport Img from 'src/components/layout/Img'\n\nconst useStyles = makeStyles({\n  qrCodeBtn: {\n    cursor: 'pointer',\n  },\n})\n\ntype Props = {\n  handleScan: (dataResult: string, closeQrModal: () => void) => void\n  testId?: string\n}\n\nexport const ScanQRWrapper = ({ handleScan, testId }: Props): ReactElement => {\n  const classes = useStyles()\n  const [qrModalOpen, setQrModalOpen] = useState(false)\n\n  const openQrModal = () => {\n    setQrModalOpen(true)\n  }\n\n  const closeQrModal = () => {\n    setQrModalOpen(false)\n  }\n\n  const onScanFinished = (value: string) => {\n    handleScan(value, closeQrModal)\n  }\n\n  return (\n    <>\n      <Img\n        alt=\"Scan QR\"\n        className={classes.qrCodeBtn}\n        height={20}\n        onClick={() => openQrModal()}\n        role=\"button\"\n        src={QRIcon}\n        testId={testId || 'qr-icon'}\n      />\n      {qrModalOpen && <ScanQRModal isOpen={qrModalOpen} onClose={closeQrModal} onScan={onScanFinished} />}\n    </>\n  )\n}\n","import FormControl from '@material-ui/core/FormControl'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport Select from '@material-ui/core/Select'\n\nconst style = {\n  minWidth: '100%',\n}\n\nconst SelectInput = ({\n  classes,\n  disableError,\n  formControlProps,\n  input: { name, onChange, value, ...restInput },\n  label,\n  meta,\n  renderValue,\n  ...rest\n}) => {\n  const showError = ((meta.submitError && !meta.dirtySinceLastSubmit) || meta.error) && meta.touched && !disableError\n  const inputProps = {\n    ...restInput,\n    name,\n  }\n\n  return (\n    <FormControl {...formControlProps} error={showError} style={style}>\n      <InputLabel htmlFor={name}>{label}</InputLabel>\n      <Select\n        classes={classes}\n        inputProps={inputProps}\n        onChange={onChange}\n        renderValue={renderValue}\n        value={value}\n        {...rest}\n      />\n      {showError && <FormHelperText>{meta.error || meta.submitError}</FormHelperText>}\n    </FormControl>\n  )\n}\n\nexport default SelectInput\n","import classNames from 'classnames/bind'\nimport * as React from 'react'\n\nimport styles from './index.module.scss'\n\nimport { capitalize } from 'src/utils/css'\n\nconst cx = classNames.bind(styles)\n\nconst Heading = (props) => {\n  const { align, children, className = '', color, margin, tag, testId, truncate, ...rest } = props\n\n  const classes = cx(className, 'heading', align, tag, margin ? capitalize(margin, 'margin') : undefined, color, {\n    truncate,\n  })\n\n  return React.createElement(tag, { ...rest, className: classes, 'data-testid': testId || '' }, children)\n}\n\nexport default Heading\n","import TableCell from '@material-ui/core/TableCell'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableSortLabel from '@material-ui/core/TableSortLabel'\nimport * as React from 'react'\n\ninterface CellWidth {\n  maxWidth: string\n}\n\nexport const cellWidth = (width?: string | number): CellWidth | undefined => {\n  if (!width) {\n    return undefined\n  }\n\n  return {\n    maxWidth: `${width}px`,\n  }\n}\n\nclass GnoTableHead extends React.PureComponent<any> {\n  changeSort = (property, orderAttr) => () => {\n    const { onSort } = this.props\n\n    onSort(property, orderAttr)\n  }\n\n  render() {\n    const { columns, order, orderBy } = this.props\n\n    return (\n      <TableHead>\n        <TableRow>\n          {columns.map((column) => (\n            <TableCell\n              align={column.align}\n              key={column.id}\n              padding={column.disablePadding ? 'none' : 'normal'}\n              sortDirection={orderBy === column.id ? order : false}\n            >\n              {column.static ? (\n                <div style={column.style}>{column.label}</div>\n              ) : (\n                <TableSortLabel\n                  active={orderBy === column.id}\n                  direction={order}\n                  onClick={this.changeSort(column.id, column.order)}\n                  style={column.style}\n                >\n                  {column.label}\n                </TableSortLabel>\n              )}\n            </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n    )\n  }\n}\n\nexport default GnoTableHead\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"heading\":\"Heading_heading__3Wz9P\",\"h1\":\"Heading_h1__MXfCA\",\"h2\":\"Heading_h2__3X6Ts\",\"h3\":\"Heading_h3__1k2fD\",\"h4\":\"Heading_h4__1YCmR\",\"center\":\"Heading_center__28MHY\",\"right\":\"Heading_right__1fQM1\",\"truncate\":\"Heading_truncate__2Lq93\",\"marginSm\":\"Heading_marginSm__13YwX\",\"marginMd\":\"Heading_marginMd__2AnZN\",\"marginLg\":\"Heading_marginLg__2ZfEq\",\"marginXl\":\"Heading_marginXl__3RHt7\",\"soft\":\"Heading_soft__2Zu43\",\"medium\":\"Heading_medium__2X8Z-\",\"dark\":\"Heading_dark__Ds2QB\",\"fancy\":\"Heading_fancy__1Wx6l\",\"warning\":\"Heading_warning__2lrZC\",\"primary\":\"Heading_primary__2hOk2\",\"secondary\":\"Heading_secondary__37lKs\",\"disabled\":\"Heading_disabled__30DjG\",\"error\":\"Heading_error__t5ujr\",\"white\":\"Heading_white__2gkIK\"};","import { createElement, Component } from 'react';\nimport { Field } from 'react-final-form';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar ExternallyChangedState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ExternallyChangedState, _React$Component);\n\n  function ExternallyChangedState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: props.input.value,\n      externallyChanged: false\n    };\n    return _this;\n  }\n\n  var _proto = ExternallyChangedState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        value = _this$props.input.value,\n        active = _this$props.meta.active;\n    var previous = this.state.previous;\n\n    if (value !== previous) {\n      this.setState({\n        previous: value,\n        externallyChanged: !active\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    return this.props.children(this.state.externallyChanged);\n  };\n\n  return ExternallyChangedState;\n}(Component);\n\nvar ExternallyChanged = function ExternallyChanged(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      active: true,\n      value: true\n    },\n    allowNull: true,\n    render: function render(props) {\n      return createElement(ExternallyChangedState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nvar OnBlurState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(OnBlurState, _React$Component);\n\n  function OnBlurState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: !!props.meta.active\n    };\n    return _this;\n  }\n\n  var _proto = OnBlurState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        active = _this$props.meta.active;\n    var previous = this.state.previous;\n\n    if (previous && !active) {\n      children();\n    }\n\n    if (previous !== active) {\n      this.setState({\n        previous: active\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return OnBlurState;\n}(Component);\n\nvar OnBlur = function OnBlur(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      active: true\n    },\n    render: function render(props) {\n      return createElement(OnBlurState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nvar OnChangeState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(OnChangeState, _React$Component);\n\n  function OnChangeState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: props.input.value\n    };\n    return _this;\n  }\n\n  var _proto = OnChangeState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        value = _this$props.input.value;\n    var previous = this.state.previous;\n\n    if (value !== previous) {\n      this.setState({\n        previous: value\n      });\n      children(value, previous);\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return OnChangeState;\n}(Component);\n\nvar OnChange = function OnChange(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      value: true\n    },\n    allowNull: true,\n    render: function render(props) {\n      return createElement(OnChangeState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nvar OnFocusState =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(OnFocusState, _React$Component);\n\n  function OnFocusState(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.state = {\n      previous: !!props.meta.active\n    };\n    return _this;\n  }\n\n  var _proto = OnFocusState.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        active = _this$props.meta.active;\n    var previous = this.state.previous;\n\n    if (active && !previous) {\n      this.setState({\n        previous: active\n      });\n      children();\n    } else if (!active && previous) {\n      this.setState({\n        previous: active\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    return null;\n  };\n\n  return OnFocusState;\n}(Component);\n\nvar OnFocus = function OnFocus(_ref) {\n  var name = _ref.name,\n      children = _ref.children;\n  return createElement(Field, {\n    name: name,\n    subscription: {\n      active: true\n    },\n    render: function render(props) {\n      return createElement(OnFocusState, _extends({}, props, {\n        children: children\n      }));\n    }\n  });\n};\n\nexport { ExternallyChanged, OnBlur, OnChange, OnFocus };\n","import { List } from 'immutable'\n\nexport const FIXED = 'fixed'\n\nexport const buildOrderFieldFrom = (attr: string): string => `${attr}Order`\n\nconst desc = (\n  a: string,\n  b: string,\n  orderBy: string,\n  orderProp: boolean,\n  format: (value: string | number) => string | number,\n): number => {\n  const order = orderProp ? buildOrderFieldFrom(orderBy) : orderBy\n\n  if (format(b[order]) < format(a[order])) {\n    return -1\n  }\n  if (format(b[order]) > format(a[order])) {\n    return 1\n  }\n\n  return 0\n}\n\n// eslint-disable-next-line\nexport const stableSort = (dataArray, cmp, fixed) => {\n  const fixedElems = fixed ? dataArray.filter((elem) => elem.fixed) : List([])\n  const data = fixed ? dataArray.filter((elem) => !elem[FIXED]) : dataArray\n  let stabilizedThis = data.map((el, index) => [el, index])\n\n  stabilizedThis = stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0])\n\n    if (order !== 0) {\n      return order\n    }\n\n    return a[1] - b[1]\n  })\n\n  const sortedElems = stabilizedThis.map((el) => el[0])\n\n  return fixedElems.concat(sortedElems)\n}\n\nexport const getSorting = (\n  order: 'desc' | 'asc',\n  orderBy: string,\n  orderProp: boolean,\n  format: (value: string | number) => string | number = (value) => value,\n): ((a: string, b: string) => number) =>\n  order === 'desc'\n    ? (a, b) => desc(a, b, orderBy, orderProp, format)\n    : (a, b) => -desc(a, b, orderBy, orderProp, format)\n","import { Loader } from '@gnosis.pm/safe-react-components'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TablePagination from '@material-ui/core/TablePagination'\nimport { withStyles } from '@material-ui/core/styles'\nimport * as React from 'react'\n\nimport TableHead from 'src/components/Table/TableHead'\nimport { getSorting, stableSort } from 'src/components/Table/sorting'\nimport Row from 'src/components/layout/Row'\nimport { sm, xxl } from 'src/theme/variables'\n\nconst styles = {\n  root: {\n    backgroundColor: 'white',\n    borderTopRightRadius: sm,\n    borderTopLeftRadius: sm,\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n  },\n  selectRoot: {\n    lineHeight: xxl,\n    backgroundColor: 'white',\n  },\n  white: {\n    backgroundColor: 'white',\n  },\n  paginationRoot: {\n    backgroundColor: 'white',\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n    marginBottom: '90px',\n    borderBottomRightRadius: sm,\n    borderBottomLeftRadius: sm,\n  },\n  loader: {\n    boxShadow: '1px 2px 10px 0 rgba(212, 212, 211, 0.59)',\n  },\n}\n\nconst FIXED_EMPTY_HEIGHT = 255\n\nconst backProps = {\n  'aria-label': 'Previous Page',\n}\n\nconst nextProps = {\n  'aria-label': 'Next Page',\n}\n\nclass GnoTable extends React.Component<any, any> {\n  static defaultProps = {\n    defaultOrder: 'asc',\n    disablePagination: false,\n    defaultRowsPerPage: 5,\n  }\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      page: 0,\n      order: undefined,\n      orderBy: undefined,\n      fixed: undefined,\n      orderProp: false,\n      rowsPerPage: undefined,\n    }\n  }\n\n  componentDidMount() {\n    const { columns, defaultOrderBy } = this.props\n\n    if (defaultOrderBy && columns) {\n      const defaultOrderCol = columns.find(({ id }) => id === defaultOrderBy)\n\n      if (defaultOrderCol.order) {\n        this.setState({\n          orderProp: true,\n        })\n      }\n    }\n  }\n\n  onSort = (newOrderBy, orderProp) => {\n    const { order, orderBy } = this.state\n    const { defaultOrder } = this.props\n    let newOrder = 'desc'\n\n    // if table was previously sorted by the user\n    if (order && orderBy === newOrderBy && order === 'desc') {\n      newOrder = 'asc'\n    } else if (!order && defaultOrder === 'desc') {\n      // if it was not sorted and defaultOrder is used\n      newOrder = 'asc'\n    }\n\n    this.setState(() => ({\n      order: newOrder,\n      orderBy: newOrderBy,\n      orderProp,\n      fixed: false,\n    }))\n  }\n\n  getEmptyStyle = () => ({\n    height: `calc(100vh - ${FIXED_EMPTY_HEIGHT}px)`,\n    borderTopRightRadius: sm,\n    borderTopLeftRadius: sm,\n    backgroundColor: 'white',\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  })\n\n  handleChangePage = (e, page) => {\n    this.setState({ page })\n  }\n\n  handleChangeRowsPerPage = (e) => {\n    const rowsPerPage = Number(e.target.value)\n    this.setState({ rowsPerPage })\n  }\n\n  render() {\n    const {\n      children,\n      classes,\n      columns,\n      data,\n      defaultFixed,\n      defaultOrder,\n      defaultOrderBy,\n      defaultRowsPerPage,\n      disableLoadingOnEmptyTable,\n      disablePagination,\n      label,\n      noBorder,\n      size,\n    }: any = this.props\n    const { fixed, order, orderBy, orderProp, page, rowsPerPage } = this.state\n    const orderByParam = orderBy || defaultOrderBy\n    const orderParam = order || defaultOrder\n    const displayRows = rowsPerPage || defaultRowsPerPage\n    const fixedParam = typeof fixed !== 'undefined' ? fixed : !!defaultFixed\n    const paginationClasses = {\n      selectRoot: classes.selectRoot,\n      root: !noBorder && classes.paginationRoot,\n      input: classes.white,\n    }\n    const columnSort = columns.find((column) => column.id === orderByParam)\n    let sortedData = stableSort(\n      data,\n      getSorting(orderParam, orderByParam, orderProp, columnSort?.formatTypeSort),\n      fixedParam,\n    )\n\n    if (!disablePagination) {\n      sortedData = sortedData.slice(page * displayRows, page * displayRows + displayRows)\n    }\n\n    const isEmpty = size === 0 && !disableLoadingOnEmptyTable\n\n    return (\n      <>\n        {!isEmpty && (\n          <Table aria-labelledby={label} className={noBorder ? '' : classes.root}>\n            <TableHead columns={columns} onSort={this.onSort} order={order} orderBy={orderByParam} />\n            <TableBody>{children(sortedData)}</TableBody>\n          </Table>\n        )}\n        {isEmpty && (\n          <Row className={classes.loader} style={this.getEmptyStyle()}>\n            <Loader size=\"sm\" />\n          </Row>\n        )}\n        {!disablePagination && (\n          <TablePagination\n            backIconButtonProps={backProps}\n            classes={paginationClasses}\n            component=\"div\"\n            count={size}\n            nextIconButtonProps={nextProps}\n            onPageChange={this.handleChangePage}\n            onRowsPerPageChange={this.handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={displayRows}\n            rowsPerPageOptions={[5, 10, 25, 50, 100]}\n          />\n        )}\n      </>\n    )\n  }\n}\n\nexport default withStyles(styles as any)(GnoTable)\n","import { useEffect, useState } from 'react'\nimport { Field } from 'react-final-form'\nimport { OnChange } from 'react-final-form-listeners'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport CircularProgress from '@material-ui/core/CircularProgress'\n\nimport TextField from 'src/components/forms/TextField'\nimport { Validator, composeValidators, mustBeEthereumAddress, required } from 'src/components/forms/validator'\nimport { trimSpaces } from 'src/utils/strings'\nimport { getAddressFromDomain } from 'src/logic/wallets/getWeb3'\nimport { isValidEnsName, isValidCryptoDomainName } from 'src/logic/wallets/ethAddresses'\nimport { checksumAddress } from 'src/utils/checksumAddress'\nimport { Errors, logError } from 'src/logic/exceptions/CodedException'\nimport { isValidAddress } from 'src/utils/isValidAddress'\n\n// an idea for second field was taken from here\n// https://github.com/final-form/react-final-form-listeners/blob/master/src/OnBlur.js\n\nexport interface AddressInputProps {\n  fieldMutator: (address: string) => void\n  name?: string\n  text?: string\n  placeholder?: string\n  inputAdornment?: { endAdornment: React.ReactElement } | undefined | false\n  testId: string\n  validators?: Validator[]\n  defaultValue?: string\n  disabled?: boolean\n  spellCheck?: boolean\n  className?: string\n}\n\nconst AddressInput = ({\n  className = '',\n  name = 'recipientAddress',\n  text = 'Recipient*',\n  placeholder = 'Recipient*',\n  fieldMutator,\n  testId,\n  inputAdornment,\n  validators = [],\n  defaultValue,\n  disabled,\n}: AddressInputProps): React.ReactElement => {\n  const [currentInput, setCurrentInput] = useState<string>('')\n  const [resolutions, setResolutions] = useState<Record<string, string | undefined>>({})\n  const resolvedAddress = resolutions[currentInput]\n  const isResolving = resolvedAddress === ''\n\n  useEffect(() => {\n    if (resolvedAddress) {\n      fieldMutator(resolvedAddress)\n    }\n  }, [resolvedAddress, fieldMutator])\n\n  const adornment = isResolving\n    ? {\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <CircularProgress size=\"16px\" />\n          </InputAdornment>\n        ),\n      }\n    : inputAdornment\n\n  return (\n    <>\n      <Field\n        className={className}\n        component={TextField as any}\n        defaultValue={defaultValue}\n        disabled={disabled}\n        inputAdornment={adornment}\n        name={name}\n        placeholder={placeholder}\n        testId={testId}\n        text={text}\n        type=\"text\"\n        spellCheck={false}\n        validate={composeValidators(required, mustBeEthereumAddress, ...validators)}\n      />\n      <OnChange name={name}>\n        {async (value: string) => {\n          const address = trimSpaces(value)\n          setCurrentInput(address)\n\n          // A crypto domain name\n          if (isValidEnsName(address) || isValidCryptoDomainName(address)) {\n            setResolutions((prev) => ({ ...prev, [address]: '' }))\n            try {\n              const resolverAddr = await getAddressFromDomain(address)\n              const formattedAddress = checksumAddress(resolverAddr)\n              setResolutions((prev) => ({ ...prev, [address]: formattedAddress }))\n            } catch (err) {\n              setResolutions((prev) => ({ ...prev, [address]: undefined }))\n              logError(Errors._101, err.message)\n            }\n          } else {\n            // A regular address hash\n            let checkedAddress = address\n            // Automatically checksum valid (either already checksummed, or lowercase addresses)\n            if (isValidAddress(address)) {\n              try {\n                checkedAddress = checksumAddress(address)\n              } catch (err) {\n                // ignore\n              }\n            }\n            fieldMutator(checkedAddress)\n          }\n        }}\n      </OnChange>\n    </>\n  )\n}\n\nexport default AddressInput\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `disableGutters={false}`. */\n    gutters: _defineProperty({\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2)\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `variant=\"regular\"`. */\n    regular: theme.mixins.toolbar,\n\n    /* Styles applied to the root element if `variant=\"dense\"`. */\n    dense: {\n      minHeight: 48\n    }\n  };\n};\nvar Toolbar = /*#__PURE__*/React.forwardRef(function Toolbar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'regular' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes[variant], className, !disableGutters && classes.gutters),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Toolbar.propTypes = {\n  /**\n   * Toolbar children, usually a mixture of `IconButton`, `Button` and `Typography`.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, disables gutter padding.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['regular', 'dense'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToolbar'\n})(Toolbar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport useTheme from '../styles/useTheme';\nimport IconButton from '../IconButton';\n/**\n * @ignore - internal component.\n */\n\nvar _ref = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar _ref2 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref3 = /*#__PURE__*/React.createElement(KeyboardArrowLeft, null);\n\nvar _ref4 = /*#__PURE__*/React.createElement(KeyboardArrowRight, null);\n\nvar TablePaginationActions = /*#__PURE__*/React.forwardRef(function TablePaginationActions(props, ref) {\n  var backIconButtonProps = props.backIconButtonProps,\n      count = props.count,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$onChangePage = props.onChangePage,\n      onChangePage = _props$onChangePage === void 0 ? function () {} : _props$onChangePage,\n      _props$onPageChange = props.onPageChange,\n      onPageChange = _props$onPageChange === void 0 ? function () {} : _props$onPageChange,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      other = _objectWithoutProperties(props, [\"backIconButtonProps\", \"count\", \"nextIconButtonProps\", \"onChangePage\", \"onPageChange\", \"page\", \"rowsPerPage\"]);\n\n  var theme = useTheme();\n\n  var handleBackButtonClick = function handleBackButtonClick(event) {\n    onChangePage(event, page - 1);\n    onPageChange(event, page - 1);\n  };\n\n  var handleNextButtonClick = function handleNextButtonClick(event) {\n    onChangePage(event, page + 1);\n    onPageChange(event, page + 1);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleBackButtonClick,\n    disabled: page === 0,\n    color: \"inherit\"\n  }, backIconButtonProps), theme.direction === 'rtl' ? _ref : _ref2), /*#__PURE__*/React.createElement(IconButton, _extends({\n    onClick: handleNextButtonClick,\n    disabled: count !== -1 ? page >= Math.ceil(count / rowsPerPage) - 1 : false,\n    color: \"inherit\"\n  }, nextIconButtonProps), theme.direction === 'rtl' ? _ref3 : _ref4));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePaginationActions.propTypes = {\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) element.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * The total number of rows.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onChangePage: PropTypes.func,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: PropTypes.number.isRequired,\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired\n} : void 0;\nexport default TablePaginationActions;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { chainPropTypes } from '@material-ui/utils';\nimport clsx from 'clsx';\nimport deprecatedPropType from '../utils/deprecatedPropType';\nimport withStyles from '../styles/withStyles';\nimport InputBase from '../InputBase';\nimport MenuItem from '../MenuItem';\nimport Select from '../Select';\nimport TableCell from '../TableCell';\nimport Toolbar from '../Toolbar';\nimport Typography from '../Typography';\nimport TablePaginationActions from './TablePaginationActions';\nimport useId from '../utils/unstable_useId';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      color: theme.palette.text.primary,\n      fontSize: theme.typography.pxToRem(14),\n      overflow: 'auto',\n      // Increase the specificity to override TableCell.\n      '&:last-child': {\n        padding: 0\n      }\n    },\n\n    /* Styles applied to the Toolbar component. */\n    toolbar: {\n      minHeight: 52,\n      paddingRight: 2\n    },\n\n    /* Styles applied to the spacer element. */\n    spacer: {\n      flex: '1 1 100%'\n    },\n\n    /* Styles applied to the caption Typography components if `variant=\"caption\"`. */\n    caption: {\n      flexShrink: 0\n    },\n    // TODO v5: `.selectRoot` should be merged with `.input`\n\n    /* Styles applied to the Select component root element. */\n    selectRoot: {\n      marginRight: 32,\n      marginLeft: 8\n    },\n\n    /* Styles applied to the Select component `select` class. */\n    select: {\n      paddingLeft: 8,\n      paddingRight: 24,\n      textAlign: 'right',\n      textAlignLast: 'right' // Align <select> on Chrome.\n\n    },\n    // TODO v5: remove\n\n    /* Styles applied to the Select component `icon` class. */\n    selectIcon: {},\n\n    /* Styles applied to the `InputBase` component. */\n    input: {\n      color: 'inherit',\n      fontSize: 'inherit',\n      flexShrink: 0\n    },\n\n    /* Styles applied to the MenuItem component. */\n    menuItem: {},\n\n    /* Styles applied to the internal `TablePaginationActions` component. */\n    actions: {\n      flexShrink: 0,\n      marginLeft: 20\n    }\n  };\n};\n\nvar defaultLabelDisplayedRows = function defaultLabelDisplayedRows(_ref) {\n  var from = _ref.from,\n      to = _ref.to,\n      count = _ref.count;\n  return \"\".concat(from, \"-\").concat(to, \" of \").concat(count !== -1 ? count : \"more than \".concat(to));\n};\n\nvar defaultRowsPerPageOptions = [10, 25, 50, 100];\n/**\n * A `TableCell` based component for placing inside `TableFooter` for pagination.\n */\n\nvar TablePagination = /*#__PURE__*/React.forwardRef(function TablePagination(props, ref) {\n  var _props$ActionsCompone = props.ActionsComponent,\n      ActionsComponent = _props$ActionsCompone === void 0 ? TablePaginationActions : _props$ActionsCompone,\n      backIconButtonProps = props.backIconButtonProps,\n      _props$backIconButton = props.backIconButtonText,\n      backIconButtonText = _props$backIconButton === void 0 ? 'Previous page' : _props$backIconButton,\n      classes = props.classes,\n      className = props.className,\n      colSpanProp = props.colSpan,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? TableCell : _props$component,\n      count = props.count,\n      _props$labelDisplayed = props.labelDisplayedRows,\n      labelDisplayedRows = _props$labelDisplayed === void 0 ? defaultLabelDisplayedRows : _props$labelDisplayed,\n      _props$labelRowsPerPa = props.labelRowsPerPage,\n      labelRowsPerPage = _props$labelRowsPerPa === void 0 ? 'Rows per page:' : _props$labelRowsPerPa,\n      nextIconButtonProps = props.nextIconButtonProps,\n      _props$nextIconButton = props.nextIconButtonText,\n      nextIconButtonText = _props$nextIconButton === void 0 ? 'Next page' : _props$nextIconButton,\n      onChangePage = props.onChangePage,\n      onPageChange = props.onPageChange,\n      onChangeRowsPerPageProp = props.onChangeRowsPerPage,\n      onRowsPerPageChangeProp = props.onRowsPerPageChange,\n      page = props.page,\n      rowsPerPage = props.rowsPerPage,\n      _props$rowsPerPageOpt = props.rowsPerPageOptions,\n      rowsPerPageOptions = _props$rowsPerPageOpt === void 0 ? defaultRowsPerPageOptions : _props$rowsPerPageOpt,\n      _props$SelectProps = props.SelectProps,\n      SelectProps = _props$SelectProps === void 0 ? {} : _props$SelectProps,\n      other = _objectWithoutProperties(props, [\"ActionsComponent\", \"backIconButtonProps\", \"backIconButtonText\", \"classes\", \"className\", \"colSpan\", \"component\", \"count\", \"labelDisplayedRows\", \"labelRowsPerPage\", \"nextIconButtonProps\", \"nextIconButtonText\", \"onChangePage\", \"onPageChange\", \"onChangeRowsPerPage\", \"onRowsPerPageChange\", \"page\", \"rowsPerPage\", \"rowsPerPageOptions\", \"SelectProps\"]);\n\n  var onChangeRowsPerPage = onChangeRowsPerPageProp || onRowsPerPageChangeProp;\n  var colSpan;\n\n  if (Component === TableCell || Component === 'td') {\n    colSpan = colSpanProp || 1000; // col-span over everything\n  }\n\n  var selectId = useId();\n  var labelId = useId();\n  var MenuItemComponent = SelectProps.native ? 'option' : MenuItem;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className),\n    colSpan: colSpan,\n    ref: ref\n  }, other), /*#__PURE__*/React.createElement(Toolbar, {\n    className: classes.toolbar\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.spacer\n  }), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption,\n    id: labelId\n  }, labelRowsPerPage), rowsPerPageOptions.length > 1 && /*#__PURE__*/React.createElement(Select, _extends({\n    classes: {\n      select: classes.select,\n      icon: classes.selectIcon\n    },\n    input: /*#__PURE__*/React.createElement(InputBase, {\n      className: clsx(classes.input, classes.selectRoot)\n    }),\n    value: rowsPerPage,\n    onChange: onChangeRowsPerPage,\n    id: selectId,\n    labelId: labelId\n  }, SelectProps), rowsPerPageOptions.map(function (rowsPerPageOption) {\n    return /*#__PURE__*/React.createElement(MenuItemComponent, {\n      className: classes.menuItem,\n      key: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption,\n      value: rowsPerPageOption.value ? rowsPerPageOption.value : rowsPerPageOption\n    }, rowsPerPageOption.label ? rowsPerPageOption.label : rowsPerPageOption);\n  })), /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"body2\",\n    className: classes.caption\n  }, labelDisplayedRows({\n    from: count === 0 ? 0 : page * rowsPerPage + 1,\n    to: count !== -1 ? Math.min(count, (page + 1) * rowsPerPage) : (page + 1) * rowsPerPage,\n    count: count === -1 ? -1 : count,\n    page: page\n  })), /*#__PURE__*/React.createElement(ActionsComponent, {\n    className: classes.actions,\n    backIconButtonProps: _extends({\n      title: backIconButtonText,\n      'aria-label': backIconButtonText\n    }, backIconButtonProps),\n    count: count,\n    nextIconButtonProps: _extends({\n      title: nextIconButtonText,\n      'aria-label': nextIconButtonText\n    }, nextIconButtonProps),\n    onChangePage: onChangePage,\n    onPageChange: onPageChange,\n    page: page,\n    rowsPerPage: rowsPerPage\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? TablePagination.propTypes = {\n  /**\n   * The component used for displaying the actions.\n   * Either a string to use a HTML element or a component.\n   */\n  ActionsComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the back arrow [`IconButton`](/api/icon-button/) component.\n   */\n  backIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the back arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  backIconButtonText: PropTypes.string,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  colSpan: PropTypes.number,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * The total number of rows.\n   *\n   * To enable server side pagination for an unknown number of items, provide -1.\n   */\n  count: PropTypes.number.isRequired,\n\n  /**\n   * Customize the displayed rows label. Invoked with a `{ from, to, count, page }`\n   * object.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelDisplayedRows: PropTypes.func,\n\n  /**\n   * Customize the rows per page label.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  labelRowsPerPage: PropTypes.node,\n\n  /**\n   * Props applied to the next arrow [`IconButton`](/api/icon-button/) element.\n   */\n  nextIconButtonProps: PropTypes.object,\n\n  /**\n   * Text label for the next arrow icon button.\n   *\n   * For localization purposes, you can use the provided [translations](/guides/localization/).\n   */\n  nextIconButtonText: PropTypes.string,\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   * @deprecated Use the onPageChange prop instead.\n   */\n  onChangePage: deprecatedPropType(PropTypes.func, 'Use the `onPageChange` prop instead.'),\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @deprecated Use the onRowsPerPageChange prop instead.\n   */\n  onChangeRowsPerPage: deprecatedPropType(PropTypes.func, 'Use the `onRowsPerPageChange` prop instead.'),\n\n  /**\n   * Callback fired when the page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {number} page The page selected.\n   */\n  onPageChange: PropTypes.func.isRequired,\n\n  /**\n   * Callback fired when the number of rows per page is changed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onRowsPerPageChange: PropTypes.func,\n\n  /**\n   * The zero-based index of the current page.\n   */\n  page: chainPropTypes(PropTypes.number.isRequired, function (props) {\n    var count = props.count,\n        page = props.page,\n        rowsPerPage = props.rowsPerPage;\n\n    if (count === -1) {\n      return null;\n    }\n\n    var newLastPage = Math.max(0, Math.ceil(count / rowsPerPage) - 1);\n\n    if (page < 0 || page > newLastPage) {\n      return new Error('Material-UI: The page prop of a TablePagination is out of range ' + \"(0 to \".concat(newLastPage, \", but page is \").concat(page, \").\"));\n    }\n\n    return null;\n  }),\n\n  /**\n   * The number of rows per page.\n   */\n  rowsPerPage: PropTypes.number.isRequired,\n\n  /**\n   * Customizes the options of the rows per page select field. If less than two options are\n   * available, no select field will be displayed.\n   */\n  rowsPerPageOptions: PropTypes.array,\n\n  /**\n   * Props applied to the rows per page [`Select`](/api/select/) element.\n   */\n  SelectProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTablePagination'\n})(TablePagination);","import { lg, md } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  formContainer: {\n    padding: `${md} ${lg}`,\n    minHeight: '340px',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n    gap: '16px',\n  },\n})\n","import { makeStyles } from '@material-ui/core/styles'\nimport { Mutator } from 'final-form'\n\nimport { useSelector } from 'react-redux'\nimport { OnChange } from 'react-final-form-listeners'\n\nimport { styles } from './style'\n\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\nimport AddressInput from 'src/components/forms/AddressInput'\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport TextField from 'src/components/forms/TextField'\nimport {\n  addressIsNotCurrentSafe,\n  composeValidators,\n  required,\n  uniqueAddress,\n  validAddressBookName,\n} from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { currentNetworkAddressBookAsMap } from 'src/logic/addressBook/store/selectors'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { isValidAddress } from 'src/utils/isValidAddress'\n\nimport { OwnerValues } from '../..'\nimport { Modal } from 'src/components/Modal'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\n\nexport const ADD_OWNER_NAME_INPUT_TEST_ID = 'add-owner-name-input'\nexport const ADD_OWNER_ADDRESS_INPUT_TEST_ID = 'add-owner-address-testid'\nexport const ADD_OWNER_NEXT_BTN_TEST_ID = 'add-owner-next-btn'\n\nconst formMutators: Record<\n  string,\n  Mutator<{ setOwnerAddress: { address: string }; setOwnerName: { name: string } }>\n> = {\n  setOwnerAddress: (args, state, utils) => {\n    utils.changeValue(state, 'ownerAddress', () => args[0])\n  },\n  setOwnerName: (args, state, utils) => {\n    utils.changeValue(state, 'ownerName', () => args[0])\n  },\n}\n\nconst useStyles = makeStyles(styles)\n\ntype OwnerFormProps = {\n  onClose: () => void\n  onSubmit: (values) => void\n  initialValues?: OwnerValues\n}\n\nexport const OwnerForm = ({ onClose, onSubmit, initialValues }: OwnerFormProps): React.ReactElement => {\n  const classes = useStyles()\n  const handleSubmit = (values) => {\n    onSubmit(values)\n  }\n  const addressBookMap = useSelector(currentNetworkAddressBookAsMap)\n  const { address: safeAddress = '', owners = [] } = useSelector(currentSafe) ?? {}\n  const ownerDoesntExist = uniqueAddress(owners)\n  const ownerAddressIsNotSafeAddress = addressIsNotCurrentSafe(safeAddress)\n\n  return (\n    <>\n      <ModalHeader onClose={onClose} title=\"Add new owner\" subTitle=\"1 of 3\" />\n      <Hairline />\n      <GnoForm\n        formMutators={formMutators}\n        initialValues={{\n          ownerName: initialValues?.ownerName,\n          ownerAddress: initialValues?.ownerAddress,\n        }}\n        onSubmit={handleSubmit}\n      >\n        {(...args) => {\n          const mutators = args[3]\n\n          const handleScan = (value, closeQrModal) => {\n            let scannedAddress = value\n\n            if (scannedAddress.startsWith('ethereum:')) {\n              scannedAddress = scannedAddress.replace('ethereum:', '')\n            }\n            mutators.setOwnerAddress(scannedAddress)\n            closeQrModal()\n          }\n\n          return (\n            <>\n              <Block className={classes.formContainer}>\n                <Row margin=\"md\">\n                  <Paragraph>Add a new owner to the active Jupisky</Paragraph>\n                </Row>\n                <Row margin=\"md\">\n                  <Col xs={8}>\n                    <Field\n                      component={TextField}\n                      name=\"ownerName\"\n                      placeholder=\"Owner name*\"\n                      testId={ADD_OWNER_NAME_INPUT_TEST_ID}\n                      text=\"Owner name*\"\n                      type=\"text\"\n                      validate={composeValidators(required, validAddressBookName)}\n                    />\n                    <OnChange name=\"ownerAddress\">\n                      {async (address: string) => {\n                        if (isValidAddress(address)) {\n                          const ownerName = addressBookMap[address]?.name\n                          if (ownerName) {\n                            mutators.setOwnerName(ownerName)\n                          }\n                        }\n                      }}\n                    </OnChange>\n                  </Col>\n                </Row>\n                <Row margin=\"md\">\n                  <Col xs={8}>\n                    <AddressInput\n                      fieldMutator={mutators.setOwnerAddress}\n                      name=\"ownerAddress\"\n                      placeholder=\"Owner address*\"\n                      testId={ADD_OWNER_ADDRESS_INPUT_TEST_ID}\n                      text=\"Owner address*\"\n                      validators={[ownerDoesntExist, ownerAddressIsNotSafeAddress]}\n                    />\n                  </Col>\n                  <Col center=\"xs\" className={classes} middle=\"xs\" xs={1}>\n                    <ScanQRWrapper handleScan={handleScan} />\n                  </Col>\n                </Row>\n              </Block>\n              <Hairline />\n              <Row align=\"center\" className={classes.buttonRow}>\n                <Modal.Footer.Buttons\n                  cancelButtonProps={{ onClick: onClose, text: 'Cancel' }}\n                  confirmButtonProps={{\n                    type: 'submit',\n                    text: 'Next',\n                    testId: ADD_OWNER_NEXT_BTN_TEST_ID,\n                  }}\n                />\n              </Row>\n            </>\n          )\n        }}\n      </GnoForm>\n    </>\n  )\n}\n","import { background, border, lg, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core/styles'\n\nexport const styles = createStyles({\n  root: {\n    height: '372px',\n  },\n  info: {\n    backgroundColor: background,\n    padding: sm,\n    justifyContent: 'center',\n    textAlign: 'center',\n    flexDirection: 'column',\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n    gap: '16px',\n  },\n  details: {\n    padding: lg,\n    borderRight: `solid 2px ${border}`,\n    height: '100%',\n  },\n  owners: {\n    overflow: 'auto',\n    height: '100%',\n  },\n  ownersTitle: {\n    padding: lg,\n  },\n  owner: {\n    padding: sm,\n    alignItems: 'center',\n  },\n  name: {\n    textOverflow: 'ellipsis',\n    overflow: 'hidden',\n  },\n  selectedOwner: {\n    padding: sm,\n    alignItems: 'center',\n    backgroundColor: '#f7f5f5',\n  },\n  open: {\n    paddingLeft: sm,\n    width: 'auto',\n    '&:hover': {\n      cursor: 'pointer',\n    },\n  },\n  gasCostsContainer: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    textAlign: 'center',\n    width: '100%',\n    backgroundColor: background,\n  },\n})\n","import { makeStyles } from '@material-ui/core/styles'\nimport { ReactElement, useEffect, useState, Fragment } from 'react'\nimport { useSelector } from 'react-redux'\nimport { EthHashInfo } from '@gnosis.pm/safe-react-components'\n\nimport { getExplorerInfo } from 'src/config'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\nimport { currentSafeWithNames } from 'src/logic/safe/store/selectors'\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\nimport { Modal } from 'src/components/Modal'\nimport { TransactionFees } from 'src/components/TransactionsFees'\n\nimport { OwnerValues } from '../..'\nimport { styles } from './style'\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\n\nexport const ADD_OWNER_SUBMIT_BTN_TEST_ID = 'add-owner-submit-btn'\n\nconst useStyles = makeStyles(styles)\n\ntype ReviewAddOwnerProps = {\n  onClickBack: () => void\n  onClose: () => void\n  onSubmit: (txParameters: TxParameters) => void\n  values: OwnerValues\n}\n\nexport const ReviewAddOwner = ({ onClickBack, onClose, onSubmit, values }: ReviewAddOwnerProps): ReactElement => {\n  const classes = useStyles()\n  const [data, setData] = useState('')\n  const {\n    address: safeAddress,\n    name: safeName,\n    owners,\n    currentVersion: safeVersion,\n  } = useSelector(currentSafeWithNames)\n  const [manualSafeTxGas, setManualSafeTxGas] = useState('0')\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\n\n  const {\n    gasLimit,\n    gasEstimation,\n    gasCostFormatted,\n    gasPriceFormatted,\n    txEstimationExecutionStatus,\n    isExecution,\n    isOffChainSignature,\n    isCreation,\n  } = useEstimateTransactionGas({\n    txData: data,\n    txRecipient: safeAddress,\n    safeTxGas: manualSafeTxGas,\n    manualGasPrice,\n    manualGasLimit,\n  })\n\n  const [buttonStatus] = useEstimationStatus(txEstimationExecutionStatus)\n\n  useEffect(() => {\n    let isCurrent = true\n\n    const calculateAddOwnerData = () => {\n      try {\n        const safeInstance = getGnosisSafeInstanceAt(safeAddress, safeVersion)\n        const txData = safeInstance.methods.addOwnerWithThreshold(values.ownerAddress, values.threshold).encodeABI()\n\n        if (isCurrent) {\n          setData(txData)\n        }\n      } catch (error) {\n        console.error('Error calculating ERC721 transfer data:', error.message)\n      }\n    }\n    calculateAddOwnerData()\n\n    return () => {\n      isCurrent = false\n    }\n  }, [safeAddress, safeVersion, values.ownerAddress, values.threshold])\n\n  const closeEditModalCallback = (txParameters: TxParameters) => {\n    const oldGasPrice = gasPriceFormatted\n    const newGasPrice = txParameters.ethGasPrice\n    const oldSafeTxGas = gasEstimation\n    const newSafeTxGas = txParameters.safeTxGas\n\n    if (newGasPrice && oldGasPrice !== newGasPrice) {\n      setManualGasPrice(txParameters.ethGasPrice)\n    }\n\n    if (txParameters.ethGasLimit && gasLimit !== txParameters.ethGasLimit) {\n      setManualGasLimit(txParameters.ethGasLimit)\n    }\n\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\n      setManualSafeTxGas(newSafeTxGas)\n    }\n  }\n\n  return (\n    <EditableTxParameters\n      isOffChainSignature={isOffChainSignature}\n      isExecution={isExecution}\n      ethGasLimit={gasLimit}\n      ethGasPrice={gasPriceFormatted}\n      safeTxGas={gasEstimation}\n      closeEditModalCallback={closeEditModalCallback}\n    >\n      {(txParameters, toggleEditMode) => (\n        <>\n          <ModalHeader onClose={onClose} title=\"Add new owner\" subTitle=\"3 of 3\" />\n          <Hairline />\n          <Block>\n            <Row className={classes.root}>\n              <Col layout=\"column\" xs={4}>\n                <Block className={classes.details}>\n                  <Block margin=\"lg\">\n                    <Paragraph color=\"primary\" noMargin size=\"lg\">\n                      Details\n                    </Paragraph>\n                  </Block>\n                  <Block margin=\"lg\">\n                    <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                      Safe name\n                    </Paragraph>\n                    <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                      {safeName}\n                    </Paragraph>\n                  </Block>\n                  <Block margin=\"lg\">\n                    <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                      Any transaction requires the confirmation of:\n                    </Paragraph>\n                    <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                      {`${values.threshold} out of ${(owners?.length || 0) + 1} owner(s)`}\n                    </Paragraph>\n                  </Block>\n                </Block>\n              </Col>\n              <Col className={classes.owners} layout=\"column\" xs={8}>\n                <Row className={classes.ownersTitle}>\n                  <Paragraph color=\"primary\" noMargin size=\"lg\">\n                    {`${(owners?.length || 0) + 1} Safe owner(s)`}\n                  </Paragraph>\n                </Row>\n                <Hairline />\n                {owners?.map((owner) => (\n                  <Fragment key={owner.address}>\n                    <Row className={classes.owner}>\n                      <Col align=\"center\" xs={12}>\n                        <EthHashInfo\n                          hash={owner.address}\n                          name={owner.name}\n                          showCopyBtn\n                          showAvatar\n                          explorerUrl={getExplorerInfo(owner.address)}\n                        />\n                      </Col>\n                    </Row>\n                    <Hairline />\n                  </Fragment>\n                ))}\n                <Row align=\"center\" className={classes.info}>\n                  <Paragraph color=\"primary\" noMargin size=\"md\" weight=\"bolder\">\n                    ADDING NEW OWNER &darr;\n                  </Paragraph>\n                </Row>\n                <Hairline />\n                <Row className={classes.selectedOwner} data-testid=\"add-owner-review\">\n                  <Col align=\"center\" xs={12}>\n                    <EthHashInfo\n                      hash={values.ownerAddress}\n                      name={values.ownerName}\n                      showCopyBtn\n                      showAvatar\n                      explorerUrl={getExplorerInfo(values.ownerAddress)}\n                    />\n                  </Col>\n                </Row>\n                <Hairline />\n              </Col>\n            </Row>\n          </Block>\n          <Hairline />\n\n          {/* Tx Parameters */}\n          <TxParametersDetail\n            txParameters={txParameters}\n            onEdit={toggleEditMode}\n            compact={false}\n            isTransactionCreation={isCreation}\n            isTransactionExecution={isExecution}\n            isOffChainSignature={isOffChainSignature}\n          />\n\n          <Block className={classes.gasCostsContainer}>\n            <TransactionFees\n              gasCostFormatted={gasCostFormatted}\n              isExecution={isExecution}\n              isCreation={isCreation}\n              isOffChainSignature={isOffChainSignature}\n              txEstimationExecutionStatus={txEstimationExecutionStatus}\n            />\n          </Block>\n          <Hairline />\n          <Row align=\"center\" className={classes.buttonRow}>\n            <Modal.Footer.Buttons\n              cancelButtonProps={{ onClick: onClickBack, text: 'Back' }}\n              confirmButtonProps={{\n                onClick: () => onSubmit(txParameters),\n                status: buttonStatus,\n                text: txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : undefined,\n                testId: ADD_OWNER_SUBMIT_BTN_TEST_ID,\n              }}\n            />\n          </Row>\n        </>\n      )}\n    </EditableTxParameters>\n  )\n}\n","import { lg, md, sm } from 'src/theme/variables'\nimport { createStyles } from '@material-ui/core'\n\nexport const styles = createStyles({\n  headingText: {\n    fontSize: md,\n  },\n  formContainer: {\n    padding: `${md} ${lg}`,\n    minHeight: '340px',\n  },\n  ownersText: {\n    marginLeft: sm,\n  },\n  buttonRow: {\n    height: '84px',\n    justifyContent: 'center',\n    gap: '16px',\n  },\n  inputRow: {\n    position: 'relative',\n  },\n  errorText: {\n    position: 'absolute',\n    bottom: '-25px',\n  },\n})\n","import MenuItem from '@material-ui/core/MenuItem'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { ReactElement } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { styles } from './style'\n\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport SelectField from 'src/components/forms/SelectField'\nimport { composeValidators, maxValue, minValue, mustBeInteger, required } from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { Modal } from 'src/components/Modal'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\n\nexport const ADD_OWNER_THRESHOLD_NEXT_BTN_TEST_ID = 'add-owner-threshold-next-btn'\n\nconst useStyles = makeStyles(styles)\n\ntype SubmitProps = {\n  threshold: number\n}\n\ntype ThresholdValues = {\n  threshold: string\n}\n\ntype Props = {\n  onClickBack: () => void\n  onClose: () => void\n  onSubmit: (values: SubmitProps) => void\n  initialValues: ThresholdValues\n}\n\nexport const ThresholdForm = ({ onClickBack, onClose, onSubmit, initialValues }: Props): ReactElement => {\n  const classes = useStyles()\n  const { owners, threshold = 1 } = useSelector(currentSafe) ?? {}\n  const numOptions = owners ? owners.length + 1 : 0\n\n  const handleSubmit = (values: SubmitProps) => {\n    onSubmit(values)\n  }\n\n  return (\n    <>\n      <ModalHeader onClose={onClose} title=\"Add new owner\" subTitle=\"2 of 3\" />\n      <Hairline />\n      <GnoForm initialValues={{ threshold: initialValues.threshold || threshold.toString() }} onSubmit={handleSubmit}>\n        {() => (\n          <>\n            <Block className={classes.formContainer}>\n              <Row>\n                <Paragraph className={classes.headingText} weight=\"bolder\">\n                  Set the required owner confirmations:\n                </Paragraph>\n              </Row>\n              <Row>\n                <Paragraph weight=\"bolder\">Any transaction requires the confirmation of:</Paragraph>\n              </Row>\n              <Row align=\"center\" className={classes.inputRow} margin=\"xl\">\n                <Col xs={2}>\n                  <Field\n                    data-testid=\"threshold-select-input\"\n                    name=\"threshold\"\n                    render={(props) => (\n                      <>\n                        <SelectField {...props} disableError>\n                          {[...Array(Number(numOptions))].map((x, index) => (\n                            <MenuItem key={index} value={`${index + 1}`}>\n                              {index + 1}\n                            </MenuItem>\n                          ))}\n                        </SelectField>\n                        {props.meta.error && props.meta.touched && (\n                          <Paragraph className={classes.errorText} color=\"error\" noMargin>\n                            {props.meta.error}\n                          </Paragraph>\n                        )}\n                      </>\n                    )}\n                    validate={composeValidators(required, mustBeInteger, minValue(1), maxValue(numOptions))}\n                  />\n                </Col>\n                <Col xs={10}>\n                  <Paragraph className={classes.ownersText} color=\"primary\" noMargin size=\"lg\">\n                    out of {numOptions} owner(s)\n                  </Paragraph>\n                </Col>\n              </Row>\n            </Block>\n            <Hairline />\n            <Row align=\"center\" className={classes.buttonRow}>\n              <Modal.Footer.Buttons\n                cancelButtonProps={{ onClick: onClickBack, text: 'Back' }}\n                confirmButtonProps={{\n                  type: 'submit',\n                  text: 'Review',\n                  testId: ADD_OWNER_THRESHOLD_NEXT_BTN_TEST_ID,\n                }}\n              />\n            </Row>\n          </>\n        )}\n      </GnoForm>\n    </>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Modal from 'src/components/Modal'\nimport { addressBookAddOrUpdate } from 'src/logic/addressBook/store/actions'\nimport { getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { checksumAddress } from 'src/utils/checksumAddress'\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\n\nimport { OwnerForm } from './screens/OwnerForm'\nimport { ReviewAddOwner } from './screens/Review'\nimport { ThresholdForm } from './screens/ThresholdForm'\n\nexport type OwnerValues = {\n  ownerAddress: string\n  ownerName: string\n  threshold: string\n}\n\nexport const sendAddOwner = async (\n  values: OwnerValues,\n  safeAddress: string,\n  safeVersion: string,\n  txParameters: TxParameters,\n  dispatch: Dispatch,\n): Promise<void> => {\n  const gnosisSafe = getGnosisSafeInstanceAt(safeAddress, safeVersion)\n  const txData = gnosisSafe.methods.addOwnerWithThreshold(values.ownerAddress, values.threshold).encodeABI()\n\n  const txHash = await dispatch(\n    createTransaction({\n      safeAddress,\n      to: safeAddress,\n      valueInWei: '0',\n      txData,\n      txNonce: txParameters.safeNonce,\n      safeTxGas: txParameters.safeTxGas,\n      ethParameters: txParameters,\n      notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\n    }),\n  )\n\n  if (txHash) {\n    dispatch(addressBookAddOrUpdate(makeAddressBookEntry({ address: values.ownerAddress, name: values.ownerName })))\n  }\n}\n\ntype Props = {\n  isOpen: boolean\n  onClose: () => void\n}\n\nexport const AddOwnerModal = ({ isOpen, onClose }: Props): React.ReactElement => {\n  const [activeScreen, setActiveScreen] = useState('selectOwner')\n  const [values, setValues] = useState<OwnerValues>({ ownerName: '', ownerAddress: '', threshold: '' })\n  const dispatch = useDispatch()\n  const { address: safeAddress = '', currentVersion: safeVersion = '' } = useSelector(currentSafe) ?? {}\n\n  useEffect(\n    () => () => {\n      setActiveScreen('selectOwner')\n      setValues({ ownerName: '', ownerAddress: '', threshold: '' })\n    },\n    [isOpen],\n  )\n\n  const onClickBack = () => {\n    if (activeScreen === 'reviewAddOwner') {\n      setActiveScreen('selectThreshold')\n    } else if (activeScreen === 'selectThreshold') {\n      setActiveScreen('selectOwner')\n    }\n  }\n\n  const ownerSubmitted = (newValues) => {\n    setValues((stateValues) => ({\n      ...stateValues,\n      ownerName: newValues.ownerName,\n      ownerAddress: checksumAddress(newValues.ownerAddress),\n    }))\n    setActiveScreen('selectThreshold')\n  }\n\n  const thresholdSubmitted = (newValues) => {\n    setValues((stateValues) => ({\n      ...stateValues,\n      threshold: newValues.threshold,\n    }))\n    setActiveScreen('reviewAddOwner')\n  }\n\n  const onAddOwner = async (txParameters: TxParameters) => {\n    onClose()\n\n    try {\n      await sendAddOwner(values, safeAddress, safeVersion, txParameters, dispatch)\n      dispatch(addressBookAddOrUpdate(makeAddressBookEntry({ name: values.ownerName, address: values.ownerAddress })))\n    } catch (error) {\n      console.error('Error while removing an owner', error)\n    }\n  }\n\n  return (\n    <Modal\n      description=\"Add owner to Safe\"\n      handleClose={onClose}\n      open={isOpen}\n      paperClassName=\"bigger-modal-window\"\n      title=\"Add owner to Safe\"\n    >\n      <>\n        {activeScreen === 'selectOwner' && (\n          <OwnerForm initialValues={values} onClose={onClose} onSubmit={ownerSubmitted} />\n        )}\n        {activeScreen === 'selectThreshold' && (\n          <ThresholdForm\n            onClickBack={onClickBack}\n            initialValues={{ threshold: values.threshold }}\n            onClose={onClose}\n            onSubmit={thresholdSubmitted}\n          />\n        )}\n        {activeScreen === 'reviewAddOwner' && (\n          <ReviewAddOwner onClickBack={onClickBack} onClose={onClose} onSubmit={onAddOwner} values={values} />\n        )}\n      </>\n    </Modal>\n  )\n}\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nimport { lg, md } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    heading: {\n      padding: lg,\n      justifyContent: 'space-between',\n      boxSizing: 'border-box',\n      height: '74px',\n    },\n    manage: {\n      fontSize: lg,\n    },\n    container: {\n      padding: `${md} ${lg}`,\n      minHeight: '200px',\n    },\n    close: {\n      height: '35px',\n      width: '35px',\n    },\n  }),\n)\n","import { EthHashInfo } from '@gnosis.pm/safe-react-components'\nimport { useDispatch } from 'react-redux'\n\nimport { getExplorerInfo } from 'src/config'\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport TextField from 'src/components/forms/TextField'\nimport { composeValidators, required, validAddressBookName } from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Hairline from 'src/components/layout/Hairline'\nimport Row from 'src/components/layout/Row'\nimport Modal, { Modal as GenericModal } from 'src/components/Modal'\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { addressBookAddOrUpdate } from 'src/logic/addressBook/store/actions'\nimport { NOTIFICATIONS } from 'src/logic/notifications'\nimport enqueueSnackbar from 'src/logic/notifications/store/actions/enqueueSnackbar'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\n\nimport { useStyles } from './style'\n\nexport const RENAME_OWNER_INPUT_TEST_ID = 'rename-owner-input'\nexport const SAVE_OWNER_CHANGES_BTN_TEST_ID = 'save-owner-changes-btn'\n\ntype OwnProps = {\n  isOpen: boolean\n  onClose: () => void\n  owner: OwnerData\n}\n\nexport const EditOwnerModal = ({ isOpen, onClose, owner }: OwnProps): React.ReactElement => {\n  const classes = useStyles()\n  const dispatch = useDispatch()\n\n  const handleSubmit = ({ ownerName }: { ownerName: string }): void => {\n    // Update the value only if the ownerName really changed\n    if (ownerName !== owner.name) {\n      dispatch(addressBookAddOrUpdate(makeAddressBookEntry({ address: owner.address, name: ownerName })))\n      dispatch(enqueueSnackbar(NOTIFICATIONS.OWNER_NAME_CHANGE_EXECUTED_MSG))\n    }\n    onClose()\n  }\n\n  return (\n    <Modal\n      description=\"Edit owner from Safe\"\n      handleClose={onClose}\n      open={isOpen}\n      paperClassName=\"smaller-modal-window\"\n      title=\"Edit owner from Safe\"\n    >\n      <ModalHeader onClose={onClose} title=\"Edit owner name\" />\n      <Hairline />\n      <GnoForm onSubmit={handleSubmit} subscription={{ pristine: true }}>\n        {(...args) => {\n          const pristine = args[2].pristine\n          return (\n            <>\n              <Block className={classes.container}>\n                <Row margin=\"md\">\n                  <Field\n                    component={TextField}\n                    initialValue={owner.name}\n                    name=\"ownerName\"\n                    placeholder=\"Owner name*\"\n                    testId={RENAME_OWNER_INPUT_TEST_ID}\n                    text=\"Owner name*\"\n                    type=\"text\"\n                    validate={composeValidators(required, validAddressBookName)}\n                  />\n                </Row>\n                <Row>\n                  <Block justify=\"center\">\n                    <EthHashInfo\n                      hash={owner.address}\n                      showCopyBtn\n                      showAvatar\n                      explorerUrl={getExplorerInfo(owner.address)}\n                    />\n                  </Block>\n                </Row>\n              </Block>\n              <GenericModal.Footer>\n                <GenericModal.Footer.Buttons\n                  cancelButtonProps={{ onClick: onClose }}\n                  confirmButtonProps={{ disabled: pristine, testId: SAVE_OWNER_CHANGES_BTN_TEST_ID, text: 'Save' }}\n                />\n              </GenericModal.Footer>\n            </>\n          )\n        }}\n      </GnoForm>\n    </Modal>\n  )\n}\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nimport { lg, md } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    formContainer: {\n      padding: `${md} ${lg}`,\n      minHeight: '340px',\n    },\n  }),\n)\n","import { EthHashInfo } from '@gnosis.pm/safe-react-components'\nimport { ReactElement } from 'react'\n\nimport { getExplorerInfo } from 'src/config'\nimport { Modal } from 'src/components/Modal'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\n\nimport { useStyles } from './style'\n\nexport const REMOVE_OWNER_MODAL_NEXT_BTN_TEST_ID = 'remove-owner-next-btn'\n\ninterface CheckOwnerProps {\n  onClose: () => void\n  onSubmit: () => void\n  owner: OwnerData\n}\n\nexport const CheckOwner = ({ onClose, onSubmit, owner }: CheckOwnerProps): ReactElement => {\n  const classes = useStyles()\n\n  return (\n    <>\n      <ModalHeader onClose={onClose} subTitle=\"1 of 3\" title=\"Remove owner\" />\n      <Hairline />\n      <Block className={classes.formContainer}>\n        <Row margin=\"md\">\n          <Paragraph size=\"lg\">Review the owner you want to remove from the active Safe:</Paragraph>\n        </Row>\n        <Row>\n          <Col align=\"center\" xs={12}>\n            <EthHashInfo\n              hash={owner.address}\n              name={owner.name}\n              showCopyBtn\n              showAvatar\n              explorerUrl={getExplorerInfo(owner.address)}\n            />\n          </Col>\n        </Row>\n      </Block>\n      <Modal.Footer>\n        <Modal.Footer.Buttons\n          cancelButtonProps={{ onClick: onClose }}\n          confirmButtonProps={{ onClick: onSubmit, testId: REMOVE_OWNER_MODAL_NEXT_BTN_TEST_ID, text: 'Next' }}\n        />\n      </Modal.Footer>\n    </>\n  )\n}\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nimport { background, border, lg, sm } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    root: {\n      height: '372px',\n    },\n    info: {\n      backgroundColor: background,\n      padding: sm,\n      justifyContent: 'center',\n      textAlign: 'center',\n      flexDirection: 'column',\n    },\n    details: {\n      padding: lg,\n      borderRight: `solid 1px ${border}`,\n      height: '100%',\n    },\n    owners: {\n      overflow: 'auto',\n      height: '100%',\n    },\n    ownersTitle: {\n      padding: lg,\n    },\n    owner: {\n      padding: sm,\n      alignItems: 'center',\n    },\n    name: {\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n    },\n    selectedOwner: {\n      padding: sm,\n      alignItems: 'center',\n      backgroundColor: '#ffe6ea',\n    },\n    gasCostsContainer: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      textAlign: 'center',\n      width: '100%',\n      backgroundColor: background,\n    },\n  }),\n)\n","import { useEffect, useState, Fragment } from 'react'\nimport { useSelector } from 'react-redux'\nimport { EthHashInfo } from '@gnosis.pm/safe-react-components'\n\nimport { getExplorerInfo } from 'src/config'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { getGnosisSafeInstanceAt, SENTINEL_ADDRESS } from 'src/logic/contracts/safeContracts'\nimport { currentSafeWithNames } from 'src/logic/safe/store/selectors'\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\n\nimport { useStyles } from './style'\nimport { Modal } from 'src/components/Modal'\nimport { TransactionFees } from 'src/components/TransactionsFees'\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\n\nexport const REMOVE_OWNER_REVIEW_BTN_TEST_ID = 'remove-owner-review-btn'\n\ntype ReviewRemoveOwnerProps = {\n  onClickBack: () => void\n  onClose: () => void\n  onSubmit: (txParameters: TxParameters) => void\n  owner: OwnerData\n  threshold?: number\n}\n\nexport const ReviewRemoveOwnerModal = ({\n  onClickBack,\n  onClose,\n  onSubmit,\n  owner,\n  threshold = 1,\n}: ReviewRemoveOwnerProps): React.ReactElement => {\n  const classes = useStyles()\n  const [data, setData] = useState('')\n  const {\n    address: safeAddress,\n    name: safeName,\n    owners,\n    currentVersion: safeVersion,\n  } = useSelector(currentSafeWithNames)\n  const numOptions = owners ? owners.length - 1 : 0\n  const [manualSafeTxGas, setManualSafeTxGas] = useState('0')\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\n\n  const {\n    gasLimit,\n    gasEstimation,\n    gasPriceFormatted,\n    gasCostFormatted,\n    txEstimationExecutionStatus,\n    isExecution,\n    isCreation,\n    isOffChainSignature,\n  } = useEstimateTransactionGas({\n    txData: data,\n    txRecipient: safeAddress,\n    safeTxGas: manualSafeTxGas,\n    manualGasPrice,\n    manualGasLimit,\n  })\n\n  const [buttonStatus] = useEstimationStatus(txEstimationExecutionStatus)\n\n  useEffect(() => {\n    let isCurrent = true\n\n    if (!threshold) {\n      console.error(\"Threshold value was not define, tx can't be executed\")\n      return\n    }\n\n    const calculateRemoveOwnerData = async () => {\n      try {\n        // FixMe: if the order returned by the service is the same as in the contracts\n        //  the data lookup can be removed from here\n        const gnosisSafe = getGnosisSafeInstanceAt(safeAddress, safeVersion)\n        const safeOwners = await gnosisSafe.methods.getOwners().call()\n        const index = safeOwners.findIndex((ownerAddress) => sameAddress(ownerAddress, owner.address))\n        const prevAddress = index === 0 ? SENTINEL_ADDRESS : safeOwners[index - 1]\n        const txData = gnosisSafe.methods.removeOwner(prevAddress, owner.address, threshold).encodeABI()\n\n        if (isCurrent) {\n          setData(txData)\n        }\n      } catch (error) {\n        console.error('Error calculating ERC721 transfer data:', error.message)\n      }\n    }\n    calculateRemoveOwnerData()\n\n    return () => {\n      isCurrent = false\n    }\n  }, [safeAddress, safeVersion, owner.address, threshold])\n\n  const closeEditModalCallback = (txParameters: TxParameters) => {\n    const oldGasPrice = gasPriceFormatted\n    const newGasPrice = txParameters.ethGasPrice\n    const oldSafeTxGas = gasEstimation\n    const newSafeTxGas = txParameters.safeTxGas\n\n    if (newGasPrice && oldGasPrice !== newGasPrice) {\n      setManualGasPrice(txParameters.ethGasPrice)\n    }\n\n    if (txParameters.ethGasLimit && gasLimit !== txParameters.ethGasLimit) {\n      setManualGasLimit(txParameters.ethGasLimit)\n    }\n\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\n      setManualSafeTxGas(newSafeTxGas)\n    }\n  }\n\n  return (\n    <EditableTxParameters\n      isOffChainSignature={isOffChainSignature}\n      isExecution={isExecution}\n      ethGasLimit={gasLimit}\n      ethGasPrice={gasPriceFormatted}\n      safeTxGas={gasEstimation}\n      closeEditModalCallback={closeEditModalCallback}\n    >\n      {(txParameters, toggleEditMode) => (\n        <>\n          <ModalHeader onClose={onClose} title=\"Remove owner\" subTitle=\"3 of 3\" />\n          <Hairline />\n          <Block>\n            <Row className={classes.root}>\n              {/* Details */}\n              <Col layout=\"column\" xs={4}>\n                <Block className={classes.details}>\n                  <Block margin=\"lg\">\n                    <Paragraph color=\"primary\" noMargin size=\"lg\">\n                      Details\n                    </Paragraph>\n                  </Block>\n                  <Block margin=\"lg\">\n                    <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                      Safe name\n                    </Paragraph>\n                    <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                      {safeName}\n                    </Paragraph>\n                  </Block>\n                  <Block margin=\"lg\">\n                    <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                      Any transaction requires the confirmation of:\n                    </Paragraph>\n                    <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                      {`${threshold} out of ${numOptions} owner(s)`}\n                    </Paragraph>\n                  </Block>\n                </Block>\n              </Col>\n              {/* Owners */}\n              <Col className={classes.owners} layout=\"column\" xs={8}>\n                <Row className={classes.ownersTitle}>\n                  <Paragraph color=\"primary\" noMargin size=\"lg\">\n                    {`${numOptions} Safe owner(s)`}\n                  </Paragraph>\n                </Row>\n                <Hairline />\n                {owners?.map(\n                  (safeOwner) =>\n                    !sameAddress(safeOwner.address, owner.address) && (\n                      <Fragment key={safeOwner.address}>\n                        <Row className={classes.owner}>\n                          <Col align=\"center\" xs={12}>\n                            <EthHashInfo\n                              hash={safeOwner.address}\n                              name={safeOwner.name}\n                              showCopyBtn\n                              showAvatar\n                              explorerUrl={getExplorerInfo(safeOwner.address)}\n                            />\n                          </Col>\n                        </Row>\n                        <Hairline />\n                      </Fragment>\n                    ),\n                )}\n                <Row align=\"center\" className={classes.info}>\n                  <Paragraph color=\"primary\" noMargin size=\"md\" weight=\"bolder\">\n                    REMOVING OWNER &darr;\n                  </Paragraph>\n                </Row>\n                <Hairline />\n                <Row className={classes.selectedOwner} data-testid=\"remove-owner-review\">\n                  <Col align=\"center\" xs={12}>\n                    <EthHashInfo\n                      hash={owner.address}\n                      name={owner.name}\n                      showCopyBtn\n                      showAvatar\n                      explorerUrl={getExplorerInfo(owner.address)}\n                    />\n                  </Col>\n                </Row>\n                <Hairline />\n              </Col>\n            </Row>\n          </Block>\n          <Hairline />\n\n          {/* Tx Parameters */}\n          <TxParametersDetail\n            txParameters={txParameters}\n            onEdit={toggleEditMode}\n            compact={false}\n            isTransactionCreation={isCreation}\n            isTransactionExecution={isExecution}\n            isOffChainSignature={isOffChainSignature}\n          />\n\n          {txEstimationExecutionStatus === EstimationStatus.LOADING ? null : (\n            <Block className={classes.gasCostsContainer}>\n              <TransactionFees\n                gasCostFormatted={gasCostFormatted}\n                isExecution={isExecution}\n                isCreation={isCreation}\n                isOffChainSignature={isOffChainSignature}\n                txEstimationExecutionStatus={txEstimationExecutionStatus}\n              />\n            </Block>\n          )}\n          <Modal.Footer withoutBorder>\n            <Modal.Footer.Buttons\n              cancelButtonProps={{ onClick: onClickBack, text: 'Back' }}\n              confirmButtonProps={{\n                onClick: () => onSubmit(txParameters),\n                status: buttonStatus,\n                text: txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : undefined,\n                type: 'submit',\n                testId: REMOVE_OWNER_REVIEW_BTN_TEST_ID,\n              }}\n            />\n          </Modal.Footer>\n        </>\n      )}\n    </EditableTxParameters>\n  )\n}\n","import { createStyles, makeStyles } from '@material-ui/core/styles'\n\nimport { lg, md, sm } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    headingText: {\n      fontSize: md,\n    },\n    formContainer: {\n      padding: `${md} ${lg}`,\n      minHeight: '340px',\n    },\n    ownersText: {\n      marginLeft: sm,\n    },\n    inputRow: {\n      position: 'relative',\n    },\n    errorText: {\n      position: 'absolute',\n      bottom: '-25px',\n    },\n  }),\n)\n","import MenuItem from '@material-ui/core/MenuItem'\nimport { ReactElement } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { useStyles } from './style'\n\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport SelectField from 'src/components/forms/SelectField'\nimport { composeValidators, maxValue, minValue, mustBeInteger, required } from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { Modal } from 'src/components/Modal'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\n\nexport const REMOVE_OWNER_THRESHOLD_NEXT_BTN_TEST_ID = 'remove-owner-threshold-next-btn'\n\ntype ThresholdValues = {\n  threshold: string\n}\n\ntype Props = {\n  onClickBack: () => void\n  onClose: () => void\n  onSubmit: (txParameters: TxParameters) => void\n  initialValues: ThresholdValues\n}\n\nexport const ThresholdForm = ({ onClickBack, onClose, onSubmit, initialValues }: Props): ReactElement => {\n  const classes = useStyles()\n  const { owners, threshold = 1 } = useSelector(currentSafe) ?? {}\n  const ownersCount = owners?.length ?? 0\n  const handleSubmit = (values) => {\n    onSubmit(values)\n  }\n  const defaultThreshold = threshold > 1 && threshold === ownersCount ? threshold - 1 : threshold\n\n  return (\n    <>\n      <ModalHeader onClose={onClose} subTitle=\"2 of 3\" title=\"Remove owner\" />\n      <Hairline />\n      <GnoForm\n        initialValues={{ threshold: initialValues.threshold || defaultThreshold.toString() }}\n        onSubmit={handleSubmit}\n      >\n        {() => {\n          const numOptions = ownersCount > 1 ? ownersCount - 1 : 1\n\n          return (\n            <>\n              <Block className={classes.formContainer}>\n                <Row>\n                  <Paragraph className={classes.headingText} weight=\"bolder\">\n                    Set the required owner confirmations:\n                  </Paragraph>\n                </Row>\n                <Row>\n                  <Paragraph weight=\"bolder\">Any transaction requires the confirmation of:</Paragraph>\n                </Row>\n                <Row align=\"center\" className={classes.inputRow} margin=\"xl\">\n                  <Col xs={2}>\n                    <Field\n                      data-testid=\"threshold-select-input\"\n                      name=\"threshold\"\n                      render={(props) => (\n                        <>\n                          <SelectField {...props} disableError>\n                            {[...Array(Number(numOptions))].map((x, index) => (\n                              <MenuItem key={index} value={`${index + 1}`}>\n                                {index + 1}\n                              </MenuItem>\n                            ))}\n                          </SelectField>\n                          {props.meta.error && props.meta.touched && (\n                            <Paragraph className={classes.errorText} color=\"error\" noMargin>\n                              {props.meta.error}\n                            </Paragraph>\n                          )}\n                        </>\n                      )}\n                      validate={composeValidators(required, mustBeInteger, minValue(1), maxValue(numOptions))}\n                    />\n                  </Col>\n                  <Col xs={10}>\n                    <Paragraph className={classes.ownersText} color=\"primary\" noMargin size=\"lg\">\n                      out of {ownersCount ? ownersCount - 1 : 0} owner(s)\n                    </Paragraph>\n                  </Col>\n                </Row>\n              </Block>\n              <Modal.Footer>\n                <Modal.Footer.Buttons\n                  cancelButtonProps={{ onClick: onClickBack, text: 'Back' }}\n                  confirmButtonProps={{ testId: REMOVE_OWNER_THRESHOLD_NEXT_BTN_TEST_ID, text: 'Review' }}\n                />\n              </Modal.Footer>\n            </>\n          )\n        }}\n      </GnoForm>\n    </>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\n\nimport { CheckOwner } from './screens/CheckOwner'\nimport { ReviewRemoveOwnerModal } from './screens/Review'\nimport { ThresholdForm } from './screens/ThresholdForm'\n\nimport Modal from 'src/components/Modal'\nimport { SENTINEL_ADDRESS, getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\n\ntype OwnerValues = OwnerData & {\n  threshold: string\n}\n\nexport const sendRemoveOwner = async (\n  values: OwnerValues,\n  safeAddress: string,\n  safeVersion: string,\n  ownerAddressToRemove: string,\n  dispatch: Dispatch,\n  txParameters: TxParameters,\n): Promise<void> => {\n  const gnosisSafe = getGnosisSafeInstanceAt(safeAddress, safeVersion)\n  const safeOwners = await gnosisSafe.methods.getOwners().call()\n  const index = safeOwners.findIndex(\n    (ownerAddress) => ownerAddress.toLowerCase() === ownerAddressToRemove.toLowerCase(),\n  )\n  const prevAddress = index === 0 ? SENTINEL_ADDRESS : safeOwners[index - 1]\n  const txData = gnosisSafe.methods.removeOwner(prevAddress, ownerAddressToRemove, values.threshold).encodeABI()\n\n  dispatch(\n    createTransaction({\n      safeAddress,\n      to: safeAddress,\n      valueInWei: '0',\n      txData,\n      txNonce: txParameters.safeNonce,\n      safeTxGas: txParameters.safeTxGas,\n      ethParameters: txParameters,\n      notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\n    }),\n  )\n}\n\ntype RemoveOwnerProps = {\n  isOpen: boolean\n  onClose: () => void\n  owner: OwnerData\n}\n\nexport const RemoveOwnerModal = ({ isOpen, onClose, owner }: RemoveOwnerProps): React.ReactElement => {\n  const [activeScreen, setActiveScreen] = useState('checkOwner')\n  const [values, setValues] = useState<OwnerValues>({ ...owner, threshold: '' })\n  const dispatch = useDispatch()\n  const { address: safeAddress = '', currentVersion: safeVersion = '' } = useSelector(currentSafe) ?? {}\n\n  useEffect(\n    () => () => {\n      setActiveScreen('checkOwner')\n    },\n    [isOpen],\n  )\n\n  const onClickBack = () => {\n    if (activeScreen === 'reviewRemoveOwner') {\n      setActiveScreen('selectThreshold')\n    } else if (activeScreen === 'selectThreshold') {\n      setActiveScreen('checkOwner')\n    }\n  }\n\n  const ownerSubmitted = () => {\n    setActiveScreen('selectThreshold')\n  }\n\n  const thresholdSubmitted = (newValues) => {\n    const cpValues = { ...values, threshold: newValues.threshold }\n    setValues(cpValues)\n    setActiveScreen('reviewRemoveOwner')\n  }\n\n  const onRemoveOwner = (txParameters: TxParameters) => {\n    onClose()\n    sendRemoveOwner(values, safeAddress, safeVersion, owner.address, dispatch, txParameters)\n  }\n\n  return (\n    <Modal\n      description=\"Remove owner from Safe\"\n      handleClose={onClose}\n      open={isOpen}\n      paperClassName=\"bigger-modal-window\"\n      title=\"Remove owner from Safe\"\n    >\n      <>\n        {activeScreen === 'checkOwner' && <CheckOwner onClose={onClose} onSubmit={ownerSubmitted} owner={owner} />}\n        {activeScreen === 'selectThreshold' && (\n          <ThresholdForm\n            onClickBack={onClickBack}\n            initialValues={{ threshold: values.threshold }}\n            onClose={onClose}\n            onSubmit={thresholdSubmitted}\n          />\n        )}\n        {activeScreen === 'reviewRemoveOwner' && (\n          <ReviewRemoveOwnerModal\n            onClickBack={onClickBack}\n            onClose={onClose}\n            onSubmit={onRemoveOwner}\n            owner={owner}\n            threshold={Number(values.threshold)}\n          />\n        )}\n      </>\n    </Modal>\n  )\n}\n","import { lg, md, sm } from 'src/theme/variables'\nimport { createStyles, makeStyles } from '@material-ui/core'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    formContainer: {\n      padding: `${md} ${lg}`,\n      minHeight: '340px',\n    },\n    owner: {\n      alignItems: 'center',\n    },\n    address: {\n      marginRight: sm,\n    },\n  }),\n)\n","import { Mutator } from 'final-form'\nimport { ReactElement } from 'react'\nimport { useSelector } from 'react-redux'\nimport { OnChange } from 'react-final-form-listeners'\n\nimport AddressInput from 'src/components/forms/AddressInput'\nimport Field from 'src/components/forms/Field'\nimport GnoForm from 'src/components/forms/GnoForm'\nimport TextField from 'src/components/forms/TextField'\nimport {\n  addressIsNotCurrentSafe,\n  composeValidators,\n  required,\n  uniqueAddress,\n  validAddressBookName,\n} from 'src/components/forms/validator'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { ScanQRWrapper } from 'src/components/ScanQRModal/ScanQRWrapper'\nimport { Modal } from 'src/components/Modal'\nimport { currentSafe } from 'src/logic/safe/store/selectors'\nimport { currentNetworkAddressBookAsMap } from 'src/logic/addressBook/store/selectors'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\nimport { isValidAddress } from 'src/utils/isValidAddress'\n\nimport { useStyles } from './style'\nimport { getExplorerInfo } from 'src/config'\nimport { EthHashInfo } from '@gnosis.pm/safe-react-components'\n\nexport const REPLACE_OWNER_NAME_INPUT_TEST_ID = 'replace-owner-name-input'\nexport const REPLACE_OWNER_ADDRESS_INPUT_TEST_ID = 'replace-owner-address-testid'\nexport const REPLACE_OWNER_NEXT_BTN_TEST_ID = 'replace-owner-next-btn'\n\nimport { OwnerValues } from '../..'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\n\nconst formMutators: Record<\n  string,\n  Mutator<{ setOwnerAddress: { address: string }; setOwnerName: { name: string } }>\n> = {\n  setOwnerAddress: (args, state, utils) => {\n    utils.changeValue(state, 'ownerAddress', () => args[0])\n  },\n  setOwnerName: (args, state, utils) => {\n    utils.changeValue(state, 'ownerName', () => args[0])\n  },\n}\n\ntype NewOwnerProps = {\n  ownerAddress: string\n  ownerName: string\n}\n\ntype OwnerFormProps = {\n  onClose: () => void\n  onSubmit: (values: NewOwnerProps) => void\n  owner: OwnerData\n  initialValues?: OwnerValues\n}\n\nexport const OwnerForm = ({ onClose, onSubmit, owner, initialValues }: OwnerFormProps): ReactElement => {\n  const classes = useStyles()\n\n  const handleSubmit = (values: NewOwnerProps) => {\n    onSubmit(values)\n  }\n  const addressBookMap = useSelector(currentNetworkAddressBookAsMap)\n  const { address: safeAddress = '', owners } = useSelector(currentSafe) ?? {}\n  const ownerDoesntExist = uniqueAddress(owners)\n  const ownerAddressIsNotSafeAddress = addressIsNotCurrentSafe(safeAddress)\n\n  return (\n    <>\n      <ModalHeader onClose={onClose} title=\"Replace owner\" subTitle=\"1 of 2\" />\n      <Hairline />\n      <GnoForm\n        formMutators={formMutators}\n        onSubmit={handleSubmit}\n        initialValues={{\n          ownerName: initialValues?.name,\n          ownerAddress: initialValues?.address,\n        }}\n      >\n        {(...args) => {\n          const mutators = args[3]\n\n          const handleScan = (value, closeQrModal) => {\n            let scannedAddress = value\n\n            if (scannedAddress.startsWith('ethereum:')) {\n              scannedAddress = scannedAddress.replace('ethereum:', '')\n            }\n\n            mutators.setOwnerAddress(scannedAddress)\n            closeQrModal()\n          }\n\n          return (\n            <>\n              <Block className={classes.formContainer}>\n                <Row>\n                  <Paragraph>\n                    Review the owner you want to replace from the active Jupisky. Then specify the new owner you want to\n                    replace it with:\n                  </Paragraph>\n                </Row>\n                <Row>\n                  <Paragraph>Current owner</Paragraph>\n                </Row>\n                <Row className={classes.owner}>\n                  <Col align=\"center\" xs={12}>\n                    <EthHashInfo\n                      hash={owner.address}\n                      name={owner.name}\n                      showCopyBtn\n                      showAvatar\n                      explorerUrl={getExplorerInfo(owner.address)}\n                    />\n                  </Col>\n                </Row>\n                <Row>\n                  <Paragraph>New owner</Paragraph>\n                </Row>\n                <Row margin=\"md\">\n                  <Col xs={8}>\n                    <Field\n                      component={TextField}\n                      name=\"ownerName\"\n                      placeholder=\"Owner name*\"\n                      testId={REPLACE_OWNER_NAME_INPUT_TEST_ID}\n                      text=\"Owner name*\"\n                      type=\"text\"\n                      validate={composeValidators(required, validAddressBookName)}\n                    />\n                    <OnChange name=\"ownerAddress\">\n                      {async (address: string) => {\n                        if (isValidAddress(address)) {\n                          const ownerName = addressBookMap[address]?.name\n                          if (ownerName) {\n                            mutators.setOwnerName(ownerName)\n                          }\n                        }\n                      }}\n                    </OnChange>\n                  </Col>\n                </Row>\n                <Row margin=\"md\">\n                  <Col xs={8}>\n                    <AddressInput\n                      fieldMutator={mutators.setOwnerAddress}\n                      name=\"ownerAddress\"\n                      placeholder=\"Owner address*\"\n                      testId={REPLACE_OWNER_ADDRESS_INPUT_TEST_ID}\n                      text=\"Owner address*\"\n                      validators={[ownerDoesntExist, ownerAddressIsNotSafeAddress]}\n                    />\n                  </Col>\n                  <Col center=\"xs\" className={classes} middle=\"xs\" xs={1}>\n                    <ScanQRWrapper handleScan={handleScan} />\n                  </Col>\n                </Row>\n              </Block>\n              <Modal.Footer>\n                <Modal.Footer.Buttons\n                  cancelButtonProps={{ onClick: onClose }}\n                  confirmButtonProps={{ testId: REPLACE_OWNER_NEXT_BTN_TEST_ID, text: 'Next' }}\n                />\n              </Modal.Footer>\n            </>\n          )\n        }}\n      </GnoForm>\n    </>\n  )\n}\n","import { background, border, lg, sm } from 'src/theme/variables'\nimport { createStyles, makeStyles } from '@material-ui/core'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    root: {\n      height: '372px',\n    },\n    info: {\n      backgroundColor: background,\n      padding: sm,\n      justifyContent: 'center',\n      textAlign: 'center',\n      flexDirection: 'column',\n    },\n    details: {\n      padding: lg,\n      borderRight: `solid 1px ${border}`,\n      height: '100%',\n    },\n    owners: {\n      overflow: 'auto',\n      height: '100%',\n    },\n    ownersTitle: {\n      padding: lg,\n    },\n    owner: {\n      padding: sm,\n      alignItems: 'center',\n    },\n    name: {\n      textOverflow: 'ellipsis',\n      overflow: 'hidden',\n    },\n    selectedOwnerRemoved: {\n      padding: sm,\n      alignItems: 'center',\n      backgroundColor: '#ffe6ea',\n    },\n    selectedOwnerAdded: {\n      padding: sm,\n      alignItems: 'center',\n      backgroundColor: '#f7f5f5',\n    },\n    gasCostsContainer: {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      textAlign: 'center',\n      width: '100%',\n      backgroundColor: background,\n    },\n  }),\n)\n","import { useEffect, useState, Fragment } from 'react'\nimport { useSelector } from 'react-redux'\nimport { EthHashInfo } from '@gnosis.pm/safe-react-components'\n\nimport { getExplorerInfo } from 'src/config'\nimport Block from 'src/components/layout/Block'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Paragraph from 'src/components/layout/Paragraph'\nimport Row from 'src/components/layout/Row'\nimport { getGnosisSafeInstanceAt, SENTINEL_ADDRESS } from 'src/logic/contracts/safeContracts'\nimport { currentSafeWithNames } from 'src/logic/safe/store/selectors'\nimport { useEstimationStatus } from 'src/logic/hooks/useEstimationStatus'\nimport { TxParametersDetail } from 'src/routes/safe/components/Transactions/helpers/TxParametersDetail'\nimport { EstimationStatus, useEstimateTransactionGas } from 'src/logic/hooks/useEstimateTransactionGas'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { Modal } from 'src/components/Modal'\nimport { TransactionFees } from 'src/components/TransactionsFees'\nimport { EditableTxParameters } from 'src/routes/safe/components/Transactions/helpers/EditableTxParameters'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\n\nimport { useStyles } from './style'\nimport { ModalHeader } from 'src/routes/safe/components/Balances/SendModal/screens/ModalHeader'\n\nexport const REPLACE_OWNER_SUBMIT_BTN_TEST_ID = 'replace-owner-submit-btn'\n\ntype ReplaceOwnerProps = {\n  onClose: () => void\n  onClickBack: () => void\n  onSubmit: (txParameters: TxParameters) => void\n  owner: OwnerData\n  newOwner: {\n    address: string\n    name: string\n  }\n}\n\nexport const ReviewReplaceOwnerModal = ({\n  onClickBack,\n  onClose,\n  onSubmit,\n  owner,\n  newOwner,\n}: ReplaceOwnerProps): React.ReactElement => {\n  const classes = useStyles()\n  const [data, setData] = useState('')\n  const {\n    address: safeAddress,\n    name: safeName,\n    owners,\n    threshold = 1,\n    currentVersion: safeVersion,\n  } = useSelector(currentSafeWithNames)\n  const [manualSafeTxGas, setManualSafeTxGas] = useState('0')\n  const [manualGasPrice, setManualGasPrice] = useState<string | undefined>()\n  const [manualGasLimit, setManualGasLimit] = useState<string | undefined>()\n\n  const {\n    gasLimit,\n    gasEstimation,\n    gasPriceFormatted,\n    gasCostFormatted,\n    txEstimationExecutionStatus,\n    isExecution,\n    isCreation,\n    isOffChainSignature,\n  } = useEstimateTransactionGas({\n    txData: data,\n    txRecipient: safeAddress,\n    safeTxGas: manualSafeTxGas,\n    manualGasPrice,\n    manualGasLimit,\n  })\n\n  const [buttonStatus] = useEstimationStatus(txEstimationExecutionStatus)\n\n  useEffect(() => {\n    let isCurrent = true\n    const calculateReplaceOwnerData = async () => {\n      const gnosisSafe = getGnosisSafeInstanceAt(safeAddress, safeVersion)\n      const safeOwners = await gnosisSafe.methods.getOwners().call()\n      const index = safeOwners.findIndex((ownerAddress) => sameAddress(ownerAddress, owner.address))\n      const prevAddress = index === 0 ? SENTINEL_ADDRESS : safeOwners[index - 1]\n      const txData = gnosisSafe.methods.swapOwner(prevAddress, owner.address, newOwner.address).encodeABI()\n      if (isCurrent) {\n        setData(txData)\n      }\n    }\n\n    calculateReplaceOwnerData()\n    return () => {\n      isCurrent = false\n    }\n  }, [owner.address, safeAddress, safeVersion, newOwner.address])\n\n  const closeEditModalCallback = (txParameters: TxParameters) => {\n    const oldGasPrice = gasPriceFormatted\n    const newGasPrice = txParameters.ethGasPrice\n    const oldSafeTxGas = gasEstimation\n    const newSafeTxGas = txParameters.safeTxGas\n\n    if (newGasPrice && oldGasPrice !== newGasPrice) {\n      setManualGasPrice(txParameters.ethGasPrice)\n    }\n\n    if (txParameters.ethGasLimit && gasLimit !== txParameters.ethGasLimit) {\n      setManualGasLimit(txParameters.ethGasLimit)\n    }\n\n    if (newSafeTxGas && oldSafeTxGas !== newSafeTxGas) {\n      setManualSafeTxGas(newSafeTxGas)\n    }\n  }\n\n  return (\n    <EditableTxParameters\n      isOffChainSignature={isOffChainSignature}\n      isExecution={isExecution}\n      ethGasLimit={gasLimit}\n      ethGasPrice={gasPriceFormatted}\n      safeTxGas={gasEstimation}\n      closeEditModalCallback={closeEditModalCallback}\n    >\n      {(txParameters, toggleEditMode) => (\n        <>\n          <ModalHeader onClose={onClose} title=\"Replace owner\" subTitle=\"2 of 2\" />\n          <Hairline />\n          <Block>\n            <Row className={classes.root}>\n              <Col layout=\"column\" xs={4}>\n                <Block className={classes.details}>\n                  <Block margin=\"lg\">\n                    <Paragraph color=\"primary\" noMargin size=\"lg\">\n                      Details\n                    </Paragraph>\n                  </Block>\n                  <Block margin=\"lg\">\n                    <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                      Safe name\n                    </Paragraph>\n                    <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                      {safeName}\n                    </Paragraph>\n                  </Block>\n                  <Block margin=\"lg\">\n                    <Paragraph color=\"disabled\" noMargin size=\"sm\">\n                      Any transaction requires the confirmation of:\n                    </Paragraph>\n                    <Paragraph className={classes.name} color=\"primary\" noMargin size=\"lg\" weight=\"bolder\">\n                      {`${threshold} out of ${owners?.length || 0} owner(s)`}\n                    </Paragraph>\n                  </Block>\n                </Block>\n              </Col>\n              <Col className={classes.owners} layout=\"column\" xs={8}>\n                <Row className={classes.ownersTitle}>\n                  <Paragraph color=\"primary\" noMargin size=\"lg\">\n                    {`${owners?.length || 0} Safe owner(s)`}\n                  </Paragraph>\n                </Row>\n                <Hairline />\n                {owners?.map(\n                  (safeOwner) =>\n                    !sameAddress(safeOwner.address, owner.address) && (\n                      <Fragment key={safeOwner.address}>\n                        <Row className={classes.owner}>\n                          <Col align=\"center\" xs={12}>\n                            <EthHashInfo\n                              hash={safeOwner.address}\n                              name={safeOwner.name}\n                              showCopyBtn\n                              showAvatar\n                              explorerUrl={getExplorerInfo(safeOwner.address)}\n                            />\n                          </Col>\n                        </Row>\n                        <Hairline />\n                      </Fragment>\n                    ),\n                )}\n                <Row align=\"center\" className={classes.info}>\n                  <Paragraph color=\"primary\" noMargin size=\"md\" weight=\"bolder\">\n                    REMOVING OWNER &darr;\n                  </Paragraph>\n                </Row>\n                <Hairline />\n                <Row className={classes.selectedOwnerRemoved} data-testid=\"remove-owner-review\">\n                  <Col align=\"center\" xs={12}>\n                    <EthHashInfo\n                      hash={owner.address}\n                      name={owner.name}\n                      showCopyBtn\n                      showAvatar\n                      explorerUrl={getExplorerInfo(owner.address)}\n                    />\n                  </Col>\n                </Row>\n                <Row align=\"center\" className={classes.info}>\n                  <Paragraph color=\"primary\" noMargin size=\"md\" weight=\"bolder\">\n                    ADDING NEW OWNER &darr;\n                  </Paragraph>\n                </Row>\n                <Hairline />\n                <Row className={classes.selectedOwnerAdded} data-testid=\"add-owner-review\">\n                  <Col align=\"center\" xs={12}>\n                    <EthHashInfo\n                      hash={newOwner.address}\n                      name={newOwner.name}\n                      showCopyBtn\n                      showAvatar\n                      explorerUrl={getExplorerInfo(newOwner.address)}\n                    />\n                  </Col>\n                </Row>\n                <Hairline />\n              </Col>\n            </Row>\n          </Block>\n          <Hairline />\n\n          {/* Tx Parameters */}\n          <TxParametersDetail\n            txParameters={txParameters}\n            onEdit={toggleEditMode}\n            compact={false}\n            isTransactionCreation={isCreation}\n            isTransactionExecution={isExecution}\n            isOffChainSignature={isOffChainSignature}\n          />\n\n          <Block className={classes.gasCostsContainer}>\n            <TransactionFees\n              gasCostFormatted={gasCostFormatted}\n              isExecution={isExecution}\n              isCreation={isCreation}\n              isOffChainSignature={isOffChainSignature}\n              txEstimationExecutionStatus={txEstimationExecutionStatus}\n            />\n          </Block>\n          <Modal.Footer withoutBorder>\n            <Modal.Footer.Buttons\n              cancelButtonProps={{ onClick: onClickBack, text: 'Back' }}\n              confirmButtonProps={{\n                onClick: () => onSubmit(txParameters),\n                status: buttonStatus,\n                text: txEstimationExecutionStatus === EstimationStatus.LOADING ? 'Estimating' : undefined,\n                type: 'submit',\n                testId: REPLACE_OWNER_SUBMIT_BTN_TEST_ID,\n              }}\n            />\n          </Modal.Footer>\n        </>\n      )}\n    </EditableTxParameters>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport Modal from 'src/components/Modal'\nimport { addressBookAddOrUpdate } from 'src/logic/addressBook/store/actions'\nimport { SENTINEL_ADDRESS, getGnosisSafeInstanceAt } from 'src/logic/contracts/safeContracts'\nimport { TX_NOTIFICATION_TYPES } from 'src/logic/safe/transactions'\nimport { createTransaction } from 'src/logic/safe/store/actions/createTransaction'\nimport { checksumAddress } from 'src/utils/checksumAddress'\nimport { makeAddressBookEntry } from 'src/logic/addressBook/model/addressBook'\nimport { sameAddress } from 'src/logic/wallets/ethAddresses'\nimport { Dispatch } from 'src/logic/safe/store/actions/types.d'\n\nimport { OwnerForm } from 'src/routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/OwnerForm'\nimport { ReviewReplaceOwnerModal } from 'src/routes/safe/components/Settings/ManageOwners/ReplaceOwnerModal/screens/Review'\nimport { TxParameters } from 'src/routes/safe/container/hooks/useTransactionParameters'\nimport { isValidAddress } from 'src/utils/isValidAddress'\nimport { OwnerData } from 'src/routes/safe/components/Settings/ManageOwners/dataFetcher'\nimport { currentSafeCurrentVersion } from 'src/logic/safe/store/selectors'\nimport { extractSafeAddress } from 'src/routes/routes'\n\nexport type OwnerValues = {\n  address: string\n  name: string\n}\n\nexport const sendReplaceOwner = async (\n  newOwner: OwnerValues,\n  safeAddress: string,\n  safeVersion: string,\n  ownerAddressToRemove: string,\n  dispatch: Dispatch,\n  txParameters: TxParameters,\n): Promise<void> => {\n  const gnosisSafe = getGnosisSafeInstanceAt(safeAddress, safeVersion)\n  const safeOwners = await gnosisSafe.methods.getOwners().call()\n  const index = safeOwners.findIndex((ownerAddress) => sameAddress(ownerAddress, ownerAddressToRemove))\n  const prevAddress = index === 0 ? SENTINEL_ADDRESS : safeOwners[index - 1]\n  const txData = gnosisSafe.methods.swapOwner(prevAddress, ownerAddressToRemove, newOwner.address).encodeABI()\n\n  const txHash = await dispatch(\n    createTransaction({\n      safeAddress,\n      to: safeAddress,\n      valueInWei: '0',\n      txData,\n      txNonce: txParameters.safeNonce,\n      safeTxGas: txParameters.safeTxGas,\n      ethParameters: txParameters,\n      notifiedTransaction: TX_NOTIFICATION_TYPES.SETTINGS_CHANGE_TX,\n    }),\n  )\n\n  if (txHash) {\n    // update the AB\n    dispatch(addressBookAddOrUpdate(makeAddressBookEntry(newOwner)))\n  }\n}\n\ntype ReplaceOwnerProps = {\n  isOpen: boolean\n  onClose: () => void\n  owner: OwnerData\n}\n\nexport const ReplaceOwnerModal = ({ isOpen, onClose, owner }: ReplaceOwnerProps): React.ReactElement => {\n  const [activeScreen, setActiveScreen] = useState('checkOwner')\n  const [newOwner, setNewOwner] = useState({ address: '', name: '' })\n  const dispatch = useDispatch()\n  const safeAddress = extractSafeAddress()\n  const safeVersion = useSelector(currentSafeCurrentVersion) as string\n\n  useEffect(\n    () => () => {\n      setActiveScreen('checkOwner')\n      setNewOwner({ address: '', name: '' })\n    },\n    [isOpen],\n  )\n\n  const onClickBack = () => setActiveScreen('checkOwner')\n\n  const ownerSubmitted = (newValues) => {\n    const { ownerAddress, ownerName } = newValues\n\n    if (isValidAddress(ownerAddress)) {\n      const checksumAddr = checksumAddress(ownerAddress)\n      setNewOwner({ address: checksumAddr, name: ownerName })\n      setActiveScreen('reviewReplaceOwner')\n    }\n  }\n\n  const onReplaceOwner = async (txParameters: TxParameters) => {\n    onClose()\n    try {\n      await sendReplaceOwner(newOwner, safeAddress, safeVersion, owner.address, dispatch, txParameters)\n      dispatch(addressBookAddOrUpdate(makeAddressBookEntry(newOwner)))\n    } catch (error) {\n      console.error('Error while removing an owner', error)\n    }\n  }\n\n  return (\n    <Modal\n      description=\"Replace owner from Safe\"\n      handleClose={onClose}\n      open={isOpen}\n      paperClassName=\"bigger-modal-window\"\n      title=\"Replace owner from Safe\"\n    >\n      <>\n        {activeScreen === 'checkOwner' && (\n          <OwnerForm onClose={onClose} onSubmit={ownerSubmitted} initialValues={newOwner} owner={owner} />\n        )}\n        {activeScreen === 'reviewReplaceOwner' && (\n          <ReviewReplaceOwnerModal\n            onClickBack={onClickBack}\n            onClose={onClose}\n            onSubmit={onReplaceOwner}\n            owner={owner}\n            newOwner={newOwner}\n          />\n        )}\n      </>\n    </Modal>\n  )\n}\n","import { List } from 'immutable'\n\nimport { TableColumn } from 'src/components/Table/types.d'\nimport { AddressBookState } from 'src/logic/addressBook/model/addressBook'\n\nexport const OWNERS_TABLE_NAME_ID = 'name'\nexport const OWNERS_TABLE_ADDRESS_ID = 'address'\nexport const OWNERS_TABLE_ACTIONS_ID = 'actions'\n\nexport type OwnerData = { address: string; name: string }\n\nexport const getOwnerData = (owners: AddressBookState): OwnerData[] => {\n  return owners.map((owner) => ({\n    [OWNERS_TABLE_NAME_ID]: owner.name,\n    [OWNERS_TABLE_ADDRESS_ID]: owner.address,\n  }))\n}\n\nexport const generateColumns = (): List<TableColumn> => {\n  const nameColumn: TableColumn = {\n    id: OWNERS_TABLE_NAME_ID,\n    order: false,\n    formatTypeSort: (value: string) => value.toLowerCase(),\n    disablePadding: false,\n    label: 'Name',\n    width: 150,\n    custom: false,\n    align: 'left',\n  }\n\n  const addressColumn: TableColumn = {\n    id: OWNERS_TABLE_ADDRESS_ID,\n    order: false,\n    disablePadding: false,\n    label: 'Address',\n    custom: false,\n    align: 'left',\n  }\n\n  const actionsColumn: TableColumn = {\n    id: OWNERS_TABLE_ACTIONS_ID,\n    order: false,\n    disablePadding: false,\n    label: '',\n    custom: true,\n  }\n\n  return List([nameColumn, addressColumn, actionsColumn])\n}\n","import { createStyles, makeStyles } from '@material-ui/core'\n\nimport { lg, sm } from 'src/theme/variables'\n\nexport const useStyles = makeStyles(\n  createStyles({\n    formContainer: {\n      minHeight: '420px',\n    },\n    title: {\n      padding: lg,\n      paddingBottom: 0,\n    },\n    annotation: {\n      paddingLeft: lg,\n    },\n    hide: {\n      '&:hover': {\n        backgroundColor: '#f7f5f5',\n      },\n      '&:hover $actions': {\n        visibility: 'initial',\n      },\n    },\n    actions: {\n      justifyContent: 'flex-end',\n      visibility: 'hidden',\n      minWidth: '100px',\n      gap: '16px',\n    },\n    noBorderBottom: {\n      '& > td': {\n        borderBottom: 'none',\n      },\n    },\n    editOwnerIcon: {\n      cursor: 'pointer',\n    },\n    replaceOwnerIcon: {\n      marginLeft: lg,\n      cursor: 'pointer',\n    },\n    controlsRow: {\n      backgroundColor: 'white',\n      padding: lg,\n      borderRadius: sm,\n    },\n    removeOwnerIcon: {\n      marginLeft: lg,\n      cursor: 'pointer',\n    },\n  }),\n)\n","import { useState, useEffect, ReactElement } from 'react'\nimport { EthHashInfo, Icon } from '@gnosis.pm/safe-react-components'\nimport TableCell from '@material-ui/core/TableCell'\nimport TableContainer from '@material-ui/core/TableContainer'\nimport TableRow from '@material-ui/core/TableRow'\nimport cn from 'classnames'\n\nimport { AddOwnerModal } from './AddOwnerModal'\nimport { EditOwnerModal } from './EditOwnerModal'\nimport { RemoveOwnerModal } from './RemoveOwnerModal'\nimport { ReplaceOwnerModal } from './ReplaceOwnerModal'\nimport { OWNERS_TABLE_ADDRESS_ID, generateColumns, getOwnerData, OwnerData } from './dataFetcher'\nimport { useStyles } from './style'\n\nimport { getExplorerInfo } from 'src/config'\nimport ButtonHelper from 'src/components/ButtonHelper'\nimport Table from 'src/components/Table'\nimport { cellWidth } from 'src/components/Table/TableHead'\nimport Block from 'src/components/layout/Block'\nimport Button from 'src/components/layout/Button'\nimport Col from 'src/components/layout/Col'\nimport Hairline from 'src/components/layout/Hairline'\nimport Heading from 'src/components/layout/Heading'\nimport Paragraph from 'src/components/layout/Paragraph/index'\nimport Row from 'src/components/layout/Row'\nimport { useAnalytics, SETTINGS_EVENTS } from 'src/utils/googleAnalytics'\nimport { AddressBookState } from 'src/logic/addressBook/model/addressBook'\n\nexport const RENAME_OWNER_BTN_TEST_ID = 'rename-owner-btn'\nexport const REMOVE_OWNER_BTN_TEST_ID = 'remove-owner-btn'\nexport const ADD_OWNER_BTN_TEST_ID = 'add-owner-btn'\nexport const REPLACE_OWNER_BTN_TEST_ID = 'replace-owner-btn'\nexport const OWNERS_ROW_TEST_ID = 'owners-row'\n\ntype Props = {\n  granted: boolean\n  owners: AddressBookState\n}\n\nconst ManageOwners = ({ granted, owners }: Props): ReactElement => {\n  const { trackEvent } = useAnalytics()\n  const classes = useStyles()\n\n  const [selectedOwner, setSelectedOwner] = useState<OwnerData | undefined>()\n  const [modalsStatus, setModalStatus] = useState({\n    showAddOwner: false,\n    showRemoveOwner: false,\n    showReplaceOwner: false,\n    showEditOwner: false,\n  })\n\n  const onShow = (action, row?: OwnerData) => () => {\n    setModalStatus((prevState) => ({\n      ...prevState,\n      [`show${action}`]: !prevState[`show${action}`],\n    }))\n    if (row) {\n      setSelectedOwner(row)\n    }\n  }\n\n  const onHide = (action) => () => {\n    setModalStatus((prevState) => ({\n      ...prevState,\n      [`show${action}`]: !Boolean(prevState[`show${action}`]),\n    }))\n    setSelectedOwner(undefined)\n  }\n\n  useEffect(() => {\n    trackEvent(SETTINGS_EVENTS.OWNERS)\n  }, [trackEvent])\n\n  const columns = generateColumns()\n  const autoColumns = columns.filter((c) => !c.custom)\n  const ownerData = getOwnerData(owners)\n\n  return (\n    <>\n      <Block className={classes.formContainer}>\n        <Heading className={classes.title} tag=\"h2\">\n          Manage Jupisky Owners\n        </Heading>\n        <Paragraph className={classes.annotation}>\n          Add, remove and replace owners or rename existing owners. Owner names are only stored locally and never shared\n          with Jupisky or any third parties.\n        </Paragraph>\n        <TableContainer>\n          <Table\n            columns={columns}\n            data={ownerData}\n            defaultFixed\n            defaultOrderBy={OWNERS_TABLE_ADDRESS_ID}\n            disablePagination\n            label=\"Owners\"\n            noBorder\n            size={ownerData.length}\n          >\n            {(sortedData) =>\n              sortedData.map((row, index) => (\n                <TableRow\n                  className={cn(classes.hide, index >= 3 && index === sortedData.size - 1 && classes.noBorderBottom)}\n                  data-testid={OWNERS_ROW_TEST_ID}\n                  key={index}\n                >\n                  {autoColumns.map((column: any) => (\n                    <TableCell align={column.align} component=\"td\" key={column.id} style={cellWidth(column.width)}>\n                      {column.id === OWNERS_TABLE_ADDRESS_ID ? (\n                        <Block justify=\"left\">\n                          <EthHashInfo\n                            hash={row[column.id]}\n                            showCopyBtn\n                            showAvatar\n                            explorerUrl={getExplorerInfo(row[column.id])}\n                          />\n                        </Block>\n                      ) : (\n                        row[column.id]\n                      )}\n                    </TableCell>\n                  ))}\n                  <TableCell component=\"td\">\n                    <Row align=\"end\" className={classes.actions}>\n                      <ButtonHelper onClick={onShow('EditOwner', row)} dataTestId={RENAME_OWNER_BTN_TEST_ID}>\n                        <Icon size=\"sm\" type=\"edit\" color=\"icon\" tooltip=\"Edit owner\" />\n                      </ButtonHelper>\n                      {granted && (\n                        <>\n                          <ButtonHelper onClick={onShow('ReplaceOwner', row)} dataTestId={REPLACE_OWNER_BTN_TEST_ID}>\n                            <Icon size=\"sm\" type=\"replaceOwner\" color=\"icon\" tooltip=\"Replace owner\" />\n                          </ButtonHelper>\n                          {ownerData.length > 1 && (\n                            <ButtonHelper onClick={onShow('RemoveOwner', row)} dataTestId={REMOVE_OWNER_BTN_TEST_ID}>\n                              <Icon size=\"sm\" type=\"delete\" color=\"error\" tooltip=\"Remove owner\" />\n                            </ButtonHelper>\n                          )}\n                        </>\n                      )}\n                    </Row>\n                  </TableCell>\n                </TableRow>\n              ))\n            }\n          </Table>\n        </TableContainer>\n      </Block>\n      {granted && (\n        <>\n          <Hairline />\n          <Row align=\"end\" className={classes.controlsRow} grow>\n            <Col end=\"xs\">\n              <Button\n                color=\"primary\"\n                onClick={onShow('AddOwner')}\n                size=\"small\"\n                testId={ADD_OWNER_BTN_TEST_ID}\n                variant=\"contained\"\n              >\n                Add new owner\n              </Button>\n            </Col>\n          </Row>\n        </>\n      )}\n      <AddOwnerModal isOpen={modalsStatus.showAddOwner} onClose={onHide('AddOwner')} />\n      {selectedOwner && (\n        <>\n          <RemoveOwnerModal\n            isOpen={modalsStatus.showRemoveOwner}\n            onClose={onHide('RemoveOwner')}\n            owner={selectedOwner}\n          />\n          <ReplaceOwnerModal\n            isOpen={modalsStatus.showReplaceOwner}\n            onClose={onHide('ReplaceOwner')}\n            owner={selectedOwner}\n          />\n          <EditOwnerModal isOpen={modalsStatus.showEditOwner} onClose={onHide('EditOwner')} owner={selectedOwner} />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ManageOwners\n"],"sourceRoot":""}